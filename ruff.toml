
extend-exclude = [
  "docs",
  ".venv",
  "venv",
  "typings",
  "build",
  "_dev",
  "shiny/__init__.py",
]

[lint]

extend-ignore = [
  "E501",  # E501: Line too long
  "PT011", # PT011 `pytest.raises(ValueError)` is too broad
  # Conflicting lint rules: https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "E111",   # * indentation-with-invalid-multiple (E111)
  "E114",   # * indentation-with-invalid-multiple-comment (E114)
  "E117",   # * over-indented (E117)
  "D206",   # * indent-with-spaces (D206)
  "D300",   # * triple-single-quotes (D300)
  "Q000",   # * bad-quotes-inline-string (Q000)
  "Q001",   # * bad-quotes-multiline-string (Q001)
  "Q002",   # * bad-quotes-docstring (Q002)
  "Q003",   # * avoidable-escaped-quote (Q003)
  "COM812", # * missing-trailing-comma (COM812)
  "COM819", # * prohibited-trailing-comma (COM819)
  "ISC001", # * single-line-implicit-string-concatenation (ISC001)
  "ISC002", # * multi-line-implicit-string-concatenation (ISC002)
]


# Rules to add https://docs.astral.sh/ruff/rules/
# Default `select = ["E4", "E7", "E9", "F"]`
# E4, E7, E9; pycodestyle: https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
# F; Pyflakes: https://docs.astral.sh/ruff/rules/#pyflakes-f
# I; isort: https://docs.astral.sh/ruff/rules/#isort-i
# B; flake8-bugbear: https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
# Q; flake8-quotes: https://docs.astral.sh/ruff/rules/#flake8-quotes-q
# C90; mccabe: https://docs.astral.sh/ruff/rules/complex-structure/
# COM; Commas: https://docs.astral.sh/ruff/rules/#flake8-commas-com
# C4; flake8-comprehensions: https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
# DTZ; flake8-datetimez: https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
# FA102; flake8-future-annotations: https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
# ISC; flake8-implicit-str-concat: https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
# ICN; flake8-import-conventions: https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
# PIE; flake8-pie: https://docs.astral.sh/ruff/rules/#flake8-pie-pie
# PYI013; flake8-pyi Non-empty class body must not contain `...`: https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi
# PYI030; flake8-pyi Multiple literal members in a union: https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi
# PYI034; flake8-pyi `__new__` methods usually reutrn `Self`: https://docs.astral.sh/ruff/rules/#flake8-pyi-pyi
# PT; flake8-pytest-style: https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
# SIM118; flake8-simplify Use `key {operator} dict`: https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
# TCH; flake8-type-checking: https://docs.astral.sh/ruff/rules/#flake8-type-checking-tch
# FIX; flake8-fixme: https://docs.astral.sh/ruff/rules/#flake8-fixme-fix
# PGH; pygrep-hooks: https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
# FLY; flynt: https://docs.astral.sh/ruff/rules/#flynt-fly
# NPY; NumPy-specific rules: https://docs.astral.sh/ruff/rules/#numpy-specific-rules-npy
# RUF005; Ruff specific rules Consider {expression} instead of concatenation: https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
# RUF100; Ruff specific rules Unused `noqa` directive https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
extend-select = [
  # "C90", # Many false positives
  # "DTZ", # Dates with timezones are different from dates without timezones

  "E",
  "I",
  "B",
  "Q",
  "COM",
  "C4",
  "FA102",
  "ISC",
  "ICN",
  "PIE",
  "PYI013",
  "PYI030",
  "PYI034",
  "PT",
  "SIM118",
  "TCH",
  # "FIX",
  # "PGH",
  "FLY",
  "NPY",
  "RUF005",
  "RUF100",
]

[lint.extend-per-file-ignores]
# F403: 'from module import *' used; unable to detect undefined names
# Also ignore `F403` in all `__init__.py` files.
"shiny/__init__.py" = ["F403"]
# B018: Found useless expression. Either assign it to a variable or remove it.
# This check is incompatible with the `express` framework.
"**/app-express.py" = ["B018"]
"**/*express/**/*.py" = ["B018"]
# T20: no `print()` statements
"examples/**" = ["T20"]
"scripts/**" = ["T20"]
"shiny/_template_utils.py" = ["T20"]
"shiny/templates/**" = ["T20"]
"shiny/api-examples/**" = ["T20"]
"tests/**" = ["T20"]
# I: isort
"shiny/experimental/ui/__init__.py" = ["I"]
# PT019: pytest
"tests/pytest/test_output_transformer.py" = ["PT019"]


[format]
docstring-code-format = true
line-ending = "lf"
indent-style = "space"
quote-style = "double"
