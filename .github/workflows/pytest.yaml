name: Run tests

on:
  workflow_dispatch:
  push:
    branches: ["main", "rc-*"]
  pull_request:
  merge_group:
  release:
    types: [published]
  schedule:
    - cron: "0 8 * * *"

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # "3.10" must be a string; otherwise it is interpreted as 3.1.
        python-version: ["3.12", "3.11", "3.10", "3.9", "3.8"]
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Setup py-shiny
        id: install
        uses: ./.github/py-shiny/setup
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run unit tests
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make check-tests

      - name: Type check
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make check-types

      - name: Lint code
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make check-lint

      - name: Verify code formatting
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make check-format

  pypi:
    name: "Deploy to PyPI"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [check]
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Python 3.10"
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install https://github.com/rstudio/py-htmltools/tarball/main
          make install-deps
          make install
      - name: "Build Package"
        run: |
          make dist

      # test deploy ----
      - name: "Test Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.event.release.name, 'TEST')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      ## prod deploy ----
      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.event.release.name, 'shiny')
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
