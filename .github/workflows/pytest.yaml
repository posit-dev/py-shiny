name: Run tests

on:
  workflow_dispatch:
  push:
    branches: ["main", "rc-*"]
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # "3.10" must be a string; otherwise it is interpreted as 3.1.
        python-version: [3.7, 3.8, 3.9, "3.10", 3.11]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Check out and install htmltools
        run: |
          cd ..
          git clone https://github.com/rstudio/py-htmltools.git
          cd py-htmltools
          pip install wheel
          make install

      # - name: Check out and install fontawesome
      #   run: |
      #     cd ..
      #     git clone https://github.com/rstudio/py-fontawesome.git
      #     cd py-fontawesome
      #     pip install -r requirements-dev.txt
      #     make install

      - name: Install dependencies
        run: pip install -e ".[dev,docs,test]"

      - name: Install
        id: install
        run: |
          make install

      - name: Run unit tests
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make test

      - name: Type check with pyright
        if: matrix.python-version >= 3.8 && steps.install.outcome == 'success' && (success() || failure())
        run: |
          make pyright

      - name: Lint with flake8
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make lint

      - name: black and isort
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make check

      - name: Build API docs
        if: steps.install.outcome == 'success' && (success() || failure())
        env:
          SHINYLIVE_SRC: ""
        run: |
          cd docs && make html

      - name: Run e2e tests
        if: steps.install.outcome == 'success' && (success() || failure())
        run: |
          make e2e

  deploy:
    name: "Deploy to PyPI"
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - name: "Set up Python 3.8"
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,docs,test]"
      - name: "Build Package"
        run: |
          make dist

      # test deploy ----
      - name: "Test Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.event.release.name, 'TEST')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      ## prod deploy ----
      - name: "Deploy to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
        if: startsWith(github.event.release.name, 'shiny')
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
