{
  "version": 3,
  "sources": ["../../../../js/dataframe/styles.scss", "../../../../js/node_modules/preact/src/util.js", "../../../../js/node_modules/preact/src/options.js", "../../../../js/node_modules/preact/src/create-element.js", "../../../../js/node_modules/preact/src/component.js", "../../../../js/node_modules/preact/src/create-context.js", "../../../../js/node_modules/preact/src/constants.js", "../../../../js/node_modules/preact/src/diff/children.js", "../../../../js/node_modules/preact/src/diff/props.js", "../../../../js/node_modules/preact/src/diff/index.js", "../../../../js/node_modules/preact/src/render.js", "../../../../js/node_modules/preact/src/clone-element.js", "../../../../js/node_modules/preact/src/diff/catch-error.js", "../../../../js/node_modules/preact/hooks/src/index.js", "../../../../js/node_modules/preact/compat/src/util.js", "../../../../js/node_modules/preact/compat/src/PureComponent.js", "../../../../js/node_modules/preact/compat/src/memo.js", "../../../../js/node_modules/preact/compat/src/forwardRef.js", "../../../../js/node_modules/preact/compat/src/Children.js", "../../../../js/node_modules/preact/compat/src/suspense.js", "../../../../js/node_modules/preact/compat/src/suspense-list.js", "../../../../js/node_modules/preact/compat/src/portals.js", "../../../../js/node_modules/preact/compat/src/render.js", "../../../../js/node_modules/preact/compat/src/index.js", "../../../../js/node_modules/@tanstack/table-core/src/utils.ts", "../../../../js/node_modules/@tanstack/table-core/src/core/column.ts", "../../../../js/node_modules/@tanstack/table-core/src/core/headers.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/ColumnSizing.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Expanding.ts", "../../../../js/node_modules/@tanstack/table-core/src/filterFns.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Filters.ts", "../../../../js/node_modules/@tanstack/table-core/src/aggregationFns.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Grouping.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Ordering.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Pagination.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Pinning.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/RowSelection.ts", "../../../../js/node_modules/@tanstack/table-core/src/sortingFns.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Sorting.ts", "../../../../js/node_modules/@tanstack/table-core/src/features/Visibility.ts", "../../../../js/node_modules/@tanstack/table-core/src/core/table.ts", "../../../../js/node_modules/@tanstack/table-core/src/core/cell.ts", "../../../../js/node_modules/@tanstack/table-core/src/core/row.ts", "../../../../js/node_modules/@tanstack/table-core/src/columnHelper.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getCoreRowModel.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/filterRowsUtils.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getFilteredRowModel.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getFacetedRowModel.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getFacetedUniqueValues.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getFacetedMinMaxValues.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getSortedRowModel.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getGroupedRowModel.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getExpandedRowModel.ts", "../../../../js/node_modules/@tanstack/table-core/src/utils/getPaginationRowModel.ts", "../../../../js/node_modules/@tanstack/react-table/src/index.tsx", "../../../../js/node_modules/@tanstack/react-virtual/build/lib/_virtual/_rollupPluginBabelHelpers.mjs", "../../../../js/node_modules/@tanstack/virtual-core/build/lib/_virtual/_rollupPluginBabelHelpers.mjs", "../../../../js/node_modules/@tanstack/virtual-core/src/utils.ts", "../../../../js/node_modules/@tanstack/virtual-core/src/index.ts", "../../../../js/node_modules/@tanstack/react-virtual/src/index.tsx", "../../../../js/node_modules/preact/compat/client.mjs", "../../../../js/dataframe/dom-utils.tsx", "../../../../js/dataframe/filter-numeric.tsx", "../../../../js/dataframe/filter.tsx", "../../../../js/dataframe/immutable-set.tsx", "../../../../js/dataframe/selection.tsx", "../../../../js/dataframe/sort-arrows.tsx", "../../../../js/dataframe/tabindex-group.ts", "../../../../js/dataframe/table-summary.tsx", "../../../../js/dataframe/index.tsx"],
  "sourcesContent": ["export default `\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n.shiny-data-grid {\n  --shiny-datagrid-font-size: 0.9em;\n  --shiny-datagrid-padding-x: 0.5em;\n  --shiny-datagrid-padding-y: 0.3em;\n  --shiny-datagrid-padding: var(--shiny-datagrid-padding-y)\n    var(--shiny-datagrid-padding-x);\n  --shiny-datagrid-grid-header-bgcolor: var(--bs-light, #eee);\n  --shiny-datagrid-grid-header-gridlines-color: var(--bs-border-color, #ccc);\n  --shiny-datagrid-grid-header-gridlines-style: solid;\n  --shiny-datagrid-grid-gridlines-color: var(--bs-border-color, #ccc);\n  --shiny-datagrid-grid-gridlines-style: solid;\n  --shiny-datagrid-table-header-bottom-border: 1px solid;\n  --shiny-datagrid-table-top-border: 1px solid;\n  --shiny-datagrid-table-bottom-border: 1px solid;\n  --shiny-datagrid-grid-body-hover-bgcolor: var(\n    --shiny-datagrid-grid-header-bgcolor\n  );\n  --shiny-datagrid-grid-body-selected-bgcolor: #b4d5fe;\n  --shiny-datagrid-grid-body-selected-color: var(--bs-dark);\n}\n\n.shiny-data-grid svg.sort-arrow {\n  display: inline-block;\n  width: 0.85em;\n  height: 0.85em;\n  margin-bottom: 0.15em;\n}\n\n.shiny-data-grid {\n  max-width: 100%;\n}\n.shiny-data-grid > table {\n  border-collapse: separate;\n  border-spacing: 0;\n}\n.shiny-data-grid > table > thead {\n  position: sticky;\n  top: 0;\n}\n.shiny-data-grid > table > thead > tr > th {\n  text-align: left;\n  white-space: nowrap;\n}\n.shiny-data-grid > table > thead > tr > th:focus-visible {\n  outline: 5px auto Highlight;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n.shiny-data-grid > table.filtering > thead > tr:nth-last-child(2) > th {\n  border-bottom: none;\n}\n.shiny-data-grid > table.filtering > thead > tr.filters > th {\n  font-weight: unset;\n  padding-top: 0;\n  /* Slight boost to bottom padding */\n  padding-bottom: var(--shiny-datagrid-padding-x);\n}\n.shiny-data-grid > table.filtering > thead > tr.filters > th > input {\n  width: 100%;\n}\n\n.shiny-data-grid.shiny-data-grid-table {\n  border-top: var(--shiny-datagrid-table-top-border);\n}\n.shiny-data-grid.shiny-data-grid-table.scrolling {\n  border-bottom: var(--shiny-datagrid-table-bottom-border);\n}\n.shiny-data-grid.shiny-data-grid-table > table > thead > tr:last-child > th {\n  border-bottom: var(--shiny-datagrid-table-header-bottom-border);\n}\n.shiny-data-grid.shiny-data-grid-table > table > tbody > tr[aria-selected=true] {\n  --shiny-datagrid-grid-gridlines-color: var(\n    --shiny-datagrid-grid-body-selected-bgcolor\n  );\n  background-color: var(--shiny-datagrid-grid-body-selected-bgcolor);\n  color: var(--shiny-datagrid-grid-body-selected-color);\n}\n\n/*\n *\n * # GRID STYLES\n *\n */\n.shiny-data-grid.shiny-data-grid-grid > table {\n  font-size: var(--shiny-datagrid-font-size);\n}\n.shiny-data-grid.shiny-data-grid-grid > table > thead > tr > th,\n.shiny-data-grid.shiny-data-grid-grid > table > thead > tr > td {\n  background-color: var(--shiny-datagrid-grid-header-bgcolor);\n  padding: var(--shiny-datagrid-padding);\n}\n.shiny-data-grid.shiny-data-grid-grid > table > tbody > tr:focus-visible {\n  outline: 5px auto Highlight;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n.shiny-data-grid.shiny-data-grid-grid > table > tbody > tr:hover {\n  --shiny-datagrid-grid-gridlines-color: inherit;\n  background-color: var(--shiny-datagrid-grid-body-hover-bgcolor);\n}\n.shiny-data-grid.shiny-data-grid-grid > table > tbody > tr[aria-selected=true] {\n  --shiny-datagrid-grid-gridlines-color: var(\n    --shiny-datagrid-grid-body-selected-bgcolor\n  );\n  background-color: var(--shiny-datagrid-grid-body-selected-bgcolor);\n  color: var(--shiny-datagrid-grid-body-selected-color);\n}\n.shiny-data-grid.shiny-data-grid-grid > table > tbody > tr > td {\n  padding: var(--shiny-datagrid-padding);\n}\n\n/* ## Grid borders */\n.shiny-data-grid.shiny-data-grid-grid > table {\n  border-collapse: separate;\n}\n.shiny-data-grid.shiny-data-grid-grid > table > thead > tr:first-child > th {\n  border-top-style: var(--shiny-datagrid-grid-gridlines-style);\n}\n.shiny-data-grid.shiny-data-grid-grid > table > thead > tr > th {\n  border: 1px var(--shiny-datagrid-grid-gridlines-style) var(--shiny-datagrid-grid-header-gridlines-color);\n  border-top-style: none;\n  border-left-style: none;\n}\n.shiny-data-grid.shiny-data-grid-grid > table > thead > tr > th:first-child {\n  border-left-style: var(--shiny-datagrid-grid-gridlines-style);\n}\n.shiny-data-grid.shiny-data-grid-grid > table > tbody > tr > td {\n  border: 1px var(--shiny-datagrid-grid-gridlines-style) var(--shiny-datagrid-grid-gridlines-color);\n  border-top-style: none;\n  border-left-style: none;\n}\n.shiny-data-grid.shiny-data-grid-grid > table > tbody > tr > td:first-child {\n  border-left-style: var(--shiny-datagrid-grid-gridlines-style);\n}\n.shiny-data-grid.shiny-data-grid-grid.scrolling {\n  border: var(--shiny-datagrid-grid-gridlines-style) 1px var(--shiny-datagrid-grid-header-gridlines-color);\n}\n.shiny-data-grid.shiny-data-grid-grid.scrolling > table > thead > tr:first-child > th {\n  border-top-style: none;\n}\n.shiny-data-grid.shiny-data-grid-grid.scrolling > table > tbody > tr:last-child > td {\n  border-bottom-style: none;\n}\n.shiny-data-grid.shiny-data-grid-grid.scrolling > table > thead > tr > th:first-child,\n.shiny-data-grid.shiny-data-grid-grid.scrolling > table > tbody > tr > td:first-child {\n  border-left-style: none;\n}\n.shiny-data-grid.shiny-data-grid-grid.scrolling > table > thead > tr > th:last-child,\n.shiny-data-grid.shiny-data-grid-grid.scrolling > table > tbody > tr > td:last-child {\n  border-right-style: none;\n}`;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\nimport { isArray } from '../util';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// In cases of bailing due to strict-equality we have to reset force as well\n\t\t\t\t\tc._force = false;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function (vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function () {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function (props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function (child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function (props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate =\n\tSuspenseList.prototype.componentDidMount = function () {\n\t\t// Iterate through all children after mounting for two reasons:\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t\t//    The nodes can now be completely consumed from the linked list.\n\t\t// 2. Handle nodes that might have gotten resolved between render and\n\t\t//    componentDidMount.\n\t\tthis._map.forEach((node, child) => {\n\t\t\tresolve(this, child, node);\n\t\t});\n\t};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function () {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS =\n\t/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\nconst ON_ANI = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;\nconst CAMEL_REPLACE = /[A-Z0-9]/g;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/\n\t\t: /fil|che|ra/\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nconst classNameDescriptorNonEnumberable = {\n\tenumerable: false,\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nfunction handleDomVNode(vnode) {\n\tlet props = vnode.props,\n\t\ttype = vnode.type,\n\t\tnormalizedProps = {};\n\n\tfor (let i in props) {\n\t\tlet value = props[i];\n\n\t\tif (\n\t\t\t(i === 'value' && 'defaultValue' in props && value == null) ||\n\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t(IS_DOM && i === 'children' && type === 'noscript') ||\n\t\t\ti === 'class' ||\n\t\t\ti === 'className'\n\t\t) {\n\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t// a default value\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet lowerCased = i.toLowerCase();\n\t\tif (i === 'defaultValue' && 'value' in props && props.value == null) {\n\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\ti = 'value';\n\t\t} else if (i === 'download' && value === true) {\n\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t// value will be used as the file name and the file will be called\n\t\t\t// \"true\" upon downloading it.\n\t\t\tvalue = '';\n\t\t} else if (lowerCased === 'ondoubleclick') {\n\t\t\ti = 'ondblclick';\n\t\t} else if (\n\t\t\tlowerCased === 'onchange' &&\n\t\t\t(type === 'input' || type === 'textarea') &&\n\t\t\t!onChangeInputType(props.type)\n\t\t) {\n\t\t\tlowerCased = i = 'oninput';\n\t\t} else if (lowerCased === 'onfocus') {\n\t\t\ti = 'onfocusin';\n\t\t} else if (lowerCased === 'onblur') {\n\t\t\ti = 'onfocusout';\n\t\t} else if (ON_ANI.test(i)) {\n\t\t\ti = lowerCased;\n\t\t} else if (type.indexOf('-') === -1 && CAMEL_PROPS.test(i)) {\n\t\t\ti = i.replace(CAMEL_REPLACE, '-$&').toLowerCase();\n\t\t} else if (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\t// Add support for onInput and onChange, see #3561\n\t\t// if we have an oninput prop already change it to oninputCapture\n\t\tif (lowerCased === 'oninput') {\n\t\t\ti = lowerCased;\n\t\t\tif (normalizedProps[i]) {\n\t\t\t\ti = 'oninputCapture';\n\t\t\t}\n\t\t}\n\n\t\tnormalizedProps[i] = value;\n\t}\n\n\t// Add support for array select values: <select multiple value={[]} />\n\tif (\n\t\ttype == 'select' &&\n\t\tnormalizedProps.multiple &&\n\t\tArray.isArray(normalizedProps.value)\n\t) {\n\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tchild.props.selected =\n\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t});\n\t}\n\n\t// Adding support for defaultValue in select tag\n\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tif (normalizedProps.multiple) {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t} else {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (props.class && !props.className) {\n\t\tnormalizedProps.class = props.class;\n\t\tObject.defineProperty(\n\t\t\tnormalizedProps,\n\t\t\t'className',\n\t\t\tclassNameDescriptorNonEnumberable\n\t\t);\n\t} else if (props.className && !props.class) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t} else if (props.class && props.className) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t}\n\n\tvnode.props = normalizedProps;\n}\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\t// only normalize props on Element nodes\n\tif (typeof vnode.type === 'string') {\n\t\thandleDomVNode(vnode);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function (vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\nconst oldDiffed = options.diffed;\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = function (vnode) {\n\tif (oldDiffed) {\n\t\toldDiffed(vnode);\n\t}\n\n\tconst props = vnode.props;\n\tconst dom = vnode._dom;\n\n\tif (\n\t\tdom != null &&\n\t\tvnode.type === 'textarea' &&\n\t\t'value' in props &&\n\t\tprops.value !== dom.value\n\t) {\n\t\tdom.value = props.value == null ? '' : props.value;\n\t}\n\n\tcurrentComponent = null;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport { is } from './util';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (!is(_instance._value, getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "import { TableState, Updater } from './types'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\nexport type RequiredKeys<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type Overwrite<T, U extends { [TKey in keyof T]?: any }> = Omit<\n  T,\n  keyof U\n> &\n  U\n\nexport type UnionToIntersection<T> = (\n  T extends any ? (x: T) => any : never\n) extends (x: infer R) => any\n  ? R\n  : never\n\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\n\ntype ComputeRange<\n  N extends number,\n  Result extends Array<unknown> = []\n> = Result['length'] extends N\n  ? Result\n  : ComputeRange<N, [...Result, Result['length']]>\ntype Index40 = ComputeRange<40>[number]\n\n// Is this type a tuple?\ntype IsTuple<T> = T extends readonly any[] & { length: infer Length }\n  ? Length extends Index40\n    ? T\n    : never\n  : never\n\n// If this type is a tuple, what indices are allowed?\ntype AllowedIndexes<\n  Tuple extends ReadonlyArray<any>,\n  Keys extends number = never\n> = Tuple extends readonly []\n  ? Keys\n  : Tuple extends readonly [infer _, ...infer Tail]\n  ? AllowedIndexes<Tail, Keys | Tail['length']>\n  : Keys\n\nexport type DeepKeys<T> = unknown extends T\n  ? keyof T\n  : object extends T\n  ? string\n  : T extends readonly any[] & IsTuple<T>\n  ? AllowedIndexes<T> | DeepKeysPrefix<T, AllowedIndexes<T>>\n  : T extends any[]\n  ? never & 'Dynamic length array indexing is not supported'\n  : T extends Date\n  ? never\n  : T extends object\n  ? (keyof T & string) | DeepKeysPrefix<T, keyof T>\n  : never\n\ntype DeepKeysPrefix<T, TPrefix> = TPrefix extends keyof T & (number | string)\n  ? `${TPrefix}.${DeepKeys<T[TPrefix]> & string}`\n  : never\n\nexport type DeepValue<T, TProp> = T extends Record<string | number, any>\n  ? TProp extends `${infer TBranch}.${infer TDeepProp}`\n    ? DeepValue<T[TBranch], TDeepProp>\n    : T[TProp & string]\n  : never\n\nexport type NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport type Getter<TValue> = <TTValue = TValue>() => NoInfer<TTValue>\n\n///\n\nexport function functionalUpdate<T>(updater: Updater<T>, input: T): T {\n  return typeof updater === 'function'\n    ? (updater as (input: T) => T)(input)\n    : updater\n}\n\nexport function noop() {\n  //\n}\n\nexport function makeStateUpdater<K extends keyof TableState>(\n  key: K,\n  instance: unknown\n) {\n  return (updater: Updater<TableState[K]>) => {\n    ;(instance as any).setState(<TTableState>(old: TTableState) => {\n      return {\n        ...old,\n        [key]: functionalUpdate(updater, (old as any)[key]),\n      }\n    })\n  }\n}\n\ntype AnyFunction = (...args: any) => any\n\nexport function isFunction<T extends AnyFunction>(d: any): d is T {\n  return d instanceof Function\n}\n\nexport function isNumberArray(d: any): d is number[] {\n  return Array.isArray(d) && d.every(val => typeof val === 'number')\n}\n\nexport function flattenBy<TNode>(\n  arr: TNode[],\n  getChildren: (item: TNode) => TNode[]\n) {\n  const flat: TNode[] = []\n\n  const recurse = (subArr: TNode[]) => {\n    subArr.forEach(item => {\n      flat.push(item)\n      const children = getChildren(item)\n      if (children?.length) {\n        recurse(children)\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  }\n): () => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return () => {\n    let depTime: number\n    if (opts.key && opts.debug) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug) {\n      if (opts?.debug()) {\n        const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n        const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n        const resultFpsPercentage = resultEndTime / 16\n\n        const pad = (str: number | string, num: number) => {\n          str = String(str)\n          while (str.length < num) {\n            str = ' ' + str\n          }\n          return str\n        }\n\n        console.info(\n          `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n          `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120)\n            )}deg 100% 31%);`,\n          opts?.key\n        )\n      }\n    }\n\n    return result!\n  }\n}\n", "import {\n  Column,\n  Table,\n  AccessorFn,\n  ColumnDef,\n  RowData,\n  ColumnDefResolved,\n} from '../types'\nimport { memo } from '../utils'\n\nexport interface CoreColumn<TData extends RowData, TValue> {\n  id: string\n  depth: number\n  accessorFn?: AccessorFn<TData, TValue>\n  columnDef: ColumnDef<TData, TValue>\n  columns: Column<TData, TValue>[]\n  parent?: Column<TData, TValue>\n  getFlatColumns: () => Column<TData, TValue>[]\n  getLeafColumns: () => Column<TData, TValue>[]\n}\n\nexport function createColumn<TData extends RowData, TValue>(\n  table: Table<TData>,\n  columnDef: ColumnDef<TData, TValue>,\n  depth: number,\n  parent?: Column<TData, TValue>\n): Column<TData, TValue> {\n  const defaultColumn = table._getDefaultColumnDef()\n\n  const resolvedColumnDef = {\n    ...defaultColumn,\n    ...columnDef,\n  } as ColumnDefResolved<TData>\n\n  const accessorKey = resolvedColumnDef.accessorKey\n\n  let id =\n    resolvedColumnDef.id ??\n    (accessorKey ? accessorKey.replace('.', '_') : undefined) ??\n    (typeof resolvedColumnDef.header === 'string'\n      ? resolvedColumnDef.header\n      : undefined)\n\n  let accessorFn: AccessorFn<TData> | undefined\n\n  if (resolvedColumnDef.accessorFn) {\n    accessorFn = resolvedColumnDef.accessorFn\n  } else if (accessorKey) {\n    // Support deep accessor keys\n    if (accessorKey.includes('.')) {\n      accessorFn = (originalRow: TData) => {\n        let result = originalRow as Record<string, any>\n\n        for (const key of accessorKey.split('.')) {\n          result = result?.[key]\n          if (process.env.NODE_ENV !== 'production' && result === undefined) {\n            console.warn(\n              `\"${key}\" in deeply nested key \"${accessorKey}\" returned undefined.`\n            )\n          }\n        }\n\n        return result\n      }\n    } else {\n      accessorFn = (originalRow: TData) =>\n        (originalRow as any)[resolvedColumnDef.accessorKey]\n    }\n  }\n\n  if (!id) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(\n        resolvedColumnDef.accessorFn\n          ? `Columns require an id when using an accessorFn`\n          : `Columns require an id when using a non-string header`\n      )\n    }\n    throw new Error()\n  }\n\n  let column: CoreColumn<TData, any> = {\n    id: `${String(id)}`,\n    accessorFn,\n    parent: parent as any,\n    depth,\n    columnDef: resolvedColumnDef as ColumnDef<TData, any>,\n    columns: [],\n    getFlatColumns: memo(\n      () => [true],\n      () => {\n        return [\n          column as Column<TData, TValue>,\n          ...column.columns?.flatMap(d => d.getFlatColumns()),\n        ]\n      },\n      {\n        key: process.env.NODE_ENV === 'production' && 'column.getFlatColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n    getLeafColumns: memo(\n      () => [table._getOrderColumnsFn()],\n      orderColumns => {\n        if (column.columns?.length) {\n          let leafColumns = column.columns.flatMap(column =>\n            column.getLeafColumns()\n          )\n\n          return orderColumns(leafColumns)\n        }\n\n        return [column as Column<TData, TValue>]\n      },\n      {\n        key: process.env.NODE_ENV === 'production' && 'column.getLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n  }\n\n  column = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.createColumn?.(column, table))\n  }, column)\n\n  // Yes, we have to convert table to uknown, because we know more than the compiler here.\n  return column as Column<TData, TValue>\n}\n", "import { RowData, Column, Header, HeaderGroup, Table } from '../types'\nimport { memo } from '../utils'\nimport { TableFeature } from './table'\n\nexport interface CoreHeaderGroup<TData extends RowData> {\n  id: string\n  depth: number\n  headers: Header<TData, unknown>[]\n}\n\nexport interface HeaderContext<TData, TValue> {\n  table: Table<TData>\n  header: Header<TData, TValue>\n  column: Column<TData, TValue>\n}\n\nexport interface CoreHeader<TData extends RowData, TValue> {\n  id: string\n  index: number\n  depth: number\n  column: Column<TData, TValue>\n  headerGroup: HeaderGroup<TData>\n  subHeaders: Header<TData, TValue>[]\n  colSpan: number\n  rowSpan: number\n  getLeafHeaders: () => Header<TData, unknown>[]\n  isPlaceholder: boolean\n  placeholderId?: string\n  getContext: () => HeaderContext<TData, TValue>\n}\n\nexport interface HeadersInstance<TData extends RowData> {\n  getHeaderGroups: () => HeaderGroup<TData>[]\n  getLeftHeaderGroups: () => HeaderGroup<TData>[]\n  getCenterHeaderGroups: () => HeaderGroup<TData>[]\n  getRightHeaderGroups: () => HeaderGroup<TData>[]\n\n  getFooterGroups: () => HeaderGroup<TData>[]\n  getLeftFooterGroups: () => HeaderGroup<TData>[]\n  getCenterFooterGroups: () => HeaderGroup<TData>[]\n  getRightFooterGroups: () => HeaderGroup<TData>[]\n\n  getFlatHeaders: () => Header<TData, unknown>[]\n  getLeftFlatHeaders: () => Header<TData, unknown>[]\n  getCenterFlatHeaders: () => Header<TData, unknown>[]\n  getRightFlatHeaders: () => Header<TData, unknown>[]\n\n  getLeafHeaders: () => Header<TData, unknown>[]\n  getLeftLeafHeaders: () => Header<TData, unknown>[]\n  getCenterLeafHeaders: () => Header<TData, unknown>[]\n  getRightLeafHeaders: () => Header<TData, unknown>[]\n}\n\n//\n\nfunction createHeader<TData extends RowData, TValue>(\n  table: Table<TData>,\n  column: Column<TData, TValue>,\n  options: {\n    id?: string\n    isPlaceholder?: boolean\n    placeholderId?: string\n    index: number\n    depth: number\n  }\n): Header<TData, TValue> {\n  const id = options.id ?? column.id\n\n  let header: CoreHeader<TData, TValue> = {\n    id,\n    column,\n    index: options.index,\n    isPlaceholder: !!options.isPlaceholder,\n    placeholderId: options.placeholderId,\n    depth: options.depth,\n    subHeaders: [],\n    colSpan: 0,\n    rowSpan: 0,\n    headerGroup: null!,\n    getLeafHeaders: (): Header<TData, unknown>[] => {\n      const leafHeaders: Header<TData, unknown>[] = []\n\n      const recurseHeader = (h: CoreHeader<TData, any>) => {\n        if (h.subHeaders && h.subHeaders.length) {\n          h.subHeaders.map(recurseHeader)\n        }\n        leafHeaders.push(h as Header<TData, unknown>)\n      }\n\n      recurseHeader(header)\n\n      return leafHeaders\n    },\n    getContext: () => ({\n      table,\n      header: header as Header<TData, TValue>,\n      column,\n    }),\n  }\n\n  table._features.forEach(feature => {\n    Object.assign(header, feature.createHeader?.(header, table))\n  })\n\n  return header as Header<TData, TValue>\n}\n\nexport const Headers: TableFeature = {\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): HeadersInstance<TData> => {\n    return {\n      // Header Groups\n\n      getHeaderGroups: memo(\n        () => [\n          table.getAllColumns(),\n          table.getVisibleLeafColumns(),\n          table.getState().columnPinning.left,\n          table.getState().columnPinning.right,\n        ],\n        (allColumns, leafColumns, left, right) => {\n          const leftColumns =\n            left\n              ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n              .filter(Boolean) ?? []\n\n          const rightColumns =\n            right\n              ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n              .filter(Boolean) ?? []\n\n          const centerColumns = leafColumns.filter(\n            column => !left?.includes(column.id) && !right?.includes(column.id)\n          )\n\n          const headerGroups = buildHeaderGroups(\n            allColumns,\n            [...leftColumns, ...centerColumns, ...rightColumns],\n            table\n          )\n\n          return headerGroups\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getHeaderGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getCenterHeaderGroups: memo(\n        () => [\n          table.getAllColumns(),\n          table.getVisibleLeafColumns(),\n          table.getState().columnPinning.left,\n          table.getState().columnPinning.right,\n        ],\n        (allColumns, leafColumns, left, right) => {\n          leafColumns = leafColumns.filter(\n            column => !left?.includes(column.id) && !right?.includes(column.id)\n          )\n          return buildHeaderGroups(allColumns, leafColumns, table, 'center')\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'development' && 'getCenterHeaderGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getLeftHeaderGroups: memo(\n        () => [\n          table.getAllColumns(),\n          table.getVisibleLeafColumns(),\n          table.getState().columnPinning.left,\n        ],\n        (allColumns, leafColumns, left) => {\n          const orderedLeafColumns =\n            left\n              ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n              .filter(Boolean) ?? []\n\n          return buildHeaderGroups(\n            allColumns,\n            orderedLeafColumns,\n            table,\n            'left'\n          )\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getLeftHeaderGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getRightHeaderGroups: memo(\n        () => [\n          table.getAllColumns(),\n          table.getVisibleLeafColumns(),\n          table.getState().columnPinning.right,\n        ],\n        (allColumns, leafColumns, right) => {\n          const orderedLeafColumns =\n            right\n              ?.map(columnId => leafColumns.find(d => d.id === columnId)!)\n              .filter(Boolean) ?? []\n\n          return buildHeaderGroups(\n            allColumns,\n            orderedLeafColumns,\n            table,\n            'right'\n          )\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getRightHeaderGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      // Footer Groups\n\n      getFooterGroups: memo(\n        () => [table.getHeaderGroups()],\n        headerGroups => {\n          return [...headerGroups].reverse()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getFooterGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getLeftFooterGroups: memo(\n        () => [table.getLeftHeaderGroups()],\n        headerGroups => {\n          return [...headerGroups].reverse()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getLeftFooterGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getCenterFooterGroups: memo(\n        () => [table.getCenterHeaderGroups()],\n        headerGroups => {\n          return [...headerGroups].reverse()\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'development' && 'getCenterFooterGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getRightFooterGroups: memo(\n        () => [table.getRightHeaderGroups()],\n        headerGroups => {\n          return [...headerGroups].reverse()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getRightFooterGroups',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      // Flat Headers\n\n      getFlatHeaders: memo(\n        () => [table.getHeaderGroups()],\n        headerGroups => {\n          return headerGroups\n            .map(headerGroup => {\n              return headerGroup.headers\n            })\n            .flat()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getFlatHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getLeftFlatHeaders: memo(\n        () => [table.getLeftHeaderGroups()],\n        left => {\n          return left\n            .map(headerGroup => {\n              return headerGroup.headers\n            })\n            .flat()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getLeftFlatHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getCenterFlatHeaders: memo(\n        () => [table.getCenterHeaderGroups()],\n        left => {\n          return left\n            .map(headerGroup => {\n              return headerGroup.headers\n            })\n            .flat()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getCenterFlatHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getRightFlatHeaders: memo(\n        () => [table.getRightHeaderGroups()],\n        left => {\n          return left\n            .map(headerGroup => {\n              return headerGroup.headers\n            })\n            .flat()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getRightFlatHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      // Leaf Headers\n\n      getCenterLeafHeaders: memo(\n        () => [table.getCenterFlatHeaders()],\n        flatHeaders => {\n          return flatHeaders.filter(header => !header.subHeaders?.length)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getCenterLeafHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getLeftLeafHeaders: memo(\n        () => [table.getLeftFlatHeaders()],\n        flatHeaders => {\n          return flatHeaders.filter(header => !header.subHeaders?.length)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getLeftLeafHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getRightLeafHeaders: memo(\n        () => [table.getRightFlatHeaders()],\n        flatHeaders => {\n          return flatHeaders.filter(header => !header.subHeaders?.length)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getRightLeafHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n\n      getLeafHeaders: memo(\n        () => [\n          table.getLeftHeaderGroups(),\n          table.getCenterHeaderGroups(),\n          table.getRightHeaderGroups(),\n        ],\n        (left, center, right) => {\n          return [\n            ...(left[0]?.headers ?? []),\n            ...(center[0]?.headers ?? []),\n            ...(right[0]?.headers ?? []),\n          ]\n            .map(header => {\n              return header.getLeafHeaders()\n            })\n            .flat()\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getLeafHeaders',\n          debug: () => table.options.debugAll ?? table.options.debugHeaders,\n        }\n      ),\n    }\n  },\n}\n\nexport function buildHeaderGroups<TData extends RowData>(\n  allColumns: Column<TData, unknown>[],\n  columnsToGroup: Column<TData, unknown>[],\n  table: Table<TData>,\n  headerFamily?: 'center' | 'left' | 'right'\n) {\n  // Find the max depth of the columns:\n  // build the leaf column row\n  // build each buffer row going up\n  //    placeholder for non-existent level\n  //    real column for existing level\n\n  let maxDepth = 0\n\n  const findMaxDepth = (columns: Column<TData, unknown>[], depth = 1) => {\n    maxDepth = Math.max(maxDepth, depth)\n\n    columns\n      .filter(column => column.getIsVisible())\n      .forEach(column => {\n        if (column.columns?.length) {\n          findMaxDepth(column.columns, depth + 1)\n        }\n      }, 0)\n  }\n\n  findMaxDepth(allColumns)\n\n  let headerGroups: HeaderGroup<TData>[] = []\n\n  const createHeaderGroup = (\n    headersToGroup: Header<TData, unknown>[],\n    depth: number\n  ) => {\n    // The header group we are creating\n    const headerGroup: HeaderGroup<TData> = {\n      depth,\n      id: [headerFamily, `${depth}`].filter(Boolean).join('_'),\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const pendingParentHeaders: Header<TData, unknown>[] = []\n\n    // Scan each column for parents\n    headersToGroup.forEach(headerToGroup => {\n      // What is the latest (last) parent column?\n\n      const latestPendingParentHeader = [...pendingParentHeaders].reverse()[0]\n\n      const isLeafHeader = headerToGroup.column.depth === headerGroup.depth\n\n      let column: Column<TData, unknown>\n      let isPlaceholder = false\n\n      if (isLeafHeader && headerToGroup.column.parent) {\n        // The parent header is new\n        column = headerToGroup.column.parent\n      } else {\n        // The parent header is repeated\n        column = headerToGroup.column\n        isPlaceholder = true\n      }\n\n      if (\n        latestPendingParentHeader &&\n        latestPendingParentHeader?.column === column\n      ) {\n        // This column is repeated. Add it as a sub header to the next batch\n        latestPendingParentHeader.subHeaders.push(headerToGroup)\n      } else {\n        // This is a new header. Let's create it\n        const header = createHeader(table, column, {\n          id: [headerFamily, depth, column.id, headerToGroup?.id]\n            .filter(Boolean)\n            .join('_'),\n          isPlaceholder,\n          placeholderId: isPlaceholder\n            ? `${pendingParentHeaders.filter(d => d.column === column).length}`\n            : undefined,\n          depth,\n          index: pendingParentHeaders.length,\n        })\n\n        // Add the headerToGroup as a subHeader of the new header\n        header.subHeaders.push(headerToGroup)\n        // Add the new header to the pendingParentHeaders to get grouped\n        // in the next batch\n        pendingParentHeaders.push(header)\n      }\n\n      headerGroup.headers.push(headerToGroup)\n      headerToGroup.headerGroup = headerGroup\n    })\n\n    headerGroups.push(headerGroup)\n\n    if (depth > 0) {\n      createHeaderGroup(pendingParentHeaders, depth - 1)\n    }\n  }\n\n  const bottomHeaders = columnsToGroup.map((column, index) =>\n    createHeader(table, column, {\n      depth: maxDepth,\n      index,\n    })\n  )\n\n  createHeaderGroup(bottomHeaders, maxDepth - 1)\n\n  headerGroups.reverse()\n\n  // headerGroups = headerGroups.filter(headerGroup => {\n  //   return !headerGroup.headers.every(header => header.isPlaceholder)\n  // })\n\n  const recurseHeadersForSpans = (\n    headers: Header<TData, unknown>[]\n  ): { colSpan: number; rowSpan: number }[] => {\n    const filteredHeaders = headers.filter(header =>\n      header.column.getIsVisible()\n    )\n\n    return filteredHeaders.map(header => {\n      let colSpan = 0\n      let rowSpan = 0\n      let childRowSpans = [0]\n\n      if (header.subHeaders && header.subHeaders.length) {\n        childRowSpans = []\n\n        recurseHeadersForSpans(header.subHeaders).forEach(\n          ({ colSpan: childColSpan, rowSpan: childRowSpan }) => {\n            colSpan += childColSpan\n            childRowSpans.push(childRowSpan)\n          }\n        )\n      } else {\n        colSpan = 1\n      }\n\n      const minChildRowSpan = Math.min(...childRowSpans)\n      rowSpan = rowSpan + minChildRowSpan\n\n      header.colSpan = colSpan\n      header.rowSpan = rowSpan\n\n      return { colSpan, rowSpan }\n    })\n  }\n\n  recurseHeadersForSpans(headerGroups[0]?.headers ?? [])\n\n  return headerGroups\n}\n", "import { TableFeature } from '../core/table'\nimport { RowData, Column, Header, OnChangeFn, Table, Updater } from '../types'\nimport { makeStateUpdater } from '../utils'\nimport { ColumnPinningPosition } from './Pinning'\n\n//\n\nexport interface ColumnSizingTableState {\n  columnSizing: ColumnSizingState\n  columnSizingInfo: ColumnSizingInfoState\n}\n\nexport type ColumnSizingState = Record<string, number>\n\nexport interface ColumnSizingInfoState {\n  startOffset: null | number\n  startSize: null | number\n  deltaOffset: null | number\n  deltaPercentage: null | number\n  isResizingColumn: false | string\n  columnSizingStart: [string, number][]\n}\n\nexport type ColumnResizeMode = 'onChange' | 'onEnd'\n\nexport interface ColumnSizingOptions {\n  enableColumnResizing?: boolean\n  columnResizeMode?: ColumnResizeMode\n  onColumnSizingChange?: OnChangeFn<ColumnSizingState>\n  onColumnSizingInfoChange?: OnChangeFn<ColumnSizingInfoState>\n}\n\nexport interface ColumnSizingDefaultOptions {\n  columnResizeMode: ColumnResizeMode\n  onColumnSizingChange: OnChangeFn<ColumnSizingState>\n  onColumnSizingInfoChange: OnChangeFn<ColumnSizingInfoState>\n}\n\nexport interface ColumnSizingInstance {\n  setColumnSizing: (updater: Updater<ColumnSizingState>) => void\n  setColumnSizingInfo: (updater: Updater<ColumnSizingInfoState>) => void\n  resetColumnSizing: (defaultState?: boolean) => void\n  resetHeaderSizeInfo: (defaultState?: boolean) => void\n  getTotalSize: () => number\n  getLeftTotalSize: () => number\n  getCenterTotalSize: () => number\n  getRightTotalSize: () => number\n}\n\nexport interface ColumnSizingColumnDef {\n  enableResizing?: boolean\n  size?: number\n  minSize?: number\n  maxSize?: number\n}\n\nexport interface ColumnSizingColumn {\n  getSize: () => number\n  getStart: (position?: ColumnPinningPosition) => number\n  getCanResize: () => boolean\n  getIsResizing: () => boolean\n  resetSize: () => void\n}\n\nexport interface ColumnSizingHeader {\n  getSize: () => number\n  getStart: (position?: ColumnPinningPosition) => number\n  getResizeHandler: () => (event: unknown) => void\n}\n\n//\n\nexport const defaultColumnSizing = {\n  size: 150,\n  minSize: 20,\n  maxSize: Number.MAX_SAFE_INTEGER,\n}\n\nconst getDefaultColumnSizingInfoState = (): ColumnSizingInfoState => ({\n  startOffset: null,\n  startSize: null,\n  deltaOffset: null,\n  deltaPercentage: null,\n  isResizingColumn: false,\n  columnSizingStart: [],\n})\n\nexport const ColumnSizing: TableFeature = {\n  getDefaultColumnDef: (): ColumnSizingColumnDef => {\n    return defaultColumnSizing\n  },\n  getInitialState: (state): ColumnSizingTableState => {\n    return {\n      columnSizing: {},\n      columnSizingInfo: getDefaultColumnSizingInfoState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnSizingDefaultOptions => {\n    return {\n      columnResizeMode: 'onEnd',\n      onColumnSizingChange: makeStateUpdater('columnSizing', table),\n      onColumnSizingInfoChange: makeStateUpdater('columnSizingInfo', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): ColumnSizingColumn => {\n    return {\n      getSize: () => {\n        const columnSize = table.getState().columnSizing[column.id]\n\n        return Math.min(\n          Math.max(\n            column.columnDef.minSize ?? defaultColumnSizing.minSize,\n            columnSize ?? column.columnDef.size ?? defaultColumnSizing.size\n          ),\n          column.columnDef.maxSize ?? defaultColumnSizing.maxSize\n        )\n      },\n      getStart: position => {\n        const columns = !position\n          ? table.getVisibleLeafColumns()\n          : position === 'left'\n          ? table.getLeftVisibleLeafColumns()\n          : table.getRightVisibleLeafColumns()\n\n        const index = columns.findIndex(d => d.id === column.id)\n\n        if (index > 0) {\n          const prevSiblingColumn = columns[index - 1]!\n\n          return (\n            prevSiblingColumn.getStart(position) + prevSiblingColumn.getSize()\n          )\n        }\n\n        return 0\n      },\n      resetSize: () => {\n        table.setColumnSizing(({ [column.id]: _, ...rest }) => {\n          return rest\n        })\n      },\n      getCanResize: () => {\n        return (\n          (column.columnDef.enableResizing ?? true) &&\n          (table.options.enableColumnResizing ?? true)\n        )\n      },\n      getIsResizing: () => {\n        return table.getState().columnSizingInfo.isResizingColumn === column.id\n      },\n    }\n  },\n\n  createHeader: <TData extends RowData, TValue>(\n    header: Header<TData, TValue>,\n    table: Table<TData>\n  ): ColumnSizingHeader => {\n    return {\n      getSize: () => {\n        let sum = 0\n\n        const recurse = (header: Header<TData, TValue>) => {\n          if (header.subHeaders.length) {\n            header.subHeaders.forEach(recurse)\n          } else {\n            sum += header.column.getSize() ?? 0\n          }\n        }\n\n        recurse(header)\n\n        return sum\n      },\n      getStart: () => {\n        if (header.index > 0) {\n          const prevSiblingHeader =\n            header.headerGroup.headers[header.index - 1]!\n          return prevSiblingHeader.getStart() + prevSiblingHeader.getSize()\n        }\n\n        return 0\n      },\n      getResizeHandler: () => {\n        const column = table.getColumn(header.column.id)\n        const canResize = column?.getCanResize()\n\n        return (e: unknown) => {\n          if (!column || !canResize) {\n            return\n          }\n\n          ;(e as any).persist?.()\n\n          if (isTouchStartEvent(e)) {\n            // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n            if (e.touches && e.touches.length > 1) {\n              return\n            }\n          }\n\n          const startSize = header.getSize()\n\n          const columnSizingStart: [string, number][] = header\n            ? header\n                .getLeafHeaders()\n                .map(d => [d.column.id, d.column.getSize()])\n            : [[column.id, column.getSize()]]\n\n          const clientX = isTouchStartEvent(e)\n            ? Math.round(e.touches[0]!.clientX)\n            : (e as MouseEvent).clientX\n\n          const newColumnSizing: ColumnSizingState = {}\n\n          const updateOffset = (\n            eventType: 'move' | 'end',\n            clientXPos?: number\n          ) => {\n            if (typeof clientXPos !== 'number') {\n              return\n            }\n\n            table.setColumnSizingInfo(old => {\n              const deltaOffset = clientXPos - (old?.startOffset ?? 0)\n              const deltaPercentage = Math.max(\n                deltaOffset / (old?.startSize ?? 0),\n                -0.999999\n              )\n\n              old.columnSizingStart.forEach(([columnId, headerSize]) => {\n                newColumnSizing[columnId] =\n                  Math.round(\n                    Math.max(headerSize + headerSize * deltaPercentage, 0) * 100\n                  ) / 100\n              })\n\n              return {\n                ...old,\n                deltaOffset,\n                deltaPercentage,\n              }\n            })\n\n            if (\n              table.options.columnResizeMode === 'onChange' ||\n              eventType === 'end'\n            ) {\n              table.setColumnSizing(old => ({\n                ...old,\n                ...newColumnSizing,\n              }))\n            }\n          }\n\n          const onMove = (clientXPos?: number) =>\n            updateOffset('move', clientXPos)\n\n          const onEnd = (clientXPos?: number) => {\n            updateOffset('end', clientXPos)\n\n            table.setColumnSizingInfo(old => ({\n              ...old,\n              isResizingColumn: false,\n              startOffset: null,\n              startSize: null,\n              deltaOffset: null,\n              deltaPercentage: null,\n              columnSizingStart: [],\n            }))\n          }\n\n          const mouseEvents = {\n            moveHandler: (e: MouseEvent) => onMove(e.clientX),\n            upHandler: (e: MouseEvent) => {\n              document.removeEventListener('mousemove', mouseEvents.moveHandler)\n              document.removeEventListener('mouseup', mouseEvents.upHandler)\n              onEnd(e.clientX)\n            },\n          }\n\n          const touchEvents = {\n            moveHandler: (e: TouchEvent) => {\n              if (e.cancelable) {\n                e.preventDefault()\n                e.stopPropagation()\n              }\n              onMove(e.touches[0]!.clientX)\n              return false\n            },\n            upHandler: (e: TouchEvent) => {\n              document.removeEventListener('touchmove', touchEvents.moveHandler)\n              document.removeEventListener('touchend', touchEvents.upHandler)\n              if (e.cancelable) {\n                e.preventDefault()\n                e.stopPropagation()\n              }\n              onEnd(e.touches[0]?.clientX)\n            },\n          }\n\n          const passiveIfSupported = passiveEventSupported()\n            ? { passive: false }\n            : false\n\n          if (isTouchStartEvent(e)) {\n            document.addEventListener(\n              'touchmove',\n              touchEvents.moveHandler,\n              passiveIfSupported\n            )\n            document.addEventListener(\n              'touchend',\n              touchEvents.upHandler,\n              passiveIfSupported\n            )\n          } else {\n            document.addEventListener(\n              'mousemove',\n              mouseEvents.moveHandler,\n              passiveIfSupported\n            )\n            document.addEventListener(\n              'mouseup',\n              mouseEvents.upHandler,\n              passiveIfSupported\n            )\n          }\n\n          table.setColumnSizingInfo(old => ({\n            ...old,\n            startOffset: clientX,\n            startSize,\n            deltaOffset: 0,\n            deltaPercentage: 0,\n            columnSizingStart,\n            isResizingColumn: column.id,\n          }))\n        }\n      },\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnSizingInstance => {\n    return {\n      setColumnSizing: updater => table.options.onColumnSizingChange?.(updater),\n      setColumnSizingInfo: updater =>\n        table.options.onColumnSizingInfoChange?.(updater),\n      resetColumnSizing: defaultState => {\n        table.setColumnSizing(\n          defaultState ? {} : table.initialState.columnSizing ?? {}\n        )\n      },\n      resetHeaderSizeInfo: defaultState => {\n        table.setColumnSizingInfo(\n          defaultState\n            ? getDefaultColumnSizingInfoState()\n            : table.initialState.columnSizingInfo ??\n                getDefaultColumnSizingInfoState()\n        )\n      },\n      getTotalSize: () =>\n        table.getHeaderGroups()[0]?.headers.reduce((sum, header) => {\n          return sum + header.getSize()\n        }, 0) ?? 0,\n      getLeftTotalSize: () =>\n        table.getLeftHeaderGroups()[0]?.headers.reduce((sum, header) => {\n          return sum + header.getSize()\n        }, 0) ?? 0,\n      getCenterTotalSize: () =>\n        table.getCenterHeaderGroups()[0]?.headers.reduce((sum, header) => {\n          return sum + header.getSize()\n        }, 0) ?? 0,\n      getRightTotalSize: () =>\n        table.getRightHeaderGroups()[0]?.headers.reduce((sum, header) => {\n          return sum + header.getSize()\n        }, 0) ?? 0,\n    }\n  },\n}\n\nlet passiveSupported: boolean | null = null\nexport function passiveEventSupported() {\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    const noop = () => {}\n\n    window.addEventListener('test', noop, options)\n    window.removeEventListener('test', noop)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\nfunction isTouchStartEvent(e: unknown): e is TouchEvent {\n  return (e as TouchEvent).type === 'touchstart'\n}\n", "import { RowModel } from '..'\nimport { TableFeature } from '../core/table'\nimport { OnChangeFn, Table, Row, Updater, RowData } from '../types'\nimport { makeStateUpdater } from '../utils'\n\nexport type ExpandedStateList = Record<string, boolean>\nexport type ExpandedState = true | Record<string, boolean>\nexport interface ExpandedTableState {\n  expanded: ExpandedState\n}\n\nexport interface ExpandedRow {\n  toggleExpanded: (expanded?: boolean) => void\n  getIsExpanded: () => boolean\n  getCanExpand: () => boolean\n  getToggleExpandedHandler: () => () => void\n}\n\nexport interface ExpandedOptions<TData extends RowData> {\n  manualExpanding?: boolean\n  onExpandedChange?: OnChangeFn<ExpandedState>\n  autoResetExpanded?: boolean\n  enableExpanding?: boolean\n  getExpandedRowModel?: (table: Table<any>) => () => RowModel<any>\n  getIsRowExpanded?: (row: Row<TData>) => boolean\n  getRowCanExpand?: (row: Row<TData>) => boolean\n  paginateExpandedRows?: boolean\n}\n\nexport interface ExpandedInstance<TData extends RowData> {\n  _autoResetExpanded: () => void\n  setExpanded: (updater: Updater<ExpandedState>) => void\n  toggleAllRowsExpanded: (expanded?: boolean) => void\n  resetExpanded: (defaultState?: boolean) => void\n  getCanSomeRowsExpand: () => boolean\n  getToggleAllRowsExpandedHandler: () => (event: unknown) => void\n  getIsSomeRowsExpanded: () => boolean\n  getIsAllRowsExpanded: () => boolean\n  getExpandedDepth: () => number\n  getExpandedRowModel: () => RowModel<TData>\n  _getExpandedRowModel?: () => RowModel<TData>\n  getPreExpandedRowModel: () => RowModel<TData>\n}\n\n//\n\nexport const Expanding: TableFeature = {\n  getInitialState: (state): ExpandedTableState => {\n    return {\n      expanded: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ExpandedOptions<TData> => {\n    return {\n      onExpandedChange: makeStateUpdater('expanded', table),\n      paginateExpandedRows: true,\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): ExpandedInstance<TData> => {\n    let registered = false\n    let queued = false\n\n    return {\n      _autoResetExpanded: () => {\n        if (!registered) {\n          table._queue(() => {\n            registered = true\n          })\n          return\n        }\n\n        if (\n          table.options.autoResetAll ??\n          table.options.autoResetExpanded ??\n          !table.options.manualExpanding\n        ) {\n          if (queued) return\n          queued = true\n          table._queue(() => {\n            table.resetExpanded()\n            queued = false\n          })\n        }\n      },\n      setExpanded: updater => table.options.onExpandedChange?.(updater),\n      toggleAllRowsExpanded: expanded => {\n        if (expanded ?? !table.getIsAllRowsExpanded()) {\n          table.setExpanded(true)\n        } else {\n          table.setExpanded({})\n        }\n      },\n      resetExpanded: defaultState => {\n        table.setExpanded(\n          defaultState ? {} : table.initialState?.expanded ?? {}\n        )\n      },\n      getCanSomeRowsExpand: () => {\n        return table\n          .getPrePaginationRowModel()\n          .flatRows.some(row => row.getCanExpand())\n      },\n      getToggleAllRowsExpandedHandler: () => {\n        return (e: unknown) => {\n          ;(e as any).persist?.()\n          table.toggleAllRowsExpanded()\n        }\n      },\n      getIsSomeRowsExpanded: () => {\n        const expanded = table.getState().expanded\n        return expanded === true || Object.values(expanded).some(Boolean)\n      },\n      getIsAllRowsExpanded: () => {\n        const expanded = table.getState().expanded\n\n        // If expanded is true, save some cycles and return true\n        if (typeof expanded === 'boolean') {\n          return expanded === true\n        }\n\n        if (!Object.keys(expanded).length) {\n          return false\n        }\n\n        // If any row is not expanded, return false\n        if (table.getRowModel().flatRows.some(row => !row.getIsExpanded())) {\n          return false\n        }\n\n        // They must all be expanded :shrug:\n        return true\n      },\n      getExpandedDepth: () => {\n        let maxDepth = 0\n\n        const rowIds =\n          table.getState().expanded === true\n            ? Object.keys(table.getRowModel().rowsById)\n            : Object.keys(table.getState().expanded)\n\n        rowIds.forEach(id => {\n          const splitId = id.split('.')\n          maxDepth = Math.max(maxDepth, splitId.length)\n        })\n\n        return maxDepth\n      },\n      getPreExpandedRowModel: () => table.getSortedRowModel(),\n      getExpandedRowModel: () => {\n        if (!table._getExpandedRowModel && table.options.getExpandedRowModel) {\n          table._getExpandedRowModel = table.options.getExpandedRowModel(table)\n        }\n\n        if (table.options.manualExpanding || !table._getExpandedRowModel) {\n          return table.getPreExpandedRowModel()\n        }\n\n        return table._getExpandedRowModel()\n      },\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): ExpandedRow => {\n    return {\n      toggleExpanded: expanded => {\n        table.setExpanded(old => {\n          const exists = old === true ? true : !!old?.[row.id]\n\n          let oldExpanded: ExpandedStateList = {}\n\n          if (old === true) {\n            Object.keys(table.getRowModel().rowsById).forEach(rowId => {\n              oldExpanded[rowId] = true\n            })\n          } else {\n            oldExpanded = old\n          }\n\n          expanded = expanded ?? !exists\n\n          if (!exists && expanded) {\n            return {\n              ...oldExpanded,\n              [row.id]: true,\n            }\n          }\n\n          if (exists && !expanded) {\n            const { [row.id]: _, ...rest } = oldExpanded\n            return rest\n          }\n\n          return old\n        })\n      },\n      getIsExpanded: () => {\n        const expanded = table.getState().expanded\n\n        return !!(\n          table.options.getIsRowExpanded?.(row) ??\n          (expanded === true || expanded?.[row.id])\n        )\n      },\n      getCanExpand: () => {\n        return (\n          table.options.getRowCanExpand?.(row) ??\n          ((table.options.enableExpanding ?? true) && !!row.subRows?.length)\n        )\n      },\n      getToggleExpandedHandler: () => {\n        const canExpand = row.getCanExpand()\n\n        return () => {\n          if (!canExpand) return\n          row.toggleExpanded()\n        }\n      },\n    }\n  },\n}\n", "import { FilterFn } from './features/Filters'\n\nconst includesString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  const search = filterValue.toLowerCase()\n  return Boolean(\n    row\n      .getValue<string | null>(columnId)\n      ?.toString()\n      ?.toLowerCase()\n      ?.includes(search)\n  )\n}\n\nincludesString.autoRemove = (val: any) => testFalsey(val)\n\nconst includesStringSensitive: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return Boolean(\n    row.getValue<string | null>(columnId)?.toString()?.includes(filterValue)\n  )\n}\n\nincludesStringSensitive.autoRemove = (val: any) => testFalsey(val)\n\nconst equalsString: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: string\n) => {\n  return (\n    row.getValue<string | null>(columnId)?.toString()?.toLowerCase() ===\n    filterValue?.toLowerCase()\n  )\n}\n\nequalsString.autoRemove = (val: any) => testFalsey(val)\n\nconst arrIncludes: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue<unknown[]>(columnId)?.includes(filterValue)\n}\n\narrIncludes.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesAll: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return !filterValue.some(\n    val => !row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesAll.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst arrIncludesSome: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown[]\n) => {\n  return filterValue.some(val =>\n    row.getValue<unknown[]>(columnId)?.includes(val)\n  )\n}\n\narrIncludesSome.autoRemove = (val: any) => testFalsey(val) || !val?.length\n\nconst equals: FilterFn<any> = (row, columnId: string, filterValue: unknown) => {\n  return row.getValue(columnId) === filterValue\n}\n\nequals.autoRemove = (val: any) => testFalsey(val)\n\nconst weakEquals: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: unknown\n) => {\n  return row.getValue(columnId) == filterValue\n}\n\nweakEquals.autoRemove = (val: any) => testFalsey(val)\n\nconst inNumberRange: FilterFn<any> = (\n  row,\n  columnId: string,\n  filterValue: [number, number]\n) => {\n  let [min, max] = filterValue\n\n  const rowValue = row.getValue<number>(columnId)\n  return rowValue >= min && rowValue <= max\n}\n\ninNumberRange.resolveFilterValue = (val: [any, any]) => {\n  let [unsafeMin, unsafeMax] = val\n\n  let parsedMin =\n    typeof unsafeMin !== 'number' ? parseFloat(unsafeMin as string) : unsafeMin\n  let parsedMax =\n    typeof unsafeMax !== 'number' ? parseFloat(unsafeMax as string) : unsafeMax\n\n  let min =\n    unsafeMin === null || Number.isNaN(parsedMin) ? -Infinity : parsedMin\n  let max = unsafeMax === null || Number.isNaN(parsedMax) ? Infinity : parsedMax\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return [min, max] as const\n}\n\ninNumberRange.autoRemove = (val: any) =>\n  testFalsey(val) || (testFalsey(val[0]) && testFalsey(val[1]))\n\n// Export\n\nexport const filterFns = {\n  includesString,\n  includesStringSensitive,\n  equalsString,\n  arrIncludes,\n  arrIncludesAll,\n  arrIncludesSome,\n  equals,\n  weakEquals,\n  inNumberRange,\n}\n\nexport type BuiltInFilterFn = keyof typeof filterFns\n\n// Utils\n\nfunction testFalsey(val: any) {\n  return val === undefined || val === null || val === ''\n}\n", "import { RowModel } from '..'\nimport { TableFeature } from '../core/table'\nimport { BuiltInFilterFn, filterFns } from '../filterFns'\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  FilterMeta,\n  FilterFns,\n} from '../types'\nimport { functionalUpdate, isFunction, makeStateUpdater } from '../utils'\n\nexport interface FiltersTableState {\n  columnFilters: ColumnFiltersState\n  globalFilter: any\n}\n\nexport type ColumnFiltersState = ColumnFilter[]\n\nexport interface ColumnFilter {\n  id: string\n  value: unknown\n}\n\nexport interface ResolvedColumnFilter<TData extends RowData> {\n  id: string\n  resolvedValue: unknown\n  filterFn: FilterFn<TData>\n}\n\nexport interface FilterFn<TData extends RowData> {\n  (\n    row: Row<TData>,\n    columnId: string,\n    filterValue: any,\n    addMeta: (meta: FilterMeta) => void\n  ): boolean\n\n  resolveFilterValue?: TransformFilterValueFn<TData>\n  autoRemove?: ColumnFilterAutoRemoveTestFn<TData>\n}\n\nexport type TransformFilterValueFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => unknown\n\nexport type ColumnFilterAutoRemoveTestFn<TData extends RowData> = (\n  value: any,\n  column?: Column<TData, unknown>\n) => boolean\n\nexport type CustomFilterFns<TData extends RowData> = Record<\n  string,\n  FilterFn<TData>\n>\n\nexport type FilterFnOption<TData extends RowData> =\n  | 'auto'\n  | BuiltInFilterFn\n  | keyof FilterFns\n  | FilterFn<TData>\n\nexport interface FiltersColumnDef<TData extends RowData> {\n  filterFn?: FilterFnOption<TData>\n  enableColumnFilter?: boolean\n  enableGlobalFilter?: boolean\n}\n\nexport interface FiltersColumn<TData extends RowData> {\n  getAutoFilterFn: () => FilterFn<TData> | undefined\n  getFilterFn: () => FilterFn<TData> | undefined\n  setFilterValue: (updater: Updater<any>) => void\n  getCanFilter: () => boolean\n  getCanGlobalFilter: () => boolean\n  getFacetedRowModel: () => RowModel<TData>\n  _getFacetedRowModel?: () => RowModel<TData>\n  getIsFiltered: () => boolean\n  getFilterValue: () => unknown\n  getFilterIndex: () => number\n  getFacetedUniqueValues: () => Map<any, number>\n  _getFacetedUniqueValues?: () => Map<any, number>\n  getFacetedMinMaxValues: () => undefined | [number, number]\n  _getFacetedMinMaxValues?: () => undefined | [number, number]\n}\n\nexport interface FiltersRow<TData extends RowData> {\n  columnFilters: Record<string, boolean>\n  columnFiltersMeta: Record<string, FilterMeta>\n}\n\ninterface FiltersOptionsBase<TData extends RowData> {\n  enableFilters?: boolean\n  manualFiltering?: boolean\n  filterFromLeafRows?: boolean\n  maxLeafRowFilterDepth?: number\n  getFilteredRowModel?: (table: Table<any>) => () => RowModel<any>\n\n  // Column\n  onColumnFiltersChange?: OnChangeFn<ColumnFiltersState>\n  enableColumnFilters?: boolean\n\n  // Global\n  globalFilterFn?: FilterFnOption<TData>\n  onGlobalFilterChange?: OnChangeFn<any>\n  enableGlobalFilter?: boolean\n  getColumnCanGlobalFilter?: (column: Column<TData, unknown>) => boolean\n\n  // Faceting\n  getFacetedRowModel?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => RowModel<TData>\n  getFacetedUniqueValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => Map<any, number>\n  getFacetedMinMaxValues?: (\n    table: Table<TData>,\n    columnId: string\n  ) => () => undefined | [number, number]\n}\n\ntype ResolvedFilterFns = keyof FilterFns extends never\n  ? {\n      filterFns?: Record<string, FilterFn<any>>\n    }\n  : {\n      filterFns: Record<keyof FilterFns, FilterFn<any>>\n    }\n\nexport interface FiltersOptions<TData extends RowData>\n  extends FiltersOptionsBase<TData>,\n    ResolvedFilterFns {}\n\nexport interface FiltersInstance<TData extends RowData> {\n  setColumnFilters: (updater: Updater<ColumnFiltersState>) => void\n\n  resetColumnFilters: (defaultState?: boolean) => void\n\n  // Column Filters\n  getPreFilteredRowModel: () => RowModel<TData>\n  getFilteredRowModel: () => RowModel<TData>\n  _getFilteredRowModel?: () => RowModel<TData>\n\n  // Global Filters\n  setGlobalFilter: (updater: Updater<any>) => void\n  resetGlobalFilter: (defaultState?: boolean) => void\n  getGlobalAutoFilterFn: () => FilterFn<TData> | undefined\n  getGlobalFilterFn: () => FilterFn<TData> | undefined\n  getGlobalFacetedRowModel: () => RowModel<TData>\n  _getGlobalFacetedRowModel?: () => RowModel<TData>\n  getGlobalFacetedUniqueValues: () => Map<any, number>\n  _getGlobalFacetedUniqueValues?: () => Map<any, number>\n  getGlobalFacetedMinMaxValues: () => undefined | [number, number]\n  _getGlobalFacetedMinMaxValues?: () => undefined | [number, number]\n}\n\n//\n\nexport const Filters: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): FiltersColumnDef<TData> => {\n    return {\n      filterFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): FiltersTableState => {\n    return {\n      columnFilters: [],\n      globalFilter: undefined,\n      // filtersProgress: 1,\n      // facetProgress: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): FiltersOptions<TData> => {\n    return {\n      onColumnFiltersChange: makeStateUpdater('columnFilters', table),\n      onGlobalFilterChange: makeStateUpdater('globalFilter', table),\n      filterFromLeafRows: false,\n      maxLeafRowFilterDepth: 100,\n      globalFilterFn: 'auto',\n      getColumnCanGlobalFilter: column => {\n        const value = table\n          .getCoreRowModel()\n          .flatRows[0]?._getAllCellsByColumnId()\n          [column.id]?.getValue()\n\n        return typeof value === 'string' || typeof value === 'number'\n      },\n    } as FiltersOptions<TData>\n  },\n\n  createColumn: <TData extends RowData>(\n    column: Column<TData, unknown>,\n    table: Table<TData>\n  ): FiltersColumn<TData> => {\n    return {\n      getAutoFilterFn: () => {\n        const firstRow = table.getCoreRowModel().flatRows[0]\n\n        const value = firstRow?.getValue(column.id)\n\n        if (typeof value === 'string') {\n          return filterFns.includesString\n        }\n\n        if (typeof value === 'number') {\n          return filterFns.inNumberRange\n        }\n\n        if (typeof value === 'boolean') {\n          return filterFns.equals\n        }\n\n        if (value !== null && typeof value === 'object') {\n          return filterFns.equals\n        }\n\n        if (Array.isArray(value)) {\n          return filterFns.arrIncludes\n        }\n\n        return filterFns.weakEquals\n      },\n      getFilterFn: () => {\n        return isFunction(column.columnDef.filterFn)\n          ? column.columnDef.filterFn\n          : column.columnDef.filterFn === 'auto'\n          ? column.getAutoFilterFn()\n          // @ts-ignore \n          : table.options.filterFns?.[column.columnDef.filterFn as string] ??\n            filterFns[column.columnDef.filterFn as BuiltInFilterFn]\n      },\n      getCanFilter: () => {\n        return (\n          (column.columnDef.enableColumnFilter ?? true) &&\n          (table.options.enableColumnFilters ?? true) &&\n          (table.options.enableFilters ?? true) &&\n          !!column.accessorFn\n        )\n      },\n\n      getCanGlobalFilter: () => {\n        return (\n          (column.columnDef.enableGlobalFilter ?? true) &&\n          (table.options.enableGlobalFilter ?? true) &&\n          (table.options.enableFilters ?? true) &&\n          (table.options.getColumnCanGlobalFilter?.(column) ?? true) &&\n          !!column.accessorFn\n        )\n      },\n\n      getIsFiltered: () => column.getFilterIndex() > -1,\n\n      getFilterValue: () =>\n        table.getState().columnFilters?.find(d => d.id === column.id)?.value,\n\n      getFilterIndex: () =>\n        table.getState().columnFilters?.findIndex(d => d.id === column.id) ??\n        -1,\n\n      setFilterValue: value => {\n        table.setColumnFilters(old => {\n          const filterFn = column.getFilterFn()\n          const previousfilter = old?.find(d => d.id === column.id)\n\n          const newFilter = functionalUpdate(\n            value,\n            previousfilter ? previousfilter.value : undefined\n          )\n\n          //\n          if (\n            shouldAutoRemoveFilter(\n              filterFn as FilterFn<TData>,\n              newFilter,\n              column\n            )\n          ) {\n            return old?.filter(d => d.id !== column.id) ?? []\n          }\n\n          const newFilterObj = { id: column.id, value: newFilter }\n\n          if (previousfilter) {\n            return (\n              old?.map(d => {\n                if (d.id === column.id) {\n                  return newFilterObj\n                }\n                return d\n              }) ?? []\n            )\n          }\n\n          if (old?.length) {\n            return [...old, newFilterObj]\n          }\n\n          return [newFilterObj]\n        })\n      },\n      _getFacetedRowModel:\n        table.options.getFacetedRowModel &&\n        table.options.getFacetedRowModel(table, column.id),\n      getFacetedRowModel: () => {\n        if (!column._getFacetedRowModel) {\n          return table.getPreFilteredRowModel()\n        }\n\n        return column._getFacetedRowModel()\n      },\n      _getFacetedUniqueValues:\n        table.options.getFacetedUniqueValues &&\n        table.options.getFacetedUniqueValues(table, column.id),\n      getFacetedUniqueValues: () => {\n        if (!column._getFacetedUniqueValues) {\n          return new Map()\n        }\n\n        return column._getFacetedUniqueValues()\n      },\n      _getFacetedMinMaxValues:\n        table.options.getFacetedMinMaxValues &&\n        table.options.getFacetedMinMaxValues(table, column.id),\n      getFacetedMinMaxValues: () => {\n        if (!column._getFacetedMinMaxValues) {\n          return undefined\n        }\n\n        return column._getFacetedMinMaxValues()\n      },\n      // () => [column.getFacetedRowModel()],\n      // facetedRowModel => getRowModelMinMaxValues(facetedRowModel, column.id),\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): FiltersRow<TData> => {\n    return {\n      columnFilters: {},\n      columnFiltersMeta: {},\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): FiltersInstance<TData> => {\n    return {\n      getGlobalAutoFilterFn: () => {\n        return filterFns.includesString\n      },\n\n      getGlobalFilterFn: () => {\n        const { globalFilterFn: globalFilterFn } = table.options\n\n        return isFunction(globalFilterFn)\n          ? globalFilterFn\n          : globalFilterFn === 'auto'\n          ? table.getGlobalAutoFilterFn()\n          // @ts-ignore\n          : table.options.filterFns?.[globalFilterFn as string] ??\n            filterFns[globalFilterFn as BuiltInFilterFn]\n      },\n\n      setColumnFilters: (updater: Updater<ColumnFiltersState>) => {\n        const leafColumns = table.getAllLeafColumns()\n\n        const updateFn = (old: ColumnFiltersState) => {\n          return functionalUpdate(updater, old)?.filter(filter => {\n            const column = leafColumns.find(d => d.id === filter.id)\n\n            if (column) {\n              const filterFn = column.getFilterFn()\n\n              if (shouldAutoRemoveFilter(filterFn, filter.value, column)) {\n                return false\n              }\n            }\n\n            return true\n          })\n        }\n\n        table.options.onColumnFiltersChange?.(updateFn)\n      },\n\n      setGlobalFilter: updater => {\n        table.options.onGlobalFilterChange?.(updater)\n      },\n\n      resetGlobalFilter: defaultState => {\n        table.setGlobalFilter(\n          defaultState ? undefined : table.initialState.globalFilter\n        )\n      },\n\n      resetColumnFilters: defaultState => {\n        table.setColumnFilters(\n          defaultState ? [] : table.initialState?.columnFilters ?? []\n        )\n      },\n\n      getPreFilteredRowModel: () => table.getCoreRowModel(),\n      getFilteredRowModel: () => {\n        if (!table._getFilteredRowModel && table.options.getFilteredRowModel) {\n          table._getFilteredRowModel = table.options.getFilteredRowModel(table)\n        }\n\n        if (table.options.manualFiltering || !table._getFilteredRowModel) {\n          return table.getPreFilteredRowModel()\n        }\n\n        return table._getFilteredRowModel()\n      },\n\n      _getGlobalFacetedRowModel:\n        table.options.getFacetedRowModel &&\n        table.options.getFacetedRowModel(table, '__global__'),\n\n      getGlobalFacetedRowModel: () => {\n        if (table.options.manualFiltering || !table._getGlobalFacetedRowModel) {\n          return table.getPreFilteredRowModel()\n        }\n\n        return table._getGlobalFacetedRowModel()\n      },\n\n      _getGlobalFacetedUniqueValues:\n        table.options.getFacetedUniqueValues &&\n        table.options.getFacetedUniqueValues(table, '__global__'),\n      getGlobalFacetedUniqueValues: () => {\n        if (!table._getGlobalFacetedUniqueValues) {\n          return new Map()\n        }\n\n        return table._getGlobalFacetedUniqueValues()\n      },\n\n      _getGlobalFacetedMinMaxValues:\n        table.options.getFacetedMinMaxValues &&\n        table.options.getFacetedMinMaxValues(table, '__global__'),\n      getGlobalFacetedMinMaxValues: () => {\n        if (!table._getGlobalFacetedMinMaxValues) {\n          return\n        }\n\n        return table._getGlobalFacetedMinMaxValues()\n      },\n    }\n  },\n}\n\nexport function shouldAutoRemoveFilter<TData extends RowData>(\n  filterFn?: FilterFn<TData>,\n  value?: any,\n  column?: Column<TData, unknown>\n) {\n  return (\n    (filterFn && filterFn.autoRemove\n      ? filterFn.autoRemove(value, column)\n      : false) ||\n    typeof value === 'undefined' ||\n    (typeof value === 'string' && !value)\n  )\n}\n", "import { AggregationFn } from './features/Grouping'\nimport { isNumberArray } from './utils'\n\nconst sum: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return childRows.reduce((sum, next) => {\n    const nextValue = next.getValue(columnId)\n    return sum + (typeof nextValue === 'number' ? nextValue : 0)\n  }, 0)\n}\n\nconst min: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n\n    if (\n      value != null &&\n      (min! > value || (min === undefined && value >= value))\n    ) {\n      min = value\n    }\n  })\n\n  return min\n}\n\nconst max: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (\n      value != null &&\n      (max! < value || (max === undefined && value >= value))\n    ) {\n      max = value\n    }\n  })\n\n  return max\n}\n\nconst extent: AggregationFn<any> = (columnId, _leafRows, childRows) => {\n  let min: number | undefined\n  let max: number | undefined\n\n  childRows.forEach(row => {\n    const value = row.getValue<number>(columnId)\n    if (value != null) {\n      if (min === undefined) {\n        if (value >= value) min = max = value\n      } else {\n        if (min > value) min = value\n        if (max! < value) max = value\n      }\n    }\n  })\n\n  return [min, max]\n}\n\nconst mean: AggregationFn<any> = (columnId, leafRows) => {\n  let count = 0\n  let sum = 0\n\n  leafRows.forEach(row => {\n    let value = row.getValue<number>(columnId)\n    if (value != null && (value = +value) >= value) {\n      ++count, (sum += value)\n    }\n  })\n\n  if (count) return sum / count\n\n  return\n}\n\nconst median: AggregationFn<any> = (columnId, leafRows) => {\n  if (!leafRows.length) {\n    return\n  }\n\n  const values = leafRows.map(row => row.getValue(columnId))\n  if (!isNumberArray(values)) {\n    return\n  }\n  if (values.length === 1) {\n    return values[0]\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = values.sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1]! + nums[mid]!) / 2\n}\n\nconst unique: AggregationFn<any> = (columnId, leafRows) => {\n  return Array.from(new Set(leafRows.map(d => d.getValue(columnId))).values())\n}\n\nconst uniqueCount: AggregationFn<any> = (columnId, leafRows) => {\n  return new Set(leafRows.map(d => d.getValue(columnId))).size\n}\n\nconst count: AggregationFn<any> = (_columnId, leafRows) => {\n  return leafRows.length\n}\n\nexport const aggregationFns = {\n  sum,\n  min,\n  max,\n  extent,\n  mean,\n  median,\n  unique,\n  uniqueCount,\n  count,\n}\n\nexport type BuiltInAggregationFn = keyof typeof aggregationFns\n", "import { RowModel } from '..'\nimport { BuiltInAggregationFn, aggregationFns } from '../aggregationFns'\nimport { TableFeature } from '../core/table'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  ColumnDefTemplate,\n  RowData,\n  AggregationFns,\n} from '../types'\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type GroupingState = string[]\n\nexport interface GroupingTableState {\n  grouping: GroupingState\n}\n\nexport type AggregationFn<TData extends RowData> = (\n  columnId: string,\n  leafRows: Row<TData>[],\n  childRows: Row<TData>[]\n) => any\n\nexport type CustomAggregationFns = Record<string, AggregationFn<any>>\n\nexport type AggregationFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof AggregationFns\n  | BuiltInAggregationFn\n  | AggregationFn<TData>\n\nexport interface GroupingColumnDef<TData extends RowData, TValue> {\n  aggregationFn?: AggregationFnOption<TData>\n  aggregatedCell?: ColumnDefTemplate<\n    ReturnType<Cell<TData, TValue>['getContext']>\n  >\n  enableGrouping?: boolean\n  getGroupingValue?: (row: TData) => any\n}\n\nexport interface GroupingColumn<TData extends RowData> {\n  getCanGroup: () => boolean\n  getIsGrouped: () => boolean\n  getGroupedIndex: () => number\n  toggleGrouping: () => void\n  getToggleGroupingHandler: () => () => void\n  getAutoAggregationFn: () => AggregationFn<TData> | undefined\n  getAggregationFn: () => AggregationFn<TData> | undefined\n}\n\nexport interface GroupingRow {\n  groupingColumnId?: string\n  groupingValue?: unknown\n  getIsGrouped: () => boolean\n  getGroupingValue: (columnId: string) => unknown\n  _groupingValuesCache: Record<string, any>\n}\n\nexport interface GroupingCell {\n  getIsGrouped: () => boolean\n  getIsPlaceholder: () => boolean\n  getIsAggregated: () => boolean\n}\n\nexport interface ColumnDefaultOptions {\n  // Column\n  onGroupingChange: OnChangeFn<GroupingState>\n  enableGrouping: boolean\n}\n\ninterface GroupingOptionsBase {\n  manualGrouping?: boolean\n  onGroupingChange?: OnChangeFn<GroupingState>\n  enableGrouping?: boolean\n  getGroupedRowModel?: (table: Table<any>) => () => RowModel<any>\n  groupedColumnMode?: false | 'reorder' | 'remove'\n}\n\ntype ResolvedAggregationFns = keyof AggregationFns extends never\n  ? {\n      aggregationFns?: Record<string, AggregationFn<any>>\n    }\n  : {\n      aggregationFns: Record<keyof AggregationFns, AggregationFn<any>>\n    }\n\nexport interface GroupingOptions\n  extends GroupingOptionsBase,\n    ResolvedAggregationFns {}\n\nexport type GroupingColumnMode = false | 'reorder' | 'remove'\n\nexport interface GroupingInstance<TData extends RowData> {\n  setGrouping: (updater: Updater<GroupingState>) => void\n  resetGrouping: (defaultState?: boolean) => void\n  getPreGroupedRowModel: () => RowModel<TData>\n  getGroupedRowModel: () => RowModel<TData>\n  _getGroupedRowModel?: () => RowModel<TData>\n}\n\n//\n\nexport const Grouping: TableFeature = {\n  getDefaultColumnDef: <TData extends RowData>(): GroupingColumnDef<\n    TData,\n    unknown\n  > => {\n    return {\n      aggregatedCell: props => (props.getValue() as any)?.toString?.() ?? null,\n      aggregationFn: 'auto',\n    }\n  },\n\n  getInitialState: (state): GroupingTableState => {\n    return {\n      grouping: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): GroupingOptions => {\n    return {\n      onGroupingChange: makeStateUpdater('grouping', table),\n      groupedColumnMode: 'reorder',\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): GroupingColumn<TData> => {\n    return {\n      toggleGrouping: () => {\n        table.setGrouping(old => {\n          // Find any existing grouping for this column\n          if (old?.includes(column.id)) {\n            return old.filter(d => d !== column.id)\n          }\n\n          return [...(old ?? []), column.id]\n        })\n      },\n\n      getCanGroup: () => {\n        return (\n          column.columnDef.enableGrouping ??\n          true ??\n          table.options.enableGrouping ??\n          true ??\n          !!column.accessorFn\n        )\n      },\n\n      getIsGrouped: () => {\n        return table.getState().grouping?.includes(column.id)\n      },\n\n      getGroupedIndex: () => table.getState().grouping?.indexOf(column.id),\n\n      getToggleGroupingHandler: () => {\n        const canGroup = column.getCanGroup()\n\n        return () => {\n          if (!canGroup) return\n          column.toggleGrouping()\n        }\n      },\n      getAutoAggregationFn: () => {\n        const firstRow = table.getCoreRowModel().flatRows[0]\n\n        const value = firstRow?.getValue(column.id)\n\n        if (typeof value === 'number') {\n          return aggregationFns.sum\n        }\n\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          return aggregationFns.extent\n        }\n      },\n      getAggregationFn: () => {\n        if (!column) {\n          throw new Error()\n        }\n\n        return isFunction(column.columnDef.aggregationFn)\n          ? column.columnDef.aggregationFn\n          : column.columnDef.aggregationFn === 'auto'\n          ? column.getAutoAggregationFn()\n          : table.options.aggregationFns?.[\n              column.columnDef.aggregationFn as string\n            ] ??\n            aggregationFns[\n              column.columnDef.aggregationFn as BuiltInAggregationFn\n            ]\n      },\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): GroupingInstance<TData> => {\n    return {\n      setGrouping: updater => table.options.onGroupingChange?.(updater),\n\n      resetGrouping: defaultState => {\n        table.setGrouping(\n          defaultState ? [] : table.initialState?.grouping ?? []\n        )\n      },\n\n      getPreGroupedRowModel: () => table.getFilteredRowModel(),\n      getGroupedRowModel: () => {\n        if (!table._getGroupedRowModel && table.options.getGroupedRowModel) {\n          table._getGroupedRowModel = table.options.getGroupedRowModel(table)\n        }\n\n        if (table.options.manualGrouping || !table._getGroupedRowModel) {\n          return table.getPreGroupedRowModel()\n        }\n\n        return table._getGroupedRowModel()\n      },\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): GroupingRow => {\n    return {\n      getIsGrouped: () => !!row.groupingColumnId,\n      getGroupingValue: columnId => {\n        if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n          return row._groupingValuesCache[columnId]\n        }\n\n        const column = table.getColumn(columnId)\n\n        if (!column?.columnDef.getGroupingValue) {\n          return row.getValue(columnId)\n        }\n\n        row._groupingValuesCache[columnId] = column.columnDef.getGroupingValue(\n          row.original\n        )\n\n        return row._groupingValuesCache[columnId]\n      },\n      _groupingValuesCache: {},\n    }\n  },\n\n  createCell: <TData extends RowData, TValue>(\n    cell: Cell<TData, TValue>,\n    column: Column<TData, TValue>,\n    row: Row<TData>,\n    table: Table<TData>\n  ): GroupingCell => {\n    const getRenderValue = () =>\n      cell.getValue() ?? table.options.renderFallbackValue\n\n    return {\n      getIsGrouped: () =>\n        column.getIsGrouped() && column.id === row.groupingColumnId,\n      getIsPlaceholder: () => !cell.getIsGrouped() && column.getIsGrouped(),\n      getIsAggregated: () =>\n        !cell.getIsGrouped() &&\n        !cell.getIsPlaceholder() &&\n        !!row.subRows?.length,\n    }\n  },\n}\n\nexport function orderColumns<TData extends RowData>(\n  leafColumns: Column<TData, unknown>[],\n  grouping: string[],\n  groupedColumnMode?: GroupingColumnMode\n) {\n  if (!grouping?.length || !groupedColumnMode) {\n    return leafColumns\n  }\n\n  const nonGroupingColumns = leafColumns.filter(\n    col => !grouping.includes(col.id)\n  )\n\n  if (groupedColumnMode === 'remove') {\n    return nonGroupingColumns\n  }\n\n  const groupingColumns = grouping\n    .map(g => leafColumns.find(col => col.id === g)!)\n    .filter(Boolean)\n\n  return [...groupingColumns, ...nonGroupingColumns]\n}\n", "import { makeStateUpdater, memo } from '../utils'\n\nimport { Table, OnChangeFn, Updater, Column, RowData } from '../types'\n\nimport { orderColumns } from './Grouping'\nimport { TableFeature } from '../core/table'\n\nexport interface ColumnOrderTableState {\n  columnOrder: ColumnOrderState\n}\n\nexport type ColumnOrderState = string[]\n\nexport interface ColumnOrderOptions {\n  onColumnOrderChange?: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderDefaultOptions {\n  onColumnOrderChange: OnChangeFn<ColumnOrderState>\n}\n\nexport interface ColumnOrderInstance<TData extends RowData> {\n  setColumnOrder: (updater: Updater<ColumnOrderState>) => void\n  resetColumnOrder: (defaultState?: boolean) => void\n  _getOrderColumnsFn: () => (\n    columns: Column<TData, unknown>[]\n  ) => Column<TData, unknown>[]\n}\n\n//\n\nexport const Ordering: TableFeature = {\n  getInitialState: (state): ColumnOrderTableState => {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnOrderDefaultOptions => {\n    return {\n      onColumnOrderChange: makeStateUpdater('columnOrder', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnOrderInstance<TData> => {\n    return {\n      setColumnOrder: updater => table.options.onColumnOrderChange?.(updater),\n      resetColumnOrder: defaultState => {\n        table.setColumnOrder(\n          defaultState ? [] : table.initialState.columnOrder ?? []\n        )\n      },\n      _getOrderColumnsFn: memo(\n        () => [\n          table.getState().columnOrder,\n          table.getState().grouping,\n          table.options.groupedColumnMode,\n        ],\n        (columnOrder, grouping, groupedColumnMode) => columns => {\n          // Sort grouped columns to the start of the column list\n          // before the headers are built\n          let orderedColumns: Column<TData, unknown>[] = []\n\n          // If there is no order, return the normal columns\n          if (!columnOrder?.length) {\n            orderedColumns = columns\n          } else {\n            const columnOrderCopy = [...columnOrder]\n\n            // If there is an order, make a copy of the columns\n            const columnsCopy = [...columns]\n\n            // And make a new ordered array of the columns\n\n            // Loop over the columns and place them in order into the new array\n            while (columnsCopy.length && columnOrderCopy.length) {\n              const targetColumnId = columnOrderCopy.shift()\n              const foundIndex = columnsCopy.findIndex(\n                d => d.id === targetColumnId\n              )\n              if (foundIndex > -1) {\n                orderedColumns.push(columnsCopy.splice(foundIndex, 1)[0]!)\n              }\n            }\n\n            // If there are any columns left, add them to the end\n            orderedColumns = [...orderedColumns, ...columnsCopy]\n          }\n\n          return orderColumns(orderedColumns, grouping, groupedColumnMode)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getOrderColumnsFn',\n          // debug: () => table.options.debugAll ?? table.options.debugTable,\n        }\n      ),\n    }\n  },\n}\n", "import { TableFeature } from '../core/table'\nimport { OnChangeFn, Table, RowModel, Updater, RowData } from '../types'\nimport { functionalUpdate, makeStateUpdater, memo } from '../utils'\n\nexport interface PaginationState {\n  pageIndex: number\n  pageSize: number\n}\n\nexport interface PaginationTableState {\n  pagination: PaginationState\n}\n\nexport interface PaginationInitialTableState {\n  pagination?: Partial<PaginationState>\n}\n\nexport interface PaginationOptions {\n  pageCount?: number\n  manualPagination?: boolean\n  onPaginationChange?: OnChangeFn<PaginationState>\n  autoResetPageIndex?: boolean\n  getPaginationRowModel?: (table: Table<any>) => () => RowModel<any>\n}\n\nexport interface PaginationDefaultOptions {\n  onPaginationChange: OnChangeFn<PaginationState>\n}\n\nexport interface PaginationInstance<TData extends RowData> {\n  _autoResetPageIndex: () => void\n  setPagination: (updater: Updater<PaginationState>) => void\n  resetPagination: (defaultState?: boolean) => void\n  setPageIndex: (updater: Updater<number>) => void\n  resetPageIndex: (defaultState?: boolean) => void\n  setPageSize: (updater: Updater<number>) => void\n  resetPageSize: (defaultState?: boolean) => void\n  setPageCount: (updater: Updater<number>) => void\n  getPageOptions: () => number[]\n  getCanPreviousPage: () => boolean\n  getCanNextPage: () => boolean\n  previousPage: () => void\n  nextPage: () => void\n  getPrePaginationRowModel: () => RowModel<TData>\n  getPaginationRowModel: () => RowModel<TData>\n  _getPaginationRowModel?: () => RowModel<TData>\n  getPageCount: () => number\n}\n\n//\n\nconst defaultPageIndex = 0\nconst defaultPageSize = 10\n\nconst getDefaultPaginationState = (): PaginationState => ({\n  pageIndex: defaultPageIndex,\n  pageSize: defaultPageSize,\n})\n\nexport const Pagination: TableFeature = {\n  getInitialState: (state): PaginationTableState => {\n    return {\n      ...state,\n      pagination: {\n        ...getDefaultPaginationState(),\n        ...state?.pagination,\n      },\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): PaginationDefaultOptions => {\n    return {\n      onPaginationChange: makeStateUpdater('pagination', table),\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): PaginationInstance<TData> => {\n    let registered = false\n    let queued = false\n\n    return {\n      _autoResetPageIndex: () => {\n        if (!registered) {\n          table._queue(() => {\n            registered = true\n          })\n          return\n        }\n\n        if (\n          table.options.autoResetAll ??\n          table.options.autoResetPageIndex ??\n          !table.options.manualPagination\n        ) {\n          if (queued) return\n          queued = true\n          table._queue(() => {\n            table.resetPageIndex()\n            queued = false\n          })\n        }\n      },\n      setPagination: updater => {\n        const safeUpdater: Updater<PaginationState> = old => {\n          let newState = functionalUpdate(updater, old)\n\n          return newState\n        }\n\n        return table.options.onPaginationChange?.(safeUpdater)\n      },\n      resetPagination: defaultState => {\n        table.setPagination(\n          defaultState\n            ? getDefaultPaginationState()\n            : table.initialState.pagination ?? getDefaultPaginationState()\n        )\n      },\n      setPageIndex: updater => {\n        table.setPagination(old => {\n          let pageIndex = functionalUpdate(updater, old.pageIndex)\n\n          const maxPageIndex =\n            typeof table.options.pageCount === 'undefined' ||\n            table.options.pageCount === -1\n              ? Number.MAX_SAFE_INTEGER\n              : table.options.pageCount - 1\n\n          pageIndex = Math.max(0, Math.min(pageIndex, maxPageIndex))\n\n          return {\n            ...old,\n            pageIndex,\n          }\n        })\n      },\n      resetPageIndex: defaultState => {\n        table.setPageIndex(\n          defaultState\n            ? defaultPageIndex\n            : table.initialState?.pagination?.pageIndex ?? defaultPageIndex\n        )\n      },\n      resetPageSize: defaultState => {\n        table.setPageSize(\n          defaultState\n            ? defaultPageSize\n            : table.initialState?.pagination?.pageSize ?? defaultPageSize\n        )\n      },\n      setPageSize: updater => {\n        table.setPagination(old => {\n          const pageSize = Math.max(1, functionalUpdate(updater, old.pageSize))\n          const topRowIndex = old.pageSize * old.pageIndex!\n          const pageIndex = Math.floor(topRowIndex / pageSize)\n\n          return {\n            ...old,\n            pageIndex,\n            pageSize,\n          }\n        })\n      },\n      setPageCount: updater =>\n        table.setPagination(old => {\n          let newPageCount = functionalUpdate(\n            updater,\n            table.options.pageCount ?? -1\n          )\n\n          if (typeof newPageCount === 'number') {\n            newPageCount = Math.max(-1, newPageCount)\n          }\n\n          return {\n            ...old,\n            pageCount: newPageCount,\n          }\n        }),\n\n      getPageOptions: memo(\n        () => [table.getPageCount()],\n        pageCount => {\n          let pageOptions: number[] = []\n          if (pageCount && pageCount > 0) {\n            pageOptions = [...new Array(pageCount)].fill(null).map((_, i) => i)\n          }\n          return pageOptions\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getPageOptions',\n          debug: () => table.options.debugAll ?? table.options.debugTable,\n        }\n      ),\n\n      getCanPreviousPage: () => table.getState().pagination.pageIndex > 0,\n\n      getCanNextPage: () => {\n        const { pageIndex } = table.getState().pagination\n\n        const pageCount = table.getPageCount()\n\n        if (pageCount === -1) {\n          return true\n        }\n\n        if (pageCount === 0) {\n          return false\n        }\n\n        return pageIndex < pageCount - 1\n      },\n\n      previousPage: () => {\n        return table.setPageIndex(old => old - 1)\n      },\n\n      nextPage: () => {\n        return table.setPageIndex(old => {\n          return old + 1\n        })\n      },\n\n      getPrePaginationRowModel: () => table.getExpandedRowModel(),\n      getPaginationRowModel: () => {\n        if (\n          !table._getPaginationRowModel &&\n          table.options.getPaginationRowModel\n        ) {\n          table._getPaginationRowModel =\n            table.options.getPaginationRowModel(table)\n        }\n\n        if (table.options.manualPagination || !table._getPaginationRowModel) {\n          return table.getPrePaginationRowModel()\n        }\n\n        return table._getPaginationRowModel()\n      },\n\n      getPageCount: () => {\n        return (\n          table.options.pageCount ??\n          Math.ceil(\n            table.getPrePaginationRowModel().rows.length /\n              table.getState().pagination.pageSize\n          )\n        )\n      },\n    }\n  },\n}\n", "import { TableFeature } from '../core/table'\nimport {\n  OnChangeFn,\n  Updater,\n  Table,\n  Column,\n  Row,\n  Cell,\n  RowData,\n} from '../types'\nimport { makeStateUpdater, memo } from '../utils'\n\nexport type ColumnPinningPosition = false | 'left' | 'right'\n\nexport interface ColumnPinningState {\n  left?: string[]\n  right?: string[]\n}\n\nexport interface ColumnPinningTableState {\n  columnPinning: ColumnPinningState\n}\n\nexport interface ColumnPinningOptions {\n  onColumnPinningChange?: OnChangeFn<ColumnPinningState>\n  enablePinning?: boolean\n}\n\nexport interface ColumnPinningDefaultOptions {\n  onColumnPinningChange: OnChangeFn<ColumnPinningState>\n}\n\nexport interface ColumnPinningColumnDef {\n  enablePinning?: boolean\n}\n\nexport interface ColumnPinningColumn {\n  getCanPin: () => boolean\n  getPinnedIndex: () => number\n  getIsPinned: () => ColumnPinningPosition\n  pin: (position: ColumnPinningPosition) => void\n}\n\nexport interface ColumnPinningRow<TData extends RowData> {\n  getLeftVisibleCells: () => Cell<TData, unknown>[]\n  getCenterVisibleCells: () => Cell<TData, unknown>[]\n  getRightVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface ColumnPinningInstance<TData extends RowData> {\n  setColumnPinning: (updater: Updater<ColumnPinningState>) => void\n  resetColumnPinning: (defaultState?: boolean) => void\n  getIsSomeColumnsPinned: (position?: ColumnPinningPosition) => boolean\n  getLeftLeafColumns: () => Column<TData, unknown>[]\n  getRightLeafColumns: () => Column<TData, unknown>[]\n  getCenterLeafColumns: () => Column<TData, unknown>[]\n}\n\n//\n\nconst getDefaultPinningState = (): ColumnPinningState => ({\n  left: [],\n  right: [],\n})\n\nexport const Pinning: TableFeature = {\n  getInitialState: (state): ColumnPinningTableState => {\n    return {\n      columnPinning: getDefaultPinningState(),\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnPinningDefaultOptions => {\n    return {\n      onColumnPinningChange: makeStateUpdater('columnPinning', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): ColumnPinningColumn => {\n    return {\n      pin: position => {\n        const columnIds = column\n          .getLeafColumns()\n          .map(d => d.id)\n          .filter(Boolean) as string[]\n\n        table.setColumnPinning(old => {\n          if (position === 'right') {\n            return {\n              left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n              right: [\n                ...(old?.right ?? []).filter(d => !columnIds?.includes(d)),\n                ...columnIds,\n              ],\n            }\n          }\n\n          if (position === 'left') {\n            return {\n              left: [\n                ...(old?.left ?? []).filter(d => !columnIds?.includes(d)),\n                ...columnIds,\n              ],\n              right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n            }\n          }\n\n          return {\n            left: (old?.left ?? []).filter(d => !columnIds?.includes(d)),\n            right: (old?.right ?? []).filter(d => !columnIds?.includes(d)),\n          }\n        })\n      },\n\n      getCanPin: () => {\n        const leafColumns = column.getLeafColumns()\n\n        return leafColumns.some(\n          d =>\n            (d.columnDef.enablePinning ?? true) &&\n            (table.options.enablePinning ?? true)\n        )\n      },\n\n      getIsPinned: () => {\n        const leafColumnIds = column.getLeafColumns().map(d => d.id)\n\n        const { left, right } = table.getState().columnPinning\n\n        const isLeft = leafColumnIds.some(d => left?.includes(d))\n        const isRight = leafColumnIds.some(d => right?.includes(d))\n\n        return isLeft ? 'left' : isRight ? 'right' : false\n      },\n\n      getPinnedIndex: () => {\n        const position = column.getIsPinned()\n\n        return position\n          ? table.getState().columnPinning?.[position]?.indexOf(column.id) ?? -1\n          : 0\n      },\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): ColumnPinningRow<TData> => {\n    return {\n      getCenterVisibleCells: memo(\n        () => [\n          row._getAllVisibleCells(),\n          table.getState().columnPinning.left,\n          table.getState().columnPinning.right,\n        ],\n        (allCells, left, right) => {\n          const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n          return allCells.filter(d => !leftAndRight.includes(d.column.id))\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'production' &&\n            'row.getCenterVisibleCells',\n          debug: () => table.options.debugAll ?? table.options.debugRows,\n        }\n      ),\n      getLeftVisibleCells: memo(\n        () => [\n          row._getAllVisibleCells(),\n          table.getState().columnPinning.left,\n          ,\n        ],\n        (allCells, left) => {\n          const cells = (left ?? [])\n            .map(\n              columnId => allCells.find(cell => cell.column.id === columnId)!\n            )\n            .filter(Boolean)\n            .map(d => ({ ...d, position: 'left' } as Cell<TData, unknown>))\n\n          return cells\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'production' && 'row.getLeftVisibleCells',\n          debug: () => table.options.debugAll ?? table.options.debugRows,\n        }\n      ),\n      getRightVisibleCells: memo(\n        () => [row._getAllVisibleCells(), table.getState().columnPinning.right],\n        (allCells, right) => {\n          const cells = (right ?? [])\n            .map(\n              columnId => allCells.find(cell => cell.column.id === columnId)!\n            )\n            .filter(Boolean)\n            .map(d => ({ ...d, position: 'right' } as Cell<TData, unknown>))\n\n          return cells\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'production' && 'row.getRightVisibleCells',\n          debug: () => table.options.debugAll ?? table.options.debugRows,\n        }\n      ),\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): ColumnPinningInstance<TData> => {\n    return {\n      setColumnPinning: updater =>\n        table.options.onColumnPinningChange?.(updater),\n\n      resetColumnPinning: defaultState =>\n        table.setColumnPinning(\n          defaultState\n            ? getDefaultPinningState()\n            : table.initialState?.columnPinning ?? getDefaultPinningState()\n        ),\n\n      getIsSomeColumnsPinned: position => {\n        const pinningState = table.getState().columnPinning\n\n        if (!position) {\n          return Boolean(\n            pinningState.left?.length || pinningState.right?.length\n          )\n        }\n        return Boolean(pinningState[position]?.length)\n      },\n\n      getLeftLeafColumns: memo(\n        () => [table.getAllLeafColumns(), table.getState().columnPinning.left],\n        (allColumns, left) => {\n          return (left ?? [])\n            .map(columnId => allColumns.find(column => column.id === columnId)!)\n            .filter(Boolean)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getLeftLeafColumns',\n          debug: () => table.options.debugAll ?? table.options.debugColumns,\n        }\n      ),\n\n      getRightLeafColumns: memo(\n        () => [table.getAllLeafColumns(), table.getState().columnPinning.right],\n        (allColumns, right) => {\n          return (right ?? [])\n            .map(columnId => allColumns.find(column => column.id === columnId)!)\n            .filter(Boolean)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getRightLeafColumns',\n          debug: () => table.options.debugAll ?? table.options.debugColumns,\n        }\n      ),\n\n      getCenterLeafColumns: memo(\n        () => [\n          table.getAllLeafColumns(),\n          table.getState().columnPinning.left,\n          table.getState().columnPinning.right,\n        ],\n        (allColumns, left, right) => {\n          const leftAndRight: string[] = [...(left ?? []), ...(right ?? [])]\n\n          return allColumns.filter(d => !leftAndRight.includes(d.id))\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getCenterLeafColumns',\n          debug: () => table.options.debugAll ?? table.options.debugColumns,\n        }\n      ),\n    }\n  },\n}\n", "import { TableFeature } from '../core/table'\nimport { OnChangeFn, Table, Row, RowModel, Updater, RowData } from '../types'\nimport { makeStateUpdater, memo } from '../utils'\n\nexport type RowSelectionState = Record<string, boolean>\n\nexport interface RowSelectionTableState {\n  rowSelection: RowSelectionState\n}\n\nexport interface RowSelectionOptions<TData extends RowData> {\n  enableRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  enableMultiRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  enableSubRowSelection?: boolean | ((row: Row<TData>) => boolean)\n  onRowSelectionChange?: OnChangeFn<RowSelectionState>\n  // enableGroupingRowSelection?:\n  //   | boolean\n  //   | ((\n  //       row: Row<TData>\n  //     ) => boolean)\n  // isAdditiveSelectEvent?: (e: unknown) => boolean\n  // isInclusiveSelectEvent?: (e: unknown) => boolean\n  // selectRowsFn?: (\n  //   table: Table<TData>,\n  //   rowModel: RowModel<TData>\n  // ) => RowModel<TData>\n}\n\nexport interface RowSelectionRow {\n  getIsSelected: () => boolean\n  getIsSomeSelected: () => boolean\n  getIsAllSubRowsSelected: () => boolean\n  getCanSelect: () => boolean\n  getCanMultiSelect: () => boolean\n  getCanSelectSubRows: () => boolean\n  toggleSelected: (value?: boolean) => void\n  getToggleSelectedHandler: () => (event: unknown) => void\n}\n\nexport interface RowSelectionInstance<TData extends RowData> {\n  getToggleAllRowsSelectedHandler: () => (event: unknown) => void\n  getToggleAllPageRowsSelectedHandler: () => (event: unknown) => void\n  setRowSelection: (updater: Updater<RowSelectionState>) => void\n  resetRowSelection: (defaultState?: boolean) => void\n  getIsAllRowsSelected: () => boolean\n  getIsAllPageRowsSelected: () => boolean\n  getIsSomeRowsSelected: () => boolean\n  getIsSomePageRowsSelected: () => boolean\n  toggleAllRowsSelected: (value?: boolean) => void\n  toggleAllPageRowsSelected: (value?: boolean) => void\n  getPreSelectedRowModel: () => RowModel<TData>\n  getSelectedRowModel: () => RowModel<TData>\n  getFilteredSelectedRowModel: () => RowModel<TData>\n  getGroupedSelectedRowModel: () => RowModel<TData>\n}\n\n//\n\nexport const RowSelection: TableFeature = {\n  getInitialState: (state): RowSelectionTableState => {\n    return {\n      rowSelection: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): RowSelectionOptions<TData> => {\n    return {\n      onRowSelectionChange: makeStateUpdater('rowSelection', table),\n      enableRowSelection: true,\n      enableMultiRowSelection: true,\n      enableSubRowSelection: true,\n      // enableGroupingRowSelection: false,\n      // isAdditiveSelectEvent: (e: unknown) => !!e.metaKey,\n      // isInclusiveSelectEvent: (e: unknown) => !!e.shiftKey,\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): RowSelectionInstance<TData> => {\n    return {\n      setRowSelection: updater => table.options.onRowSelectionChange?.(updater),\n      resetRowSelection: defaultState =>\n        table.setRowSelection(\n          defaultState ? {} : table.initialState.rowSelection ?? {}\n        ),\n      toggleAllRowsSelected: value => {\n        table.setRowSelection(old => {\n          value =\n            typeof value !== 'undefined' ? value : !table.getIsAllRowsSelected()\n\n          const rowSelection = { ...old }\n\n          const preGroupedFlatRows = table.getPreGroupedRowModel().flatRows\n\n          // We don't use `mutateRowIsSelected` here for performance reasons.\n          // All of the rows are flat already, so it wouldn't be worth it\n          if (value) {\n            preGroupedFlatRows.forEach(row => {\n              if (!row.getCanSelect()) {\n                return\n              }\n              rowSelection[row.id] = true\n            })\n          } else {\n            preGroupedFlatRows.forEach(row => {\n              delete rowSelection[row.id]\n            })\n          }\n\n          return rowSelection\n        })\n      },\n      toggleAllPageRowsSelected: value =>\n        table.setRowSelection(old => {\n          const resolvedValue =\n            typeof value !== 'undefined'\n              ? value\n              : !table.getIsAllPageRowsSelected()\n\n          const rowSelection: RowSelectionState = { ...old }\n\n          table.getRowModel().rows.forEach(row => {\n            mutateRowIsSelected(rowSelection, row.id, resolvedValue, table)\n          })\n\n          return rowSelection\n        }),\n\n      // addRowSelectionRange: rowId => {\n      //   const {\n      //     rows,\n      //     rowsById,\n      //     options: { selectGroupingRows, selectSubRows },\n      //   } = table\n\n      //   const findSelectedRow = (rows: Row[]) => {\n      //     let found\n      //     rows.find(d => {\n      //       if (d.getIsSelected()) {\n      //         found = d\n      //         return true\n      //       }\n      //       const subFound = findSelectedRow(d.subRows || [])\n      //       if (subFound) {\n      //         found = subFound\n      //         return true\n      //       }\n      //       return false\n      //     })\n      //     return found\n      //   }\n\n      //   const firstRow = findSelectedRow(rows) || rows[0]\n      //   const lastRow = rowsById[rowId]\n\n      //   let include = false\n      //   const selectedRowIds = {}\n\n      //   const addRow = (row: Row) => {\n      //     mutateRowIsSelected(selectedRowIds, row.id, true, {\n      //       rowsById,\n      //       selectGroupingRows: selectGroupingRows!,\n      //       selectSubRows: selectSubRows!,\n      //     })\n      //   }\n\n      //   table.rows.forEach(row => {\n      //     const isFirstRow = row.id === firstRow.id\n      //     const isLastRow = row.id === lastRow.id\n\n      //     if (isFirstRow || isLastRow) {\n      //       if (!include) {\n      //         include = true\n      //       } else if (include) {\n      //         addRow(row)\n      //         include = false\n      //       }\n      //     }\n\n      //     if (include) {\n      //       addRow(row)\n      //     }\n      //   })\n\n      //   table.setRowSelection(selectedRowIds)\n      // },\n      getPreSelectedRowModel: () => table.getCoreRowModel(),\n      getSelectedRowModel: memo(\n        () => [table.getState().rowSelection, table.getCoreRowModel()],\n        (rowSelection, rowModel) => {\n          if (!Object.keys(rowSelection).length) {\n            return {\n              rows: [],\n              flatRows: [],\n              rowsById: {},\n            }\n          }\n\n          return selectRowsFn(table, rowModel)\n        },\n        {\n          key: process.env.NODE_ENV === 'development' && 'getSelectedRowModel',\n          debug: () => table.options.debugAll ?? table.options.debugTable,\n        }\n      ),\n\n      getFilteredSelectedRowModel: memo(\n        () => [table.getState().rowSelection, table.getFilteredRowModel()],\n        (rowSelection, rowModel) => {\n          if (!Object.keys(rowSelection).length) {\n            return {\n              rows: [],\n              flatRows: [],\n              rowsById: {},\n            }\n          }\n\n          return selectRowsFn(table, rowModel)\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'production' &&\n            'getFilteredSelectedRowModel',\n          debug: () => table.options.debugAll ?? table.options.debugTable,\n        }\n      ),\n\n      getGroupedSelectedRowModel: memo(\n        () => [table.getState().rowSelection, table.getSortedRowModel()],\n        (rowSelection, rowModel) => {\n          if (!Object.keys(rowSelection).length) {\n            return {\n              rows: [],\n              flatRows: [],\n              rowsById: {},\n            }\n          }\n\n          return selectRowsFn(table, rowModel)\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'production' &&\n            'getGroupedSelectedRowModel',\n          debug: () => table.options.debugAll ?? table.options.debugTable,\n        }\n      ),\n\n      ///\n\n      // getGroupingRowCanSelect: rowId => {\n      //   const row = table.getRow(rowId)\n\n      //   if (!row) {\n      //     throw new Error()\n      //   }\n\n      //   if (typeof table.options.enableGroupingRowSelection === 'function') {\n      //     return table.options.enableGroupingRowSelection(row)\n      //   }\n\n      //   return table.options.enableGroupingRowSelection ?? false\n      // },\n\n      getIsAllRowsSelected: () => {\n        const preGroupedFlatRows = table.getFilteredRowModel().flatRows\n        const { rowSelection } = table.getState()\n\n        let isAllRowsSelected = Boolean(\n          preGroupedFlatRows.length && Object.keys(rowSelection).length\n        )\n\n        if (isAllRowsSelected) {\n          if (\n            preGroupedFlatRows.some(\n              row => row.getCanSelect() && !rowSelection[row.id]\n            )\n          ) {\n            isAllRowsSelected = false\n          }\n        }\n\n        return isAllRowsSelected\n      },\n\n      getIsAllPageRowsSelected: () => {\n        const paginationFlatRows = table\n          .getPaginationRowModel()\n          .flatRows.filter(row => row.getCanSelect())\n        const { rowSelection } = table.getState()\n\n        let isAllPageRowsSelected = !!paginationFlatRows.length\n\n        if (\n          isAllPageRowsSelected &&\n          paginationFlatRows.some(row => !rowSelection[row.id])\n        ) {\n          isAllPageRowsSelected = false\n        }\n\n        return isAllPageRowsSelected\n      },\n\n      getIsSomeRowsSelected: () => {\n        const totalSelected = Object.keys(\n          table.getState().rowSelection ?? {}\n        ).length\n        return (\n          totalSelected > 0 &&\n          totalSelected < table.getFilteredRowModel().flatRows.length\n        )\n      },\n\n      getIsSomePageRowsSelected: () => {\n        const paginationFlatRows = table.getPaginationRowModel().flatRows\n        return table.getIsAllPageRowsSelected()\n          ? false\n          : paginationFlatRows\n              .filter(row => row.getCanSelect())\n              .some(d => d.getIsSelected() || d.getIsSomeSelected())\n      },\n\n      getToggleAllRowsSelectedHandler: () => {\n        return (e: unknown) => {\n          table.toggleAllRowsSelected(\n            ((e as MouseEvent).target as HTMLInputElement).checked\n          )\n        }\n      },\n\n      getToggleAllPageRowsSelectedHandler: () => {\n        return (e: unknown) => {\n          table.toggleAllPageRowsSelected(\n            ((e as MouseEvent).target as HTMLInputElement).checked\n          )\n        }\n      },\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): RowSelectionRow => {\n    return {\n      toggleSelected: value => {\n        const isSelected = row.getIsSelected()\n\n        table.setRowSelection(old => {\n          value = typeof value !== 'undefined' ? value : !isSelected\n\n          if (isSelected === value) {\n            return old\n          }\n\n          const selectedRowIds = { ...old }\n\n          mutateRowIsSelected(selectedRowIds, row.id, value, table)\n\n          return selectedRowIds\n        })\n      },\n      getIsSelected: () => {\n        const { rowSelection } = table.getState()\n        return isRowSelected(row, rowSelection)\n      },\n\n      getIsSomeSelected: () => {\n        const { rowSelection } = table.getState()\n        return isSubRowSelected(row, rowSelection, table) === 'some'\n      },\n\n      getIsAllSubRowsSelected: () => {\n        const { rowSelection } = table.getState()\n        return isSubRowSelected(row, rowSelection, table) === 'all'\n      },\n\n      getCanSelect: () => {\n        if (typeof table.options.enableRowSelection === 'function') {\n          return table.options.enableRowSelection(row)\n        }\n\n        return table.options.enableRowSelection ?? true\n      },\n\n      getCanSelectSubRows: () => {\n        if (typeof table.options.enableSubRowSelection === 'function') {\n          return table.options.enableSubRowSelection(row)\n        }\n\n        return table.options.enableSubRowSelection ?? true\n      },\n\n      getCanMultiSelect: () => {\n        if (typeof table.options.enableMultiRowSelection === 'function') {\n          return table.options.enableMultiRowSelection(row)\n        }\n\n        return table.options.enableMultiRowSelection ?? true\n      },\n      getToggleSelectedHandler: () => {\n        const canSelect = row.getCanSelect()\n\n        return (e: unknown) => {\n          if (!canSelect) return\n          row.toggleSelected(\n            ((e as MouseEvent).target as HTMLInputElement)?.checked\n          )\n        }\n      },\n    }\n  },\n}\n\nconst mutateRowIsSelected = <TData extends RowData>(\n  selectedRowIds: Record<string, boolean>,\n  id: string,\n  value: boolean,\n  table: Table<TData>\n) => {\n  const row = table.getRow(id)\n\n  // const isGrouped = row.getIsGrouped()\n\n  // if ( // TODO: enforce grouping row selection rules\n  //   !isGrouped ||\n  //   (isGrouped && table.options.enableGroupingRowSelection)\n  // ) {\n  if (value) {\n    if (!row.getCanMultiSelect()) {\n      Object.keys(selectedRowIds).forEach(key => delete selectedRowIds[key])\n    }\n    if (row.getCanSelect()) {\n      selectedRowIds[id] = true\n    }\n  } else {\n    delete selectedRowIds[id]\n  }\n  // }\n\n  if (row.subRows?.length && row.getCanSelectSubRows()) {\n    row.subRows.forEach(row =>\n      mutateRowIsSelected(selectedRowIds, row.id, value, table)\n    )\n  }\n}\n\nexport function selectRowsFn<TData extends RowData>(\n  table: Table<TData>,\n  rowModel: RowModel<TData>\n): RowModel<TData> {\n  const rowSelection = table.getState().rowSelection\n\n  const newSelectedFlatRows: Row<TData>[] = []\n  const newSelectedRowsById: Record<string, Row<TData>> = {}\n\n  // Filters top level and nested rows\n  const recurseRows = (rows: Row<TData>[], depth = 0): Row<TData>[] => {\n    return rows\n      .map(row => {\n        const isSelected = isRowSelected(row, rowSelection)\n\n        if (isSelected) {\n          newSelectedFlatRows.push(row)\n          newSelectedRowsById[row.id] = row\n        }\n\n        if (row.subRows?.length) {\n          row = {\n            ...row,\n            subRows: recurseRows(row.subRows, depth + 1),\n          }\n        }\n\n        if (isSelected) {\n          return row\n        }\n      })\n      .filter(Boolean) as Row<TData>[]\n  }\n\n  return {\n    rows: recurseRows(rowModel.rows),\n    flatRows: newSelectedFlatRows,\n    rowsById: newSelectedRowsById,\n  }\n}\n\nexport function isRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>\n): boolean {\n  return selection[row.id] ?? false\n}\n\nexport function isSubRowSelected<TData extends RowData>(\n  row: Row<TData>,\n  selection: Record<string, boolean>,\n  table: Table<TData>\n): boolean | 'some' | 'all' {\n  if (row.subRows && row.subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    row.subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (isRowSelected(subRow, selection)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n\n    return allChildrenSelected ? 'all' : someSelected ? 'some' : false\n  }\n\n  return false\n}\n", "import { SortingFn } from './features/Sorting'\n\nexport const reSplitAlphaNumeric = /([0-9]+)/gm\n\nconst alphanumeric: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\nconst alphanumericCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareAlphanumeric(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst text: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)).toLowerCase(),\n    toString(rowB.getValue(columnId)).toLowerCase()\n  )\n}\n\n// The text filter is more basic (less numeric support)\n// but is much faster\nconst textCaseSensitive: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(\n    toString(rowA.getValue(columnId)),\n    toString(rowB.getValue(columnId))\n  )\n}\n\nconst datetime: SortingFn<any> = (rowA, rowB, columnId) => {\n  const a = rowA.getValue<Date>(columnId)\n  const b = rowB.getValue<Date>(columnId)\n\n  // Can handle nullish values\n  // Use > and < because == (and ===) doesn't work with\n  // Date objects (would require calling getTime()).\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nconst basic: SortingFn<any> = (rowA, rowB, columnId) => {\n  return compareBasic(rowA.getValue(columnId), rowB.getValue(columnId))\n}\n\n// Utils\n\nfunction compareBasic(a: any, b: any) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction toString(a: any) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nfunction compareAlphanumeric(aStr: string, bStr: string) {\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  const a = aStr.split(reSplitAlphaNumeric).filter(Boolean)\n  const b = bStr.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    const aa = a.shift()!\n    const bb = b.shift()!\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0]!)) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1]!)) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\n// Exports\n\nexport const sortingFns = {\n  alphanumeric,\n  alphanumericCaseSensitive,\n  text,\n  textCaseSensitive,\n  datetime,\n  basic,\n}\n\nexport type BuiltInSortingFn = keyof typeof sortingFns\n", "import { RowModel } from '..'\nimport { TableFeature } from '../core/table'\nimport {\n  BuiltInSortingFn,\n  reSplitAlphaNumeric,\n  sortingFns,\n} from '../sortingFns'\n\nimport {\n  Column,\n  OnChangeFn,\n  Table,\n  Row,\n  Updater,\n  RowData,\n  SortingFns,\n} from '../types'\n\nimport { isFunction, makeStateUpdater } from '../utils'\n\nexport type SortDirection = 'asc' | 'desc'\n\nexport interface ColumnSort {\n  id: string\n  desc: boolean\n}\n\nexport type SortingState = ColumnSort[]\n\nexport interface SortingTableState {\n  sorting: SortingState\n}\n\nexport interface SortingFn<TData extends RowData> {\n  (rowA: Row<TData>, rowB: Row<TData>, columnId: string): number\n}\n\nexport type CustomSortingFns<TData extends RowData> = Record<\n  string,\n  SortingFn<TData>\n>\n\nexport type SortingFnOption<TData extends RowData> =\n  | 'auto'\n  | keyof SortingFns\n  | BuiltInSortingFn\n  | SortingFn<TData>\n\nexport interface SortingColumnDef<TData extends RowData> {\n  sortingFn?: SortingFnOption<TData>\n  sortDescFirst?: boolean\n  enableSorting?: boolean\n  enableMultiSort?: boolean\n  invertSorting?: boolean\n  sortUndefined?: false | -1 | 1\n}\n\nexport interface SortingColumn<TData extends RowData> {\n  getAutoSortingFn: () => SortingFn<TData>\n  getAutoSortDir: () => SortDirection\n  getSortingFn: () => SortingFn<TData>\n  getFirstSortDir: () => SortDirection\n  getNextSortingOrder: () => SortDirection | false\n  getCanSort: () => boolean\n  getCanMultiSort: () => boolean\n  getSortIndex: () => number\n  getIsSorted: () => false | SortDirection\n  clearSorting: () => void\n  toggleSorting: (desc?: boolean, isMulti?: boolean) => void\n  getToggleSortingHandler: () => undefined | ((event: unknown) => void)\n}\n\ninterface SortingOptionsBase {\n  manualSorting?: boolean\n  onSortingChange?: OnChangeFn<SortingState>\n  enableSorting?: boolean\n  enableSortingRemoval?: boolean\n  enableMultiRemove?: boolean\n  enableMultiSort?: boolean\n  sortDescFirst?: boolean\n  getSortedRowModel?: (table: Table<any>) => () => RowModel<any>\n  maxMultiSortColCount?: number\n  isMultiSortEvent?: (e: unknown) => boolean\n}\n\ntype ResolvedSortingFns = keyof SortingFns extends never\n  ? {\n      sortingFns?: Record<string, SortingFn<any>>\n    }\n  : {\n      sortingFns: Record<keyof SortingFns, SortingFn<any>>\n    }\n\nexport interface SortingOptions<TData extends RowData>\n  extends SortingOptionsBase,\n    ResolvedSortingFns {}\n\nexport interface SortingInstance<TData extends RowData> {\n  setSorting: (updater: Updater<SortingState>) => void\n  resetSorting: (defaultState?: boolean) => void\n  getPreSortedRowModel: () => RowModel<TData>\n  getSortedRowModel: () => RowModel<TData>\n  _getSortedRowModel?: () => RowModel<TData>\n}\n\n//\n\nexport const Sorting: TableFeature = {\n  getInitialState: (state): SortingTableState => {\n    return {\n      sorting: [],\n      ...state,\n    }\n  },\n\n  getDefaultColumnDef: <TData extends RowData>(): SortingColumnDef<TData> => {\n    return {\n      sortingFn: 'auto',\n      sortUndefined: 1,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): SortingOptions<TData> => {\n    return {\n      onSortingChange: makeStateUpdater('sorting', table),\n      isMultiSortEvent: (e: unknown) => {\n        return (e as MouseEvent).shiftKey\n      },\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): SortingColumn<TData> => {\n    return {\n      getAutoSortingFn: () => {\n        const firstRows = table.getFilteredRowModel().flatRows.slice(10)\n\n        let isString = false\n\n        for (const row of firstRows) {\n          const value = row?.getValue(column.id)\n\n          if (Object.prototype.toString.call(value) === '[object Date]') {\n            return sortingFns.datetime\n          }\n\n          if (typeof value === 'string') {\n            isString = true\n\n            if (value.split(reSplitAlphaNumeric).length > 1) {\n              return sortingFns.alphanumeric\n            }\n          }\n        }\n\n        if (isString) {\n          return sortingFns.text\n        }\n\n        return sortingFns.basic\n      },\n      getAutoSortDir: () => {\n        const firstRow = table.getFilteredRowModel().flatRows[0]\n\n        const value = firstRow?.getValue(column.id)\n\n        if (typeof value === 'string') {\n          return 'asc'\n        }\n\n        return 'desc'\n      },\n      getSortingFn: () => {\n        if (!column) {\n          throw new Error()\n        }\n\n        return isFunction(column.columnDef.sortingFn)\n          ? column.columnDef.sortingFn\n          : column.columnDef.sortingFn === 'auto'\n          ? column.getAutoSortingFn()\n          : table.options.sortingFns?.[column.columnDef.sortingFn as string] ??\n            sortingFns[column.columnDef.sortingFn as BuiltInSortingFn]\n      },\n      toggleSorting: (desc, multi) => {\n        // if (column.columns.length) {\n        //   column.columns.forEach((c, i) => {\n        //     if (c.id) {\n        //       table.toggleColumnSorting(c.id, undefined, multi || !!i)\n        //     }\n        //   })\n        //   return\n        // }\n\n        // this needs to be outside of table.setSorting to be in sync with rerender\n        const nextSortingOrder = column.getNextSortingOrder()\n        const hasManualValue = typeof desc !== 'undefined' && desc !== null\n\n        table.setSorting(old => {\n          // Find any existing sorting for this column\n          const existingSorting = old?.find(d => d.id === column.id)\n          const existingIndex = old?.findIndex(d => d.id === column.id)\n\n          let newSorting: SortingState = []\n\n          // What should we do with this sort action?\n          let sortAction: 'add' | 'remove' | 'toggle' | 'replace'\n          let nextDesc = hasManualValue ? desc : nextSortingOrder === 'desc'\n\n          // Multi-mode\n          if (old?.length && column.getCanMultiSort() && multi) {\n            if (existingSorting) {\n              sortAction = 'toggle'\n            } else {\n              sortAction = 'add'\n            }\n          } else {\n            // Normal mode\n            if (old?.length && existingIndex !== old.length - 1) {\n              sortAction = 'replace'\n            } else if (existingSorting) {\n              sortAction = 'toggle'\n            } else {\n              sortAction = 'replace'\n            }\n          }\n\n          // Handle toggle states that will remove the sorting\n          if (sortAction === 'toggle') {\n            // If we are \"actually\" toggling (not a manual set value), should we remove the sorting?\n            if (!hasManualValue) {\n              // Is our intention to remove?\n              if (!nextSortingOrder) {\n                sortAction = 'remove'\n              }\n            }\n          }\n\n          if (sortAction === 'add') {\n            newSorting = [\n              ...old,\n              {\n                id: column.id,\n                desc: nextDesc,\n              },\n            ]\n            // Take latest n columns\n            newSorting.splice(\n              0,\n              newSorting.length -\n                (table.options.maxMultiSortColCount ?? Number.MAX_SAFE_INTEGER)\n            )\n          } else if (sortAction === 'toggle') {\n            // This flips (or sets) the\n            newSorting = old.map(d => {\n              if (d.id === column.id) {\n                return {\n                  ...d,\n                  desc: nextDesc,\n                }\n              }\n              return d\n            })\n          } else if (sortAction === 'remove') {\n            newSorting = old.filter(d => d.id !== column.id)\n          } else {\n            newSorting = [\n              {\n                id: column.id,\n                desc: nextDesc,\n              },\n            ]\n          }\n\n          return newSorting\n        })\n      },\n\n      getFirstSortDir: () => {\n        const sortDescFirst =\n          column.columnDef.sortDescFirst ??\n          table.options.sortDescFirst ??\n          column.getAutoSortDir() === 'desc'\n        return sortDescFirst ? 'desc' : 'asc'\n      },\n\n      getNextSortingOrder: (multi?: boolean) => {\n        const firstSortDirection = column.getFirstSortDir()\n        const isSorted = column.getIsSorted()\n\n        if (!isSorted) {\n          return firstSortDirection\n        }\n\n        if (\n          isSorted !== firstSortDirection &&\n          (table.options.enableSortingRemoval ?? true) && // If enableSortRemove, enable in general\n          (multi ? table.options.enableMultiRemove ?? true : true) // If multi, don't allow if enableMultiRemove))\n        ) {\n          return false\n        }\n        return isSorted === 'desc' ? 'asc' : 'desc'\n      },\n\n      getCanSort: () => {\n        return (\n          (column.columnDef.enableSorting ?? true) &&\n          (table.options.enableSorting ?? true) &&\n          !!column.accessorFn\n        )\n      },\n\n      getCanMultiSort: () => {\n        return (\n          column.columnDef.enableMultiSort ??\n          table.options.enableMultiSort ??\n          !!column.accessorFn\n        )\n      },\n\n      getIsSorted: () => {\n        const columnSort = table\n          .getState()\n          .sorting?.find(d => d.id === column.id)\n\n        return !columnSort ? false : columnSort.desc ? 'desc' : 'asc'\n      },\n\n      getSortIndex: () =>\n        table.getState().sorting?.findIndex(d => d.id === column.id) ?? -1,\n\n      clearSorting: () => {\n        //clear sorting for just 1 column\n        table.setSorting(old =>\n          old?.length ? old.filter(d => d.id !== column.id) : []\n        )\n      },\n\n      getToggleSortingHandler: () => {\n        const canSort = column.getCanSort()\n\n        return (e: unknown) => {\n          if (!canSort) return\n          ;(e as any).persist?.()\n          column.toggleSorting?.(\n            undefined,\n            column.getCanMultiSort()\n              ? table.options.isMultiSortEvent?.(e)\n              : false\n          )\n        }\n      },\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): SortingInstance<TData> => {\n    return {\n      setSorting: updater => table.options.onSortingChange?.(updater),\n      resetSorting: defaultState => {\n        table.setSorting(defaultState ? [] : table.initialState?.sorting ?? [])\n      },\n      getPreSortedRowModel: () => table.getGroupedRowModel(),\n      getSortedRowModel: () => {\n        if (!table._getSortedRowModel && table.options.getSortedRowModel) {\n          table._getSortedRowModel = table.options.getSortedRowModel(table)\n        }\n\n        if (table.options.manualSorting || !table._getSortedRowModel) {\n          return table.getPreSortedRowModel()\n        }\n\n        return table._getSortedRowModel()\n      },\n    }\n  },\n}\n", "import { TableFeature } from '../core/table'\nimport {\n  Cell,\n  Column,\n  OnChangeFn,\n  Table,\n  Updater,\n  Row,\n  RowData,\n} from '../types'\nimport { makeStateUpdater, memo } from '../utils'\n\nexport type VisibilityState = Record<string, boolean>\n\nexport interface VisibilityTableState {\n  columnVisibility: VisibilityState\n}\n\nexport interface VisibilityOptions {\n  onColumnVisibilityChange?: OnChangeFn<VisibilityState>\n  enableHiding?: boolean\n}\n\nexport interface VisibilityDefaultOptions {\n  onColumnVisibilityChange: OnChangeFn<VisibilityState>\n}\n\nexport interface VisibilityInstance<TData extends RowData> {\n  getVisibleFlatColumns: () => Column<TData, unknown>[]\n  getVisibleLeafColumns: () => Column<TData, unknown>[]\n  getLeftVisibleLeafColumns: () => Column<TData, unknown>[]\n  getRightVisibleLeafColumns: () => Column<TData, unknown>[]\n  getCenterVisibleLeafColumns: () => Column<TData, unknown>[]\n  setColumnVisibility: (updater: Updater<VisibilityState>) => void\n  resetColumnVisibility: (defaultState?: boolean) => void\n  toggleAllColumnsVisible: (value?: boolean) => void\n  getIsAllColumnsVisible: () => boolean\n  getIsSomeColumnsVisible: () => boolean\n  getToggleAllColumnsVisibilityHandler: () => (event: unknown) => void\n}\n\nexport interface VisibilityColumnDef {\n  enableHiding?: boolean\n}\n\nexport interface VisibilityRow<TData extends RowData> {\n  _getAllVisibleCells: () => Cell<TData, unknown>[]\n  getVisibleCells: () => Cell<TData, unknown>[]\n}\n\nexport interface VisibilityColumn {\n  getCanHide: () => boolean\n  getIsVisible: () => boolean\n  toggleVisibility: (value?: boolean) => void\n  getToggleVisibilityHandler: () => (event: unknown) => void\n}\n\n//\n\nexport const Visibility: TableFeature = {\n  getInitialState: (state): VisibilityTableState => {\n    return {\n      columnVisibility: {},\n      ...state,\n    }\n  },\n\n  getDefaultOptions: <TData extends RowData>(\n    table: Table<TData>\n  ): VisibilityDefaultOptions => {\n    return {\n      onColumnVisibilityChange: makeStateUpdater('columnVisibility', table),\n    }\n  },\n\n  createColumn: <TData extends RowData, TValue>(\n    column: Column<TData, TValue>,\n    table: Table<TData>\n  ): VisibilityColumn => {\n    return {\n      toggleVisibility: value => {\n        if (column.getCanHide()) {\n          table.setColumnVisibility(old => ({\n            ...old,\n            [column.id]: value ?? !column.getIsVisible(),\n          }))\n        }\n      },\n      getIsVisible: () => {\n        return table.getState().columnVisibility?.[column.id] ?? true\n      },\n\n      getCanHide: () => {\n        return (\n          (column.columnDef.enableHiding ?? true) &&\n          (table.options.enableHiding ?? true)\n        )\n      },\n      getToggleVisibilityHandler: () => {\n        return (e: unknown) => {\n          column.toggleVisibility?.(\n            ((e as MouseEvent).target as HTMLInputElement).checked\n          )\n        }\n      },\n    }\n  },\n\n  createRow: <TData extends RowData>(\n    row: Row<TData>,\n    table: Table<TData>\n  ): VisibilityRow<TData> => {\n    return {\n      _getAllVisibleCells: memo(\n        () => [row.getAllCells(), table.getState().columnVisibility],\n        cells => {\n          return cells.filter(cell => cell.column.getIsVisible())\n        },\n        {\n          key:\n            process.env.NODE_ENV === 'production' && 'row._getAllVisibleCells',\n          debug: () => table.options.debugAll ?? table.options.debugRows,\n        }\n      ),\n      getVisibleCells: memo(\n        () => [\n          row.getLeftVisibleCells(),\n          row.getCenterVisibleCells(),\n          row.getRightVisibleCells(),\n        ],\n        (left, center, right) => [...left, ...center, ...right],\n        {\n          key: process.env.NODE_ENV === 'development' && 'row.getVisibleCells',\n          debug: () => table.options.debugAll ?? table.options.debugRows,\n        }\n      ),\n    }\n  },\n\n  createTable: <TData extends RowData>(\n    table: Table<TData>\n  ): VisibilityInstance<TData> => {\n    const makeVisibleColumnsMethod = (\n      key: string,\n      getColumns: () => Column<TData, unknown>[]\n    ): (() => Column<TData, unknown>[]) => {\n      return memo(\n        () => [\n          getColumns(),\n          getColumns()\n            .filter(d => d.getIsVisible())\n            .map(d => d.id)\n            .join('_'),\n        ],\n        columns => {\n          return columns.filter(d => d.getIsVisible?.())\n        },\n        {\n          key,\n          debug: () => table.options.debugAll ?? table.options.debugColumns,\n        }\n      )\n    }\n\n    return {\n      getVisibleFlatColumns: makeVisibleColumnsMethod(\n        'getVisibleFlatColumns',\n        () => table.getAllFlatColumns()\n      ),\n      getVisibleLeafColumns: makeVisibleColumnsMethod(\n        'getVisibleLeafColumns',\n        () => table.getAllLeafColumns()\n      ),\n      getLeftVisibleLeafColumns: makeVisibleColumnsMethod(\n        'getLeftVisibleLeafColumns',\n        () => table.getLeftLeafColumns()\n      ),\n      getRightVisibleLeafColumns: makeVisibleColumnsMethod(\n        'getRightVisibleLeafColumns',\n        () => table.getRightLeafColumns()\n      ),\n      getCenterVisibleLeafColumns: makeVisibleColumnsMethod(\n        'getCenterVisibleLeafColumns',\n        () => table.getCenterLeafColumns()\n      ),\n\n      setColumnVisibility: updater =>\n        table.options.onColumnVisibilityChange?.(updater),\n\n      resetColumnVisibility: defaultState => {\n        table.setColumnVisibility(\n          defaultState ? {} : table.initialState.columnVisibility ?? {}\n        )\n      },\n\n      toggleAllColumnsVisible: value => {\n        value = value ?? !table.getIsAllColumnsVisible()\n\n        table.setColumnVisibility(\n          table.getAllLeafColumns().reduce(\n            (obj, column) => ({\n              ...obj,\n              [column.id]: !value ? !column.getCanHide?.() : value,\n            }),\n            {}\n          )\n        )\n      },\n\n      getIsAllColumnsVisible: () =>\n        !table.getAllLeafColumns().some(column => !column.getIsVisible?.()),\n\n      getIsSomeColumnsVisible: () =>\n        table.getAllLeafColumns().some(column => column.getIsVisible?.()),\n\n      getToggleAllColumnsVisibilityHandler: () => {\n        return (e: unknown) => {\n          table.toggleAllColumnsVisible(\n            ((e as MouseEvent).target as HTMLInputElement)?.checked\n          )\n        }\n      },\n    }\n  },\n}\n", "import { functionalUpdate, memo, RequiredKeys } from '../utils'\n\nimport {\n  Updater,\n  TableOptionsResolved,\n  TableState,\n  Table,\n  InitialTableState,\n  Row,\n  Column,\n  RowModel,\n  ColumnDef,\n  TableOptions,\n  RowData,\n  TableMeta,\n  ColumnDefResolved,\n  GroupColumnDef,\n} from '../types'\n\n//\nimport { createColumn } from './column'\nimport { Headers } from './headers'\n//\n\nimport { ColumnSizing } from '../features/ColumnSizing'\nimport { Expanding } from '../features/Expanding'\nimport { Filters } from '../features/Filters'\nimport { Grouping } from '../features/Grouping'\nimport { Ordering } from '../features/Ordering'\nimport { Pagination } from '../features/Pagination'\nimport { Pinning } from '../features/Pinning'\nimport { RowSelection } from '../features/RowSelection'\nimport { Sorting } from '../features/Sorting'\nimport { Visibility } from '../features/Visibility'\n\nexport interface TableFeature {\n  getDefaultOptions?: (table: any) => any\n  getInitialState?: (initialState?: InitialTableState) => any\n  createTable?: (table: any) => any\n  getDefaultColumnDef?: () => any\n  createColumn?: (column: any, table: any) => any\n  createHeader?: (column: any, table: any) => any\n  createCell?: (cell: any, column: any, row: any, table: any) => any\n  createRow?: (row: any, table: any) => any\n}\n\nconst features = [\n  Headers,\n  Visibility,\n  Ordering,\n  Pinning,\n  Filters,\n  Sorting,\n  Grouping,\n  Expanding,\n  Pagination,\n  RowSelection,\n  ColumnSizing,\n] as const\n\n//\n\nexport interface CoreTableState {}\n\nexport interface CoreOptions<TData extends RowData> {\n  data: TData[]\n  state: Partial<TableState>\n  onStateChange: (updater: Updater<TableState>) => void\n  debugAll?: boolean\n  debugTable?: boolean\n  debugHeaders?: boolean\n  debugColumns?: boolean\n  debugRows?: boolean\n  initialState?: InitialTableState\n  autoResetAll?: boolean\n  mergeOptions?: (\n    defaultOptions: TableOptions<TData>,\n    options: Partial<TableOptions<TData>>\n  ) => TableOptions<TData>\n  meta?: TableMeta<TData>\n  getCoreRowModel: (table: Table<any>) => () => RowModel<any>\n  getSubRows?: (originalRow: TData, index: number) => undefined | TData[]\n  getRowId?: (originalRow: TData, index: number, parent?: Row<TData>) => string\n  columns: ColumnDef<TData, any>[]\n  defaultColumn?: Partial<ColumnDef<TData, unknown>>\n  renderFallbackValue: any\n}\n\nexport interface CoreInstance<TData extends RowData> {\n  initialState: TableState\n  reset: () => void\n  options: RequiredKeys<TableOptionsResolved<TData>, 'state'>\n  setOptions: (newOptions: Updater<TableOptionsResolved<TData>>) => void\n  getState: () => TableState\n  setState: (updater: Updater<TableState>) => void\n  _features: readonly TableFeature[]\n  _queue: (cb: () => void) => void\n  _getRowId: (_: TData, index: number, parent?: Row<TData>) => string\n  getCoreRowModel: () => RowModel<TData>\n  _getCoreRowModel?: () => RowModel<TData>\n  getRowModel: () => RowModel<TData>\n  getRow: (id: string) => Row<TData>\n  _getDefaultColumnDef: () => Partial<ColumnDef<TData, unknown>>\n  _getColumnDefs: () => ColumnDef<TData, unknown>[]\n  _getAllFlatColumnsById: () => Record<string, Column<TData, unknown>>\n  getAllColumns: () => Column<TData, unknown>[]\n  getAllFlatColumns: () => Column<TData, unknown>[]\n  getAllLeafColumns: () => Column<TData, unknown>[]\n  getColumn: (columnId: string) => Column<TData, unknown> | undefined\n}\n\nexport function createTable<TData extends RowData>(\n  options: TableOptionsResolved<TData>\n): Table<TData> {\n  if (options.debugAll || options.debugTable) {\n    console.info('Creating Table Instance...')\n  }\n\n  let table = { _features: features } as unknown as Table<TData>\n\n  const defaultOptions = table._features.reduce((obj, feature) => {\n    return Object.assign(obj, feature.getDefaultOptions?.(table))\n  }, {}) as TableOptionsResolved<TData>\n\n  const mergeOptions = (options: TableOptionsResolved<TData>) => {\n    if (table.options.mergeOptions) {\n      return table.options.mergeOptions(defaultOptions, options)\n    }\n\n    return {\n      ...defaultOptions,\n      ...options,\n    }\n  }\n\n  const coreInitialState: CoreTableState = {}\n\n  let initialState = {\n    ...coreInitialState,\n    ...(options.initialState ?? {}),\n  } as TableState\n\n  table._features.forEach(feature => {\n    initialState = feature.getInitialState?.(initialState) ?? initialState\n  })\n\n  const queued: (() => void)[] = []\n  let queuedTimeout = false\n\n  const coreInstance: CoreInstance<TData> = {\n    _features: features,\n    options: {\n      ...defaultOptions,\n      ...options,\n    },\n    initialState,\n    _queue: cb => {\n      queued.push(cb)\n\n      if (!queuedTimeout) {\n        queuedTimeout = true\n\n        // Schedule a microtask to run the queued callbacks after\n        // the current call stack (render, etc) has finished.\n        Promise.resolve()\n          .then(() => {\n            while (queued.length) {\n              queued.shift()!()\n            }\n            queuedTimeout = false\n          })\n          .catch(error =>\n            setTimeout(() => {\n              throw error\n            })\n          )\n      }\n    },\n    reset: () => {\n      table.setState(table.initialState)\n    },\n    setOptions: updater => {\n      const newOptions = functionalUpdate(updater, table.options)\n      table.options = mergeOptions(newOptions) as RequiredKeys<\n        TableOptionsResolved<TData>,\n        'state'\n      >\n    },\n\n    getState: () => {\n      return table.options.state as TableState\n    },\n\n    setState: (updater: Updater<TableState>) => {\n      table.options.onStateChange?.(updater)\n    },\n\n    _getRowId: (row: TData, index: number, parent?: Row<TData>) =>\n      table.options.getRowId?.(row, index, parent) ??\n      `${parent ? [parent.id, index].join('.') : index}`,\n\n    getCoreRowModel: () => {\n      if (!table._getCoreRowModel) {\n        table._getCoreRowModel = table.options.getCoreRowModel(table)\n      }\n\n      return table._getCoreRowModel!()\n    },\n\n    // The final calls start at the bottom of the model,\n    // expanded rows, which then work their way up\n\n    getRowModel: () => {\n      return table.getPaginationRowModel()\n    },\n    getRow: (id: string) => {\n      const row = table.getRowModel().rowsById[id]\n\n      if (!row) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(`getRow expected an ID, but got ${id}`)\n        }\n        throw new Error()\n      }\n\n      return row\n    },\n    _getDefaultColumnDef: memo(\n      () => [table.options.defaultColumn],\n      defaultColumn => {\n        defaultColumn = (defaultColumn ?? {}) as Partial<\n          ColumnDef<TData, unknown>\n        >\n\n        return {\n          header: props => {\n            const resolvedColumnDef = props.header.column\n              .columnDef as ColumnDefResolved<TData>\n\n            if (resolvedColumnDef.accessorKey) {\n              return resolvedColumnDef.accessorKey\n            }\n\n            if (resolvedColumnDef.accessorFn) {\n              return resolvedColumnDef.id\n            }\n\n            return null\n          },\n          // footer: props => props.header.column.id,\n          cell: props => props.renderValue<any>()?.toString?.() ?? null,\n          ...table._features.reduce((obj, feature) => {\n            return Object.assign(obj, feature.getDefaultColumnDef?.())\n          }, {}),\n          ...defaultColumn,\n        } as Partial<ColumnDef<TData, unknown>>\n      },\n      {\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n        key: process.env.NODE_ENV === 'development' && 'getDefaultColumnDef',\n      }\n    ),\n\n    _getColumnDefs: () => table.options.columns,\n\n    getAllColumns: memo(\n      () => [table._getColumnDefs()],\n      columnDefs => {\n        const recurseColumns = (\n          columnDefs: ColumnDef<TData, unknown>[],\n          parent?: Column<TData, unknown>,\n          depth = 0\n        ): Column<TData, unknown>[] => {\n          return columnDefs.map(columnDef => {\n            const column = createColumn(table, columnDef, depth, parent)\n\n            const groupingColumnDef = columnDef as GroupColumnDef<\n              TData,\n              unknown\n            >\n\n            column.columns = groupingColumnDef.columns\n              ? recurseColumns(groupingColumnDef.columns, column, depth + 1)\n              : []\n\n            return column\n          })\n        }\n\n        return recurseColumns(columnDefs)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    getAllFlatColumns: memo(\n      () => [table.getAllColumns()],\n      allColumns => {\n        return allColumns.flatMap(column => {\n          return column.getFlatColumns()\n        })\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllFlatColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    _getAllFlatColumnsById: memo(\n      () => [table.getAllFlatColumns()],\n      flatColumns => {\n        return flatColumns.reduce((acc, column) => {\n          acc[column.id] = column\n          return acc\n        }, {} as Record<string, Column<TData, unknown>>)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllFlatColumnsById',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    getAllLeafColumns: memo(\n      () => [table.getAllColumns(), table._getOrderColumnsFn()],\n      (allColumns, orderColumns) => {\n        let leafColumns = allColumns.flatMap(column => column.getLeafColumns())\n        return orderColumns(leafColumns)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getAllLeafColumns',\n        debug: () => table.options.debugAll ?? table.options.debugColumns,\n      }\n    ),\n\n    getColumn: columnId => {\n      const column = table._getAllFlatColumnsById()[columnId]\n\n      if (process.env.NODE_ENV !== 'production' && !column) {\n        console.error(`[Table] Column with id '${columnId}' does not exist.`)\n      }\n\n      return column\n    },\n  }\n\n  Object.assign(table, coreInstance)\n\n  table._features.forEach(feature => {\n    return Object.assign(table, feature.createTable?.(table))\n  })\n\n  return table\n}\n", "import { RowData, Cell, Column, Row, Table } from '../types'\nimport { Getter, memo } from '../utils'\n\nexport interface CellContext<TData extends RowData, TValue> {\n  table: Table<TData>\n  column: Column<TData, TValue>\n  row: Row<TData>\n  cell: Cell<TData, TValue>\n  getValue: Getter<TValue>\n  renderValue: Getter<TValue | null>\n}\n\nexport interface CoreCell<TData extends RowData, TValue> {\n  id: string\n  getValue: CellContext<TData, TValue>['getValue']\n  renderValue: CellContext<TData, TValue>['renderValue']\n  row: Row<TData>\n  column: Column<TData, TValue>\n  getContext: () => CellContext<TData, TValue>\n}\n\nexport function createCell<TData extends RowData, TValue>(\n  table: Table<TData>,\n  row: Row<TData>,\n  column: Column<TData, TValue>,\n  columnId: string\n): Cell<TData, TValue> {\n  const getRenderValue = () =>\n    cell.getValue() ?? table.options.renderFallbackValue\n\n  const cell: CoreCell<TData, TValue> = {\n    id: `${row.id}_${column.id}`,\n    row,\n    column,\n    getValue: () => row.getValue(columnId),\n    renderValue: getRenderValue,\n    getContext: memo(\n      () => [table, column, row, cell],\n      (table, column, row, cell) => ({\n        table,\n        column,\n        row,\n        cell: cell as Cell<TData, TValue>,\n        getValue: cell.getValue,\n        renderValue: cell.renderValue,\n      }),\n      {\n        key: process.env.NODE_ENV === 'development' && 'cell.getContext',\n        debug: () => table.options.debugAll,\n      }\n    ),\n  }\n\n  table._features.forEach(feature => {\n    Object.assign(\n      cell,\n      feature.createCell?.(\n        cell as Cell<TData, TValue>,\n        column,\n        row as Row<TData>,\n        table\n      )\n    )\n  }, {})\n\n  return cell as Cell<TData, TValue>\n}\n", "import { RowData, Cell, Row, Table } from '../types'\nimport { flattenBy, memo } from '../utils'\nimport { createCell } from './cell'\n\nexport interface CoreRow<TData extends RowData> {\n  id: string\n  index: number\n  original: TData\n  depth: number\n  parentId?: string\n  _valuesCache: Record<string, unknown>\n  _uniqueValuesCache: Record<string, unknown>\n  getValue: <TValue>(columnId: string) => TValue\n  getUniqueValues: <TValue>(columnId: string) => TValue[]\n  renderValue: <TValue>(columnId: string) => TValue\n  subRows: Row<TData>[]\n  getLeafRows: () => Row<TData>[]\n  originalSubRows?: TData[]\n  getAllCells: () => Cell<TData, unknown>[]\n  _getAllCellsByColumnId: () => Record<string, Cell<TData, unknown>>\n  getParentRow: () => Row<TData> | undefined\n  getParentRows: () => Row<TData>[]\n}\n\nexport const createRow = <TData extends RowData>(\n  table: Table<TData>,\n  id: string,\n  original: TData,\n  rowIndex: number,\n  depth: number,\n  subRows?: Row<TData>[],\n  parentId?: string\n): Row<TData> => {\n  let row: CoreRow<TData> = {\n    id,\n    index: rowIndex,\n    original,\n    depth,\n    parentId,\n    _valuesCache: {},\n    _uniqueValuesCache: {},\n    getValue: columnId => {\n      if (row._valuesCache.hasOwnProperty(columnId)) {\n        return row._valuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      row._valuesCache[columnId] = column.accessorFn(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._valuesCache[columnId] as any\n    },\n    getUniqueValues: columnId => {\n      if (row._uniqueValuesCache.hasOwnProperty(columnId)) {\n        return row._uniqueValuesCache[columnId]\n      }\n\n      const column = table.getColumn(columnId)\n\n      if (!column?.accessorFn) {\n        return undefined\n      }\n\n      if (!column.columnDef.getUniqueValues) {\n        row._uniqueValuesCache[columnId] = [row.getValue(columnId)]\n        return row._uniqueValuesCache[columnId]\n      }\n\n      row._uniqueValuesCache[columnId] = column.columnDef.getUniqueValues(\n        row.original as TData,\n        rowIndex\n      )\n\n      return row._uniqueValuesCache[columnId] as any\n    },\n    renderValue: columnId =>\n      row.getValue(columnId) ?? table.options.renderFallbackValue,\n    subRows: subRows ?? [],\n    getLeafRows: () => flattenBy(row.subRows, d => d.subRows),\n    getParentRow: () => (row.parentId ? table.getRow(row.parentId) : undefined),\n    getParentRows: () => {\n      let parentRows: Row<TData>[] = []\n      let currentRow = row\n      while (true) {\n        const parentRow = currentRow.getParentRow()\n        if (!parentRow) break\n        parentRows.push(parentRow)\n        currentRow = parentRow\n      }\n      return parentRows.reverse()\n    },\n    getAllCells: memo(\n      () => [table.getAllLeafColumns()],\n      leafColumns => {\n        return leafColumns.map(column => {\n          return createCell(table, row as Row<TData>, column, column.id)\n        })\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'row.getAllCells',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    ),\n\n    _getAllCellsByColumnId: memo(\n      () => [row.getAllCells()],\n      allCells => {\n        return allCells.reduce((acc, cell) => {\n          acc[cell.column.id] = cell\n          return acc\n        }, {} as Record<string, Cell<TData, unknown>>)\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'production' && 'row.getAllCellsByColumnId',\n        debug: () => table.options.debugAll ?? table.options.debugRows,\n      }\n    ),\n  }\n\n  for (let i = 0; i < table._features.length; i++) {\n    const feature = table._features[i]\n    Object.assign(row, feature?.createRow?.(row, table))\n  }\n\n  return row as Row<TData>\n}\n", "import {\n  AccessorFn,\n  ColumnDef,\n  DisplayColumnDef,\n  GroupColumnDef,\n  IdentifiedColumnDef,\n  RowData,\n} from './types'\nimport { DeepKeys, DeepValue, RequiredKeys } from './utils'\n\n// type Person = {\n//   firstName: string\n//   lastName: string\n//   age: number\n//   visits: number\n//   status: string\n//   progress: number\n//   createdAt: Date\n//   nested: {\n//     foo: [\n//       {\n//         bar: 'bar'\n//       }\n//     ]\n//     bar: { subBar: boolean }[]\n//     baz: {\n//       foo: 'foo'\n//       bar: {\n//         baz: 'baz'\n//       }\n//     }\n//   }\n// }\n\n// const test: DeepKeys<Person> = 'nested.foo.0.bar'\n// const test2: DeepKeys<Person> = 'nested.bar'\n\n// const helper = createColumnHelper<Person>()\n\n// helper.accessor('nested.foo', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.foo.0.bar', {\n//   cell: info => info.getValue(),\n// })\n\n// helper.accessor('nested.bar', {\n//   cell: info => info.getValue(),\n// })\n\nexport type ColumnHelper<TData extends RowData> = {\n  accessor: <\n    TAccessor extends AccessorFn<TData> | DeepKeys<TData>,\n    TValue extends TAccessor extends AccessorFn<TData, infer TReturn>\n      ? TReturn\n      : TAccessor extends DeepKeys<TData>\n      ? DeepValue<TData, TAccessor>\n      : never\n  >(\n    accessor: TAccessor,\n    column: TAccessor extends AccessorFn<TData>\n      ? DisplayColumnDef<TData, TValue>\n      : IdentifiedColumnDef<TData, TValue>\n  ) => ColumnDef<TData, TValue>\n  display: (column: DisplayColumnDef<TData>) => ColumnDef<TData, unknown>\n  group: (column: GroupColumnDef<TData>) => ColumnDef<TData, unknown>\n}\n\nexport function createColumnHelper<\n  TData extends RowData\n>(): ColumnHelper<TData> {\n  return {\n    accessor: (accessor, column) => {\n      return typeof accessor === 'function'\n        ? ({\n            ...column,\n            accessorFn: accessor,\n          } as any)\n        : {\n            ...column,\n            accessorKey: accessor,\n          }\n    },\n    display: column => column as ColumnDef<TData, unknown>,\n    group: column => column as ColumnDef<TData, unknown>,\n  }\n}\n", "import { createRow } from '../core/row'\nimport { Table, Row, RowModel, RowData } from '../types'\nimport { memo } from '../utils'\n\nexport function getCoreRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.options.data],\n      (\n        data\n      ): {\n        rows: Row<TData>[]\n        flatRows: Row<TData>[]\n        rowsById: Record<string, Row<TData>>\n      } => {\n        const rowModel: RowModel<TData> = {\n          rows: [],\n          flatRows: [],\n          rowsById: {},\n        }\n\n        const accessRows = (\n          originalRows: TData[],\n          depth = 0,\n          parentRow?: Row<TData>\n        ): Row<TData>[] => {\n          const rows = [] as Row<TData>[]\n\n          for (let i = 0; i < originalRows.length; i++) {\n            // This could be an expensive check at scale, so we should move it somewhere else, but where?\n            // if (!id) {\n            //   if (process.env.NODE_ENV !== 'production') {\n            //     throw new Error(`getRowId expected an ID, but got ${id}`)\n            //   }\n            // }\n\n            // Make the row\n            const row = createRow(\n              table,\n              table._getRowId(originalRows[i]!, i, parentRow),\n              originalRows[i]!,\n              i,\n              depth,\n              undefined,\n              parentRow?.id\n            )\n\n            // Keep track of every row in a flat array\n            rowModel.flatRows.push(row)\n            // Also keep track of every row by its ID\n            rowModel.rowsById[row.id] = row\n            // Push table row into parent\n            rows.push(row)\n\n            // Get the original subrows\n            if (table.options.getSubRows) {\n              row.originalSubRows = table.options.getSubRows(\n                originalRows[i]!,\n                i\n              )\n\n              // Then recursively access them\n              if (row.originalSubRows?.length) {\n                row.subRows = accessRows(row.originalSubRows, depth + 1, row)\n              }\n            }\n          }\n\n          return rows\n        }\n\n        rowModel.rows = accessRows(data)\n\n        return rowModel\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {\n          table._autoResetPageIndex()\n        },\n      }\n    )\n}\n", "import { createRow } from '../core/row'\nimport { Row, RowModel, Table, RowData } from '../types'\n\nexport function filterRows<TData extends RowData>(\n  rows: Row<TData>[],\n  filterRowImpl: (row: Row<TData>) => any,\n  table: Table<TData>\n) {\n  if (table.options.filterFromLeafRows) {\n    return filterRowModelFromLeafs(rows, filterRowImpl, table)\n  }\n\n  return filterRowModelFromRoot(rows, filterRowImpl, table)\n}\n\nexport function filterRowModelFromLeafs<TData extends RowData>(\n  rowsToFilter: Row<TData>[],\n  filterRow: (row: Row<TData>) => Row<TData>[],\n  table: Table<TData>\n): RowModel<TData> {\n  const newFilteredFlatRows: Row<TData>[] = []\n  const newFilteredRowsById: Record<string, Row<TData>> = {}\n  const maxDepth = table.options.maxLeafRowFilterDepth ?? 100\n\n  const recurseFilterRows = (rowsToFilter: Row<TData>[], depth = 0) => {\n    const rows: Row<TData>[] = []\n\n    // Filter from children up first\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i]!\n\n      const newRow = createRow(\n        table,\n        row.id,\n        row.original,\n        row.index,\n        row.depth,\n        undefined,\n        row.parentId\n      )\n      newRow.columnFilters = row.columnFilters\n\n      if (row.subRows?.length && depth < maxDepth) {\n        newRow.subRows = recurseFilterRows(row.subRows, depth + 1)\n        row = newRow\n\n        if (filterRow(row) && !newRow.subRows.length) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredRowsById[i] = row\n          continue\n        }\n\n        if (filterRow(row) || newRow.subRows.length) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredRowsById[i] = row\n          continue\n        }\n      } else {\n        row = newRow\n        if (filterRow(row)) {\n          rows.push(row)\n          newFilteredRowsById[row.id] = row\n          newFilteredRowsById[i] = row\n        }\n      }\n    }\n\n    return rows\n  }\n\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById,\n  }\n}\n\nexport function filterRowModelFromRoot<TData extends RowData>(\n  rowsToFilter: Row<TData>[],\n  filterRow: (row: Row<TData>) => any,\n  table: Table<TData>\n): RowModel<TData> {\n  const newFilteredFlatRows: Row<TData>[] = []\n  const newFilteredRowsById: Record<string, Row<TData>> = {}\n  const maxDepth = table.options.maxLeafRowFilterDepth ?? 100\n\n  // Filters top level and nested rows\n  const recurseFilterRows = (rowsToFilter: Row<TData>[], depth = 0) => {\n    // Filter from parents downward first\n\n    const rows: Row<TData>[] = []\n\n    // Apply the filter to any subRows\n    for (let i = 0; i < rowsToFilter.length; i++) {\n      let row = rowsToFilter[i]!\n\n      const pass = filterRow(row)\n\n      if (pass) {\n        if (row.subRows?.length && depth < maxDepth) {\n          const newRow = createRow(\n            table,\n            row.id,\n            row.original,\n            row.index,\n            row.depth,\n            undefined,\n            row.parentId\n          )\n          newRow.subRows = recurseFilterRows(row.subRows, depth + 1)\n          row = newRow\n        }\n\n        rows.push(row)\n        newFilteredFlatRows.push(row)\n        newFilteredRowsById[row.id] = row\n      }\n    }\n\n    return rows\n  }\n\n  return {\n    rows: recurseFilterRows(rowsToFilter),\n    flatRows: newFilteredFlatRows,\n    rowsById: newFilteredRowsById,\n  }\n}\n", "import { ResolvedColumnFilter } from '../features/Filters'\nimport { Table, RowModel, Row, RowData } from '../types'\nimport { memo } from '../utils'\nimport { filterRows } from './filterRowsUtils'\n\nexport function getFilteredRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getPreFilteredRowModel(),\n        table.getState().columnFilters,\n        table.getState().globalFilter,\n      ],\n      (rowModel, columnFilters, globalFilter) => {\n        if (\n          !rowModel.rows.length ||\n          (!columnFilters?.length && !globalFilter)\n        ) {\n          for (let i = 0; i < rowModel.flatRows.length; i++) {\n            rowModel.flatRows[i]!.columnFilters = {}\n            rowModel.flatRows[i]!.columnFiltersMeta = {}\n          }\n          return rowModel\n        }\n\n        const resolvedColumnFilters: ResolvedColumnFilter<TData>[] = []\n        const resolvedGlobalFilters: ResolvedColumnFilter<TData>[] = []\n\n        ;(columnFilters ?? []).forEach(d => {\n          const column = table.getColumn(d.id)\n\n          if (!column) {\n            return\n          }\n\n          const filterFn = column.getFilterFn()\n\n          if (!filterFn) {\n            if (process.env.NODE_ENV !== 'production') {\n              console.warn(\n                `Could not find a valid 'column.filterFn' for column with the ID: ${column.id}.`\n              )\n            }\n            return\n          }\n\n          resolvedColumnFilters.push({\n            id: d.id,\n            filterFn,\n            resolvedValue: filterFn.resolveFilterValue?.(d.value) ?? d.value,\n          })\n        })\n\n        const filterableIds = columnFilters.map(d => d.id)\n\n        const globalFilterFn = table.getGlobalFilterFn()\n\n        const globallyFilterableColumns = table\n          .getAllLeafColumns()\n          .filter(column => column.getCanGlobalFilter())\n\n        if (\n          globalFilter &&\n          globalFilterFn &&\n          globallyFilterableColumns.length\n        ) {\n          filterableIds.push('__global__')\n\n          globallyFilterableColumns.forEach(column => {\n            resolvedGlobalFilters.push({\n              id: column.id,\n              filterFn: globalFilterFn,\n              resolvedValue:\n                globalFilterFn.resolveFilterValue?.(globalFilter) ??\n                globalFilter,\n            })\n          })\n        }\n\n        let currentColumnFilter\n        let currentGlobalFilter\n\n        // Flag the prefiltered row model with each filter state\n        for (let j = 0; j < rowModel.flatRows.length; j++) {\n          const row = rowModel.flatRows[j]!\n\n          row.columnFilters = {}\n\n          if (resolvedColumnFilters.length) {\n            for (let i = 0; i < resolvedColumnFilters.length; i++) {\n              currentColumnFilter = resolvedColumnFilters[i]!\n              const id = currentColumnFilter.id\n\n              // Tag the row with the column filter state\n              row.columnFilters[id] = currentColumnFilter.filterFn(\n                row,\n                id,\n                currentColumnFilter.resolvedValue,\n                filterMeta => {\n                  row.columnFiltersMeta[id] = filterMeta\n                }\n              )\n            }\n          }\n\n          if (resolvedGlobalFilters.length) {\n            for (let i = 0; i < resolvedGlobalFilters.length; i++) {\n              currentGlobalFilter = resolvedGlobalFilters[i]!\n              const id = currentGlobalFilter.id\n              // Tag the row with the first truthy global filter state\n              if (\n                currentGlobalFilter.filterFn(\n                  row,\n                  id,\n                  currentGlobalFilter.resolvedValue,\n                  filterMeta => {\n                    row.columnFiltersMeta[id] = filterMeta\n                  }\n                )\n              ) {\n                row.columnFilters.__global__ = true\n                break\n              }\n            }\n\n            if (row.columnFilters.__global__ !== true) {\n              row.columnFilters.__global__ = false\n            }\n          }\n        }\n\n        const filterRowsImpl = (row: Row<TData>) => {\n          // Horizontally filter rows through each column\n          for (let i = 0; i < filterableIds.length; i++) {\n            if (row.columnFilters[filterableIds[i]!] === false) {\n              return false\n            }\n          }\n          return true\n        }\n\n        // Filter final rows using all of the active filters\n        return filterRows(rowModel.rows, filterRowsImpl, table)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getFilteredRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {\n          table._autoResetPageIndex()\n        },\n      }\n    )\n}\n", "import { Table, RowModel, Row, RowData } from '../types'\nimport { memo } from '../utils'\nimport { filterRows } from './filterRowsUtils'\n\nexport function getFacetedRowModel<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => RowModel<TData> {\n  return (table, columnId) =>\n    memo(\n      () => [\n        table.getPreFilteredRowModel(),\n        table.getState().columnFilters,\n        table.getState().globalFilter,\n        table.getFilteredRowModel(),\n      ],\n      (preRowModel, columnFilters, globalFilter) => {\n        if (\n          !preRowModel.rows.length ||\n          (!columnFilters?.length && !globalFilter)\n        ) {\n          return preRowModel\n        }\n\n        const filterableIds = [\n          ...columnFilters.map(d => d.id).filter(d => d !== columnId),\n          globalFilter ? '__global__' : undefined,\n        ].filter(Boolean) as string[]\n\n        const filterRowsImpl = (row: Row<TData>) => {\n          // Horizontally filter rows through each column\n          for (let i = 0; i < filterableIds.length; i++) {\n            if (row.columnFilters[filterableIds[i]!] === false) {\n              return false\n            }\n          }\n          return true\n        }\n\n        return filterRows(preRowModel.rows, filterRowsImpl, table)\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'development' &&\n          'getFacetedRowModel_' + columnId,\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {},\n      }\n    )\n}\n", "import { Table, RowData } from '../types'\nimport { memo } from '../utils'\n\nexport function getFacetedUniqueValues<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => Map<any, number> {\n  return (table, columnId) =>\n    memo(\n      () => [table.getColumn(columnId)?.getFacetedRowModel()],\n      facetedRowModel => {\n        if (!facetedRowModel) return new Map()\n\n        let facetedUniqueValues = new Map<any, number>()\n\n        for (let i = 0; i < facetedRowModel.flatRows.length; i++) {\n          const values =\n            facetedRowModel.flatRows[i]!.getUniqueValues<number>(columnId)\n\n          for (let j = 0; j < values.length; j++) {\n            const value = values[j]!\n\n            if (facetedUniqueValues.has(value)) {\n              facetedUniqueValues.set(\n                value,\n                (facetedUniqueValues.get(value) ?? 0) + 1\n              )\n            } else {\n              facetedUniqueValues.set(value, 1)\n            }\n          }\n        }\n\n        return facetedUniqueValues\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'development' &&\n          'getFacetedUniqueValues_' + columnId,\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {},\n      }\n    )\n}\n", "import { Table, RowData } from '../types'\nimport { memo } from '../utils'\n\nexport function getFacetedMinMaxValues<TData extends RowData>(): (\n  table: Table<TData>,\n  columnId: string\n) => () => undefined | [number, number] {\n  return (table, columnId) =>\n    memo(\n      () => [table.getColumn(columnId)?.getFacetedRowModel()],\n      facetedRowModel => {\n        if (!facetedRowModel) return undefined\n\n        const firstValue =\n          facetedRowModel.flatRows[0]?.getUniqueValues(columnId)\n\n        if (typeof firstValue === 'undefined') {\n          return undefined\n        }\n\n        let facetedMinMaxValues: [any, any] = [firstValue, firstValue]\n\n        for (let i = 0; i < facetedRowModel.flatRows.length; i++) {\n          const values =\n            facetedRowModel.flatRows[i]!.getUniqueValues<number>(columnId)\n\n          for (let j = 0; j < values.length; j++) {\n            const value = values[j]!\n\n            if (value < facetedMinMaxValues[0]) {\n              facetedMinMaxValues[0] = value\n            } else if (value > facetedMinMaxValues[1]) {\n              facetedMinMaxValues[1] = value\n            }\n          }\n        }\n\n        return facetedMinMaxValues\n      },\n      {\n        key:\n          process.env.NODE_ENV === 'development' &&\n          'getFacetedMinMaxValues_' + columnId,\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {},\n      }\n    )\n}\n", "import { Table, Row, RowModel, RowData } from '../types'\nimport { SortingFn } from '../features/Sorting'\nimport { memo } from '../utils'\n\nexport function getSortedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().sorting, table.getPreSortedRowModel()],\n      (sorting, rowModel) => {\n        if (!rowModel.rows.length || !sorting?.length) {\n          return rowModel\n        }\n\n        const sortingState = table.getState().sorting\n\n        const sortedFlatRows: Row<TData>[] = []\n\n        // Filter out sortings that correspond to non existing columns\n        const availableSorting = sortingState.filter(sort =>\n          table.getColumn(sort.id)?.getCanSort()\n        )\n\n        const columnInfoById: Record<\n          string,\n          {\n            sortUndefined?: false | -1 | 1\n            invertSorting?: boolean\n            sortingFn: SortingFn<TData>\n          }\n        > = {}\n\n        availableSorting.forEach(sortEntry => {\n          const column = table.getColumn(sortEntry.id)\n          if (!column) return\n\n          columnInfoById[sortEntry.id] = {\n            sortUndefined: column.columnDef.sortUndefined,\n            invertSorting: column.columnDef.invertSorting,\n            sortingFn: column.getSortingFn(),\n          }\n        })\n\n        const sortData = (rows: Row<TData>[]) => {\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          const sortedData = [...rows]\n\n          sortedData.sort((rowA, rowB) => {\n            for (let i = 0; i < availableSorting.length; i += 1) {\n              const sortEntry = availableSorting[i]!\n              const columnInfo = columnInfoById[sortEntry.id]!\n              const isDesc = sortEntry?.desc ?? false\n\n              let sortInt = 0\n\n              // All sorting ints should always return in ascending order\n              if (columnInfo.sortUndefined) {\n                const aValue = rowA.getValue(sortEntry.id)\n                const bValue = rowB.getValue(sortEntry.id)\n\n                const aUndefined = aValue === undefined\n                const bUndefined = bValue === undefined\n\n                if (aUndefined || bUndefined) {\n                  sortInt =\n                    aUndefined && bUndefined\n                      ? 0\n                      : aUndefined\n                      ? columnInfo.sortUndefined\n                      : -columnInfo.sortUndefined\n                }\n              }\n\n              if (sortInt === 0) {\n                sortInt = columnInfo.sortingFn(rowA, rowB, sortEntry.id)\n              }\n\n              // If sorting is non-zero, take care of desc and inversion\n              if (sortInt !== 0) {\n                if (isDesc) {\n                  sortInt *= -1\n                }\n\n                if (columnInfo.invertSorting) {\n                  sortInt *= -1\n                }\n\n                return sortInt\n              }\n            }\n\n            return rowA.index - rowB.index\n          })\n\n          // If there are sub-rows, sort them\n          sortedData.forEach(row => {\n            sortedFlatRows.push(row)\n            if (row.subRows?.length) {\n              row.subRows = sortData(row.subRows)\n            }\n          })\n\n          return sortedData\n        }\n\n        return {\n          rows: sortData(rowModel.rows),\n          flatRows: sortedFlatRows,\n          rowsById: rowModel.rowsById,\n        }\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getSortedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {\n          table._autoResetPageIndex()\n        },\n      }\n    )\n}\n", "import { createRow } from '../core/row'\nimport { Table, Row, RowModel, RowData } from '../types'\nimport { flattenBy, memo } from '../utils'\n\nexport function getGroupedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [table.getState().grouping, table.getPreGroupedRowModel()],\n      (grouping, rowModel) => {\n        if (!rowModel.rows.length || !grouping.length) {\n          return rowModel\n        }\n\n        // Filter the grouping list down to columns that exist\n        const existingGrouping = grouping.filter(columnId =>\n          table.getColumn(columnId)\n        )\n\n        const groupedFlatRows: Row<TData>[] = []\n        const groupedRowsById: Record<string, Row<TData>> = {}\n        // const onlyGroupedFlatRows: Row[] = [];\n        // const onlyGroupedRowsById: Record<RowId, Row> = {};\n        // const nonGroupedFlatRows: Row[] = [];\n        // const nonGroupedRowsById: Record<RowId, Row> = {};\n\n        // Recursively group the data\n        const groupUpRecursively = (\n          rows: Row<TData>[],\n          depth = 0,\n          parentId?: string\n        ) => {\n          // Grouping depth has been been met\n          // Stop grouping and simply rewrite thd depth and row relationships\n          if (depth >= existingGrouping.length) {\n            return rows.map(row => {\n              row.depth = depth\n\n              groupedFlatRows.push(row)\n              groupedRowsById[row.id] = row\n\n              if (row.subRows) {\n                row.subRows = groupUpRecursively(row.subRows, depth + 1, row.id)\n              }\n\n              return row\n            })\n          }\n\n          const columnId: string = existingGrouping[depth]!\n\n          // Group the rows together for this level\n          const rowGroupsMap = groupBy(rows, columnId)\n\n          // Peform aggregations for each group\n          const aggregatedGroupedRows = Array.from(rowGroupsMap.entries()).map(\n            ([groupingValue, groupedRows], index) => {\n              let id = `${columnId}:${groupingValue}`\n              id = parentId ? `${parentId}>${id}` : id\n\n              // First, Recurse to group sub rows before aggregation\n              const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n              // Flatten the leaf rows of the rows in this group\n              const leafRows = depth\n                ? flattenBy(groupedRows, row => row.subRows)\n                : groupedRows\n\n              const row = createRow(\n                table,\n                id,\n                leafRows[0]!.original,\n                index,\n                depth,\n                undefined,\n                parentId\n              )\n\n              Object.assign(row, {\n                groupingColumnId: columnId,\n                groupingValue,\n                subRows,\n                leafRows,\n                getValue: (columnId: string) => {\n                  // Don't aggregate columns that are in the grouping\n                  if (existingGrouping.includes(columnId)) {\n                    if (row._valuesCache.hasOwnProperty(columnId)) {\n                      return row._valuesCache[columnId]\n                    }\n\n                    if (groupedRows[0]) {\n                      row._valuesCache[columnId] =\n                        groupedRows[0].getValue(columnId) ?? undefined\n                    }\n\n                    return row._valuesCache[columnId]\n                  }\n\n                  if (row._groupingValuesCache.hasOwnProperty(columnId)) {\n                    return row._groupingValuesCache[columnId]\n                  }\n\n                  // Aggregate the values\n                  const column = table.getColumn(columnId)\n                  const aggregateFn = column?.getAggregationFn()\n\n                  if (aggregateFn) {\n                    row._groupingValuesCache[columnId] = aggregateFn(\n                      columnId,\n                      leafRows,\n                      groupedRows\n                    )\n\n                    return row._groupingValuesCache[columnId]\n                  }\n                },\n              })\n\n              subRows.forEach(subRow => {\n                groupedFlatRows.push(subRow)\n                groupedRowsById[subRow.id] = subRow\n                // if (subRow.getIsGrouped?.()) {\n                //   onlyGroupedFlatRows.push(subRow);\n                //   onlyGroupedRowsById[subRow.id] = subRow;\n                // } else {\n                //   nonGroupedFlatRows.push(subRow);\n                //   nonGroupedRowsById[subRow.id] = subRow;\n                // }\n              })\n\n              return row\n            }\n          )\n\n          return aggregatedGroupedRows\n        }\n\n        const groupedRows = groupUpRecursively(rowModel.rows, 0)\n\n        groupedRows.forEach(subRow => {\n          groupedFlatRows.push(subRow)\n          groupedRowsById[subRow.id] = subRow\n          // if (subRow.getIsGrouped?.()) {\n          //   onlyGroupedFlatRows.push(subRow);\n          //   onlyGroupedRowsById[subRow.id] = subRow;\n          // } else {\n          //   nonGroupedFlatRows.push(subRow);\n          //   nonGroupedRowsById[subRow.id] = subRow;\n          // }\n        })\n\n        return {\n          rows: groupedRows,\n          flatRows: groupedFlatRows,\n          rowsById: groupedRowsById,\n        }\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getGroupedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n        onChange: () => {\n          table._queue(() => {\n            table._autoResetExpanded()\n            table._autoResetPageIndex()\n          })\n        },\n      }\n    )\n}\n\nfunction groupBy<TData extends RowData>(rows: Row<TData>[], columnId: string) {\n  const groupMap = new Map<any, Row<TData>[]>()\n\n  return rows.reduce((map, row) => {\n    const resKey = `${row.getGroupingValue(columnId)}`\n    const previous = map.get(resKey)\n    if (!previous) {\n      map.set(resKey, [row])\n    } else {\n      previous.push(row)\n    }\n    return map\n  }, groupMap)\n}\n", "import { Table, Row, RowModel, RowData } from '../types'\nimport { memo } from '../utils'\n\nexport function getExpandedRowModel<TData extends RowData>(): (\n  table: Table<TData>\n) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getState().expanded,\n        table.getPreExpandedRowModel(),\n        table.options.paginateExpandedRows,\n      ],\n      (expanded, rowModel, paginateExpandedRows) => {\n        if (\n          !rowModel.rows.length ||\n          (expanded !== true && !Object.keys(expanded ?? {}).length)\n        ) {\n          return rowModel\n        }\n\n        if (!paginateExpandedRows) {\n          // Only expand rows at this point if they are being paginated\n          return rowModel\n        }\n\n        return expandRows(rowModel)\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getExpandedRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n}\n\nexport function expandRows<TData extends RowData>(rowModel: RowModel<TData>) {\n  const expandedRows: Row<TData>[] = []\n\n  const handleRow = (row: Row<TData>) => {\n    expandedRows.push(row)\n\n    if (row.subRows?.length && row.getIsExpanded()) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  rowModel.rows.forEach(handleRow)\n\n  return {\n    rows: expandedRows,\n    flatRows: rowModel.flatRows,\n    rowsById: rowModel.rowsById,\n  }\n}\n", "import { Table, RowModel, Row, RowData } from '../types'\nimport { memo } from '../utils'\nimport { expandRows } from './getExpandedRowModel'\n\nexport function getPaginationRowModel<TData extends RowData>(opts?: {\n  initialSync: boolean\n}): (table: Table<TData>) => () => RowModel<TData> {\n  return table =>\n    memo(\n      () => [\n        table.getState().pagination,\n        table.getPrePaginationRowModel(),\n        table.options.paginateExpandedRows\n          ? undefined\n          : table.getState().expanded,\n      ],\n      (pagination, rowModel) => {\n        if (!rowModel.rows.length) {\n          return rowModel\n        }\n\n        const { pageSize, pageIndex } = pagination\n        let { rows, flatRows, rowsById } = rowModel\n        const pageStart = pageSize * pageIndex\n        const pageEnd = pageStart + pageSize\n\n        rows = rows.slice(pageStart, pageEnd)\n\n        let paginatedRowModel: RowModel<TData>\n\n        if (!table.options.paginateExpandedRows) {\n          paginatedRowModel = expandRows({\n            rows,\n            flatRows,\n            rowsById,\n          })\n        } else {\n          paginatedRowModel = {\n            rows,\n            flatRows,\n            rowsById,\n          }\n        }\n\n        paginatedRowModel.flatRows = []\n\n        const handleRow = (row: Row<TData>) => {\n          paginatedRowModel.flatRows.push(row)\n          if (row.subRows.length) {\n            row.subRows.forEach(handleRow)\n          }\n        }\n\n        paginatedRowModel.rows.forEach(handleRow)\n\n        return paginatedRowModel\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getPaginationRowModel',\n        debug: () => table.options.debugAll ?? table.options.debugTable,\n      }\n    )\n}\n", "import * as React from 'react'\nexport * from '@tanstack/table-core'\n\nimport {\n  TableOptions,\n  TableOptionsResolved,\n  RowData,\n  createTable,\n} from '@tanstack/table-core'\n\nexport type Renderable<TProps> = React.ReactNode | React.ComponentType<TProps>\n\n//\n\nexport function flexRender<TProps extends object>(\n  Comp: Renderable<TProps>,\n  props: TProps\n): React.ReactNode | JSX.Element {\n  return !Comp ? null : isReactComponent<TProps>(Comp) ? (\n    <Comp {...props} />\n  ) : (\n    Comp\n  )\n}\n\nfunction isReactComponent<TProps>(\n  component: unknown\n): component is React.ComponentType<TProps> {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component: any) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component: any) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n\nexport function useReactTable<TData extends RowData>(\n  options: TableOptions<TData>\n) {\n  // Compose in the generic options to the user options\n  const resolvedOptions: TableOptionsResolved<TData> = {\n    state: {}, // Dummy state\n    onStateChange: () => {}, // noop\n    renderFallbackValue: null,\n    ...options,\n  }\n\n  // Create a new table and store it in state\n  const [tableRef] = React.useState(() => ({\n    current: createTable<TData>(resolvedOptions),\n  }))\n\n  // By default, manage table state here using the table's initial state\n  const [state, setState] = React.useState(() => tableRef.current.initialState)\n\n  // Compose the default state above with any user state. This will allow the user\n  // to only control a subset of the state if desired.\n  tableRef.current.setOptions(prev => ({\n    ...prev,\n    ...options,\n    state: {\n      ...state,\n      ...options.state,\n    },\n    // Similarly, we'll maintain both our internal state and any user-provided\n    // state.\n    onStateChange: updater => {\n      setState(updater)\n      options.onStateChange?.(updater)\n    },\n  }))\n\n  return tableRef.current\n}\n", "/**\n * react-virtual\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n//# sourceMappingURL=_rollupPluginBabelHelpers.mjs.map\n", "/**\n * virtual-core\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n//# sourceMappingURL=_rollupPluginBabelHelpers.mjs.map\n", "export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: false | string\n    debug?: () => any\n    onChange?: (result: TResult) => void\n    initialDeps?: TDeps\n  },\n) {\n  let deps = opts.initialDeps ?? []\n  let result: TResult | undefined\n\n  return (): TResult => {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    opts?.onChange?.(result)\n\n    return result!\n  }\n}\n\nexport function notUndefined<T>(value: T | undefined, msg?: string): T {\n  if (value === undefined) {\n    throw new Error(`Unexpected undefined${msg ? `: ${msg}` : ''}`)\n  } else {\n    return value\n  }\n}\n\nexport const approxEqual = (a: number, b: number) => Math.abs(a - b) < 1\n", "import { approxEqual, memo, notUndefined } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollDirection = 'forward' | 'backward'\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n  lane: number\n}\n\ninterface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport const observeElementRect = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = (rect: Rect) => {\n    const { width, height } = rect\n    cb({ width: Math.round(width), height: Math.round(height) })\n  }\n\n  handler(element.getBoundingClientRect())\n\n  const observer = new ResizeObserver((entries) => {\n    const entry = entries[0]\n    if (entry?.borderBoxSize) {\n      const box = entry.borderBoxSize[0]\n      if (box) {\n        handler({ width: box.inlineSize, height: box.blockSize })\n        return\n      }\n    }\n    handler(element.getBoundingClientRect())\n  })\n\n  observer.observe(element, { box: 'border-box' })\n\n  return () => {\n    observer.unobserve(element)\n  }\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<Window, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb({ width: element.innerWidth, height: element.innerHeight })\n  }\n  handler()\n\n  element.addEventListener('resize', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('resize', handler)\n  }\n}\n\nexport const observeElementOffset = <T extends Element>(\n  instance: Virtualizer<T, any>,\n  cb: (offset: number) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb(element[instance.options.horizontal ? 'scrollLeft' : 'scrollTop'])\n  }\n  handler()\n\n  element.addEventListener('scroll', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n  }\n}\n\nexport const observeWindowOffset = (\n  instance: Virtualizer<Window, any>,\n  cb: (offset: number) => void,\n) => {\n  const element = instance.scrollElement\n  if (!element) {\n    return\n  }\n\n  const handler = () => {\n    cb(element[instance.options.horizontal ? 'scrollX' : 'scrollY'])\n  }\n  handler()\n\n  element.addEventListener('scroll', handler, {\n    passive: true,\n  })\n\n  return () => {\n    element.removeEventListener('scroll', handler)\n  }\n}\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  entry: ResizeObserverEntry | undefined,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  if (entry?.borderBoxSize) {\n    const box = entry.borderBoxSize[0]\n    if (box) {\n      const size = Math.round(\n        box[instance.options.horizontal ? 'inlineSize' : 'blockSize'],\n      )\n      return size\n    }\n  }\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments = 0,\n    behavior,\n  }: { adjustments?: number; behavior?: ScrollBehavior },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset = offset + adjustments\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n\n  // Optional\n  debug?: any\n  initialRect?: Rect\n  onChange?: (instance: Virtualizer<TScrollElement, TItemElement>) => void\n  measureElement?: (\n    element: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => number[]\n  scrollMargin?: number\n  scrollingDelay?: number\n  indexAttribute?: string\n  initialMeasurementsCache?: VirtualItem[]\n  lanes?: number\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: (void | (() => void))[] = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  isScrolling: boolean = false\n  private isScrollingTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private scrollToIndexTimeoutId: ReturnType<typeof setTimeout> | null = null\n  measurementsCache: VirtualItem[] = []\n  private itemSizeCache = new Map<Key, number>()\n  private pendingMeasuredCacheIndexes: number[] = []\n  private scrollRect: Rect\n  scrollOffset: number\n  scrollDirection: ScrollDirection | null = null\n  private scrollAdjustments: number = 0\n  measureElementCache = new Map<Key, TItemElement>()\n  private observer = (() => {\n    let _ro: ResizeObserver | null = null\n\n    const get = () => {\n      if (_ro) {\n        return _ro\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return (_ro = new ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            this._measureElement(entry.target as TItemElement, entry)\n          })\n        }))\n      } else {\n        return null\n      }\n    }\n\n    return {\n      disconnect: () => get()?.disconnect(),\n      observe: (target: Element) =>\n        get()?.observe(target, { box: 'border-box' }),\n      unobserve: (target: Element) => get()?.unobserve(target),\n    }\n  })()\n  range: { startIndex: number; endIndex: number } = {\n    startIndex: 0,\n    endIndex: 0,\n  }\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n    this.scrollRect = this.options.initialRect\n    this.scrollOffset = this.options.initialOffset\n    this.measurementsCache = this.options.initialMeasurementsCache\n    this.measurementsCache.forEach((item) => {\n      this.itemSizeCache.set(item.key, item.size)\n    })\n\n    this.maybeNotify()\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      initialMeasurementsCache: [],\n      lanes: 1,\n      ...opts,\n    }\n  }\n\n  private notify = () => {\n    this.options.onChange?.(this)\n  }\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.scrollElement = null\n  }\n\n  _didMount = () => {\n    this.measureElementCache.forEach(this.observer.observe)\n    return () => {\n      this.observer.disconnect()\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    const scrollElement = this.options.getScrollElement()\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      this.scrollElement = scrollElement\n\n      this._scrollToOffset(this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          const prev = this.scrollRect\n          this.scrollRect = rect\n          if (\n            this.options.horizontal\n              ? rect.width !== prev.width\n              : rect.height !== prev.height\n          ) {\n            this.maybeNotify()\n          }\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset) => {\n          this.scrollAdjustments = 0\n\n          if (this.scrollOffset === offset) {\n            return\n          }\n\n          if (this.isScrollingTimeoutId !== null) {\n            clearTimeout(this.isScrollingTimeoutId)\n            this.isScrollingTimeoutId = null\n          }\n\n          this.isScrolling = true\n          this.scrollDirection =\n            this.scrollOffset < offset ? 'forward' : 'backward'\n          this.scrollOffset = offset\n\n          this.maybeNotify()\n\n          this.isScrollingTimeoutId = setTimeout(() => {\n            this.isScrollingTimeoutId = null\n            this.isScrolling = false\n            this.scrollDirection = null\n\n            this.maybeNotify()\n          }, this.options.scrollingDelay)\n        }),\n      )\n    }\n  }\n\n  private getSize = () => {\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private memoOptions = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.scrollMargin,\n      this.options.getItemKey,\n    ],\n    (count, paddingStart, scrollMargin, getItemKey) => {\n      this.pendingMeasuredCacheIndexes = []\n      return {\n        count,\n        paddingStart,\n        scrollMargin,\n        getItemKey,\n      }\n    },\n    {\n      key: false,\n    },\n  )\n\n  private getFurthestMeasurement = (\n    measurements: VirtualItem[],\n    index: number,\n  ) => {\n    const furthestMeasurementsFound = new Map<number, true>()\n    const furthestMeasurements = new Map<number, VirtualItem>()\n    for (let m = index - 1; m >= 0; m--) {\n      const measurement = measurements[m]!\n\n      if (furthestMeasurementsFound.has(measurement.lane)) {\n        continue\n      }\n\n      const previousFurthestMeasurement = furthestMeasurements.get(\n        measurement.lane,\n      )\n      if (\n        previousFurthestMeasurement == null ||\n        measurement.end > previousFurthestMeasurement.end\n      ) {\n        furthestMeasurements.set(measurement.lane, measurement)\n      } else if (measurement.end < previousFurthestMeasurement.end) {\n        furthestMeasurementsFound.set(measurement.lane, true)\n      }\n\n      if (furthestMeasurementsFound.size === this.options.lanes) {\n        break\n      }\n    }\n\n    return furthestMeasurements.size === this.options.lanes\n      ? Array.from(furthestMeasurements.values()).sort(\n          (a, b) => a.end - b.end,\n        )[0]\n      : undefined\n  }\n\n  private getMeasurements = memo(\n    () => [this.memoOptions(), this.itemSizeCache],\n    ({ count, paddingStart, scrollMargin, getItemKey }, itemSizeCache) => {\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n\n        const furthestMeasurement =\n          this.options.lanes === 1\n            ? measurements[i - 1]\n            : this.getFurthestMeasurement(measurements, i)\n\n        const start = furthestMeasurement\n          ? furthestMeasurement.end\n          : paddingStart + scrollMargin\n\n        const measuredSize = itemSizeCache.get(key)\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n\n        const end = start + size\n\n        const lane = furthestMeasurement\n          ? furthestMeasurement.lane\n          : i % this.options.lanes\n\n        measurements[i] = {\n          index: i,\n          start,\n          size,\n          end,\n          key,\n          lane,\n        }\n      }\n\n      this.measurementsCache = measurements\n\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.scrollOffset],\n    (measurements, outerSize, scrollOffset) => {\n      return (this.range = calculateRange({\n        measurements,\n        outerSize,\n        scrollOffset,\n      }))\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private maybeNotify = memo(\n    () => {\n      const range = this.calculateRange()\n\n      return [range.startIndex, range.endIndex, this.isScrolling]\n    },\n    () => {\n      this.notify()\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'maybeNotify',\n      debug: () => this.options.debug,\n      initialDeps: [\n        this.range.startIndex,\n        this.range.endIndex,\n        this.isScrolling,\n      ],\n    },\n  )\n\n  private getIndexes = memo(\n    () => [\n      this.options.rangeExtractor,\n      this.calculateRange(),\n      this.options.overscan,\n      this.options.count,\n    ],\n    (rangeExtractor, range, overscan, count) => {\n      return rangeExtractor({\n        ...range,\n        overscan,\n        count,\n      })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (\n    node: TItemElement,\n    entry: ResizeObserverEntry | undefined,\n  ) => {\n    const index = this.indexFromElement(node)\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n\n    const prevNode = this.measureElementCache.get(item.key)\n\n    if (!node.isConnected) {\n      this.observer.unobserve(node)\n      if (node === prevNode) {\n        this.measureElementCache.delete(item.key)\n      }\n      return\n    }\n\n    if (prevNode !== node) {\n      if (prevNode) {\n        this.observer.unobserve(prevNode)\n      }\n      this.observer.observe(node)\n      this.measureElementCache.set(item.key, node)\n    }\n\n    const measuredItemSize = this.options.measureElement(node, entry, this)\n\n    const itemSize = this.itemSizeCache.get(item.key) ?? item.size\n\n    const delta = measuredItemSize - itemSize\n\n    if (delta !== 0) {\n      if (item.start < this.scrollOffset) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.scrollOffset, {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(index)\n\n      this.itemSizeCache = new Map(\n        this.itemSizeCache.set(item.key, measuredItemSize),\n      )\n\n      this.notify()\n    }\n  }\n\n  measureElement = (node: TItemElement | null) => {\n    if (!node) {\n      return\n    }\n\n    this._measureElement(node, undefined)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: VirtualItem[] = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  getVirtualItemForOffset = (offset: number) => {\n    const measurements = this.getMeasurements()\n\n    return notUndefined(\n      measurements[\n        findNearestBinarySearch(\n          0,\n          measurements.length - 1,\n          (index: number) => notUndefined(measurements[index]).start,\n          offset,\n        )\n      ],\n    )\n  }\n\n  getOffsetForAlignment = (toOffset: number, align: ScrollAlignment) => {\n    const size = this.getSize()\n\n    if (align === 'auto') {\n      if (toOffset <= this.scrollOffset) {\n        align = 'start'\n      } else if (toOffset >= this.scrollOffset + size) {\n        align = 'end'\n      } else {\n        align = 'start'\n      }\n    }\n\n    if (align === 'start') {\n      toOffset = toOffset\n    } else if (align === 'end') {\n      toOffset = toOffset - size\n    } else if (align === 'center') {\n      toOffset = toOffset - size / 2\n    }\n\n    const scrollSizeProp = this.options.horizontal\n      ? 'scrollWidth'\n      : 'scrollHeight'\n    const scrollSize = this.scrollElement\n      ? 'document' in this.scrollElement\n        ? this.scrollElement.document.documentElement[scrollSizeProp]\n        : this.scrollElement[scrollSizeProp]\n      : 0\n\n    const maxOffset = scrollSize - this.getSize()\n\n    return Math.max(Math.min(maxOffset, toOffset), 0)\n  }\n\n  getOffsetForIndex = (index: number, align: ScrollAlignment = 'auto') => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    const measurement = notUndefined(this.getMeasurements()[index])\n\n    if (align === 'auto') {\n      if (\n        measurement.end >=\n        this.scrollOffset + this.getSize() - this.options.scrollPaddingEnd\n      ) {\n        align = 'end'\n      } else if (\n        measurement.start <=\n        this.scrollOffset + this.options.scrollPaddingStart\n      ) {\n        align = 'start'\n      } else {\n        return [this.scrollOffset, align] as const\n      }\n    }\n\n    const toOffset =\n      align === 'end'\n        ? measurement.end + this.options.scrollPaddingEnd\n        : measurement.start - this.options.scrollPaddingStart\n\n    return [this.getOffsetForAlignment(toOffset, align), align] as const\n  }\n\n  private isDynamicMode = () => this.measureElementCache.size > 0\n\n  private cancelScrollToIndex = () => {\n    if (this.scrollToIndexTimeoutId !== null) {\n      clearTimeout(this.scrollToIndexTimeoutId)\n      this.scrollToIndexTimeoutId = null\n    }\n  }\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.getOffsetForAlignment(toOffset, align), {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align: initialAlign = 'auto', behavior }: ScrollToIndexOptions = {},\n  ) => {\n    index = Math.max(0, Math.min(index, this.options.count - 1))\n\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    const [toOffset, align] = this.getOffsetForIndex(index, initialAlign)\n\n    this._scrollToOffset(toOffset, { adjustments: undefined, behavior })\n\n    if (behavior !== 'smooth' && this.isDynamicMode()) {\n      this.scrollToIndexTimeoutId = setTimeout(() => {\n        this.scrollToIndexTimeoutId = null\n\n        const elementInDOM = this.measureElementCache.has(\n          this.options.getItemKey(index),\n        )\n\n        if (elementInDOM) {\n          const [toOffset] = this.getOffsetForIndex(index, align)\n\n          if (!approxEqual(toOffset, this.scrollOffset)) {\n            this.scrollToIndex(index, { align, behavior })\n          }\n        } else {\n          this.scrollToIndex(index, { align, behavior })\n        }\n      })\n    }\n  }\n\n  scrollBy = (delta: number, { behavior }: ScrollToOffsetOptions = {}) => {\n    this.cancelScrollToIndex()\n\n    if (behavior === 'smooth' && this.isDynamicMode()) {\n      console.warn(\n        'The `smooth` scroll behavior is not fully supported with dynamic size.',\n      )\n    }\n\n    this._scrollToOffset(this.scrollOffset + delta, {\n      adjustments: undefined,\n      behavior,\n    })\n  }\n\n  getTotalSize = () =>\n    (this.getMeasurements()[this.options.count - 1]?.end ||\n      this.options.paddingStart) -\n    this.options.scrollMargin +\n    this.options.paddingEnd\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemSizeCache = new Map()\n    this.notify()\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: VirtualItem[]\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n", "import * as React from 'react'\nimport {\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  PartialKeys,\n  Virtualizer,\n  VirtualizerOptions,\n  windowScroll,\n} from '@tanstack/virtual-core'\nexport * from '@tanstack/virtual-core'\n\n//\n\nconst useIsomorphicLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  React.useEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof document !== 'undefined' ? window : null),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    ...options,\n  })\n}\n", "import { render, hydrate, unmountComponentAtNode } from 'preact/compat';\n\nexport function createRoot(container) {\n\treturn {\n\t\trender(children) {\n\t\t\trender(children, container);\n\t\t},\n\t\tunmount() {\n\t\t\tunmountComponentAtNode(container);\n\t\t}\n\t};\n}\n\nexport function hydrateRoot(container, children) {\n\thydrate(children, container);\n\treturn createRoot(container);\n}\n\nexport default {\n\tcreateRoot,\n\thydrateRoot\n};\n", "// Find the first item whose top-left corner is fully inside the visible portion of the\n// scroll container\nexport function findFirstItemInView(\n  scrollContainer: HTMLElement,\n  items: NodeList,\n  extraPadding?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  }\n) {\n  const pad = Object.assign(\n    { top: 0, right: 0, bottom: 0, left: 0 },\n    extraPadding\n  );\n  const container = scrollContainer;\n  const top = container.scrollTop + pad.top;\n  const left = container.scrollLeft + pad.left;\n  const bottom = top + container.clientHeight - pad.top - pad.bottom;\n  const right = left + container.clientWidth - pad.left - pad.right;\n\n  for (let i = 0; i < items.length; i++) {\n    const el = items[i] as HTMLElement;\n    const y = el.offsetTop,\n      x = el.offsetLeft;\n    if (y >= top && y <= bottom && x >= left && x <= right) {\n      return el;\n    }\n  }\n  return null;\n}\n\nexport function getStyle(el: Element, styleProp: string): string | undefined {\n  // getComputedStyle can return null when we're inside a hidden iframe on\n  // Firefox; don't attempt to retrieve style props in this case.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  return document?.defaultView\n    ?.getComputedStyle(el, null)\n    ?.getPropertyValue(styleProp);\n}\n", "import React, { FC, useEffect, useRef, useState } from \"react\";\n\nexport interface FilterNumericProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  // The absolute min/max possible values\n  range: () => [number | undefined, number | undefined];\n\n  // The currently selected min/max values\n  from: number | undefined;\n  to: number | undefined;\n\n  onRangeChange: (from?: number, to?: number) => void;\n}\n\nexport const FilterNumeric: FC<FilterNumericProps> = (props) => {\n  const [editing, setEditing] = useState(false);\n  const { range, from, to, onRangeChange } = props;\n\n  return (\n    <FilterNumericImpl\n      range={range}\n      value={[from, to]}\n      editing={editing}\n      onValueChange={(x) => onRangeChange(...x)}\n      onFocus={() => setEditing(true)}\n      onBlur={() => setEditing(false)}\n    />\n  );\n};\n\nfunction generateLabel(from?: number, to?: number) {\n  if (typeof from === \"undefined\" && typeof to === \"undefined\") {\n    return \"\";\n  } else if (typeof from === \"undefined\") {\n    return `\u2264 ${to}`;\n  } else if (typeof to === \"undefined\") {\n    return `\u2265 ${from}`;\n  } else {\n    return `\u2265${from}, \u2264${to}`;\n  }\n}\n\ninterface FilterNumericImplProps {\n  range: () => [number | undefined, number | undefined];\n  value: [number | undefined, number | undefined];\n  editing: boolean;\n  onValueChange: (range: [number | undefined, number | undefined]) => void;\n  onFocus: () => void;\n  onBlur: () => void;\n}\n\nconst FilterNumericImpl: React.FC<FilterNumericImplProps> = (props) => {\n  const [min, max] = props.value;\n  const { editing, onFocus } = props;\n\n  const minInputRef = useRef<HTMLInputElement>(null);\n  const maxInputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <div\n      onBlur={(e) => {\n        if (e.currentTarget.contains(e.relatedTarget)) {\n          return;\n        }\n        return props.onBlur();\n      }}\n      onFocus={() => onFocus()}\n      style={{\n        display: \"flex\",\n        gap: \"0.5rem\",\n      }}\n    >\n      <input\n        ref={minInputRef}\n        className={`form-control form-control-sm ${\n          minInputRef.current?.checkValidity() ? \"\" : \"is-invalid\"\n        }`}\n        style={{ flex: \"1 1 0\", width: \"0\" }}\n        type=\"number\"\n        placeholder={createPlaceholder(editing, \"Min\", props.range()[0])}\n        defaultValue={min}\n        step=\"any\"\n        onChange={(e) => {\n          const value = coerceToNum(e.target.value);\n          minInputRef.current.classList.toggle(\n            \"is-invalid\",\n            !e.target.checkValidity()\n          );\n          props.onValueChange([value, max]);\n        }}\n      />\n      <input\n        ref={maxInputRef}\n        className={`form-control form-control-sm ${\n          maxInputRef.current?.checkValidity() ? \"\" : \"is-invalid\"\n        }`}\n        style={{ flex: \"1 1 0\", width: \"0\" }}\n        type=\"number\"\n        placeholder={createPlaceholder(editing, \"Max\", props.range()[1])}\n        defaultValue={max}\n        step=\"any\"\n        onChange={(e) => {\n          const value = coerceToNum(e.target.value);\n          maxInputRef.current.classList.toggle(\n            \"is-invalid\",\n            !e.target.checkValidity()\n          );\n          props.onValueChange([min, value]);\n        }}\n      />\n    </div>\n  );\n};\n\nfunction createPlaceholder(\n  editing: boolean,\n  label: string,\n  value: number | undefined\n) {\n  if (!editing) {\n    return null;\n  } else if (typeof value === \"undefined\") {\n    return label;\n  } else {\n    return `${label} (${value})`;\n  }\n}\n\nfunction coerceToNum(value: string): number | undefined {\n  if (value === \"\") {\n    return undefined;\n  }\n  return +value;\n}\n", "import {\n  FiltersOptions,\n  Header,\n  TableOptions,\n  getFacetedMinMaxValues,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n} from \"@tanstack/react-table\";\nimport React, {\n  FC,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { FilterNumeric } from \"./filter-numeric\";\n\nexport function useFilter<TData>(enabled: boolean): FiltersOptions<TData> {\n  if (enabled) {\n    return {\n      getFilteredRowModel: getFilteredRowModel(),\n      getFacetedRowModel: getFacetedRowModel(),\n      getFacetedUniqueValues: getFacetedUniqueValues(),\n      getFacetedMinMaxValues: getFacetedMinMaxValues(),\n      filterFns: {\n        substring: (row, columnId, value, addMeta) => {\n          return row.getValue(columnId).toString().includes(value);\n        },\n      },\n    };\n  } else {\n    return {};\n  }\n}\n\nexport interface FilterProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  header: Header<unknown[], unknown>;\n}\n\nexport const Filter: FC<FilterProps> = ({ header, className, ...props }) => {\n  const typeHint = header.column.columnDef.meta?.typeHint;\n\n  if (typeHint.type === \"numeric\") {\n    const [from, to] = (header.column.getFilterValue() as\n      | [number | undefined, number | undefined]\n      | undefined) ?? [undefined, undefined];\n\n    const range = () => {\n      return header.column.getFacetedMinMaxValues() ?? [undefined, undefined];\n    };\n\n    return FilterNumeric({\n      from,\n      to,\n      range,\n      onRangeChange: (from, to) => header.column.setFilterValue([from, to]),\n    });\n  }\n\n  return (\n    <input\n      {...props}\n      className={`form-control form-control-sm ${className}`}\n      type=\"text\"\n      onChange={(e) => header.column.setFilterValue(e.target.value)}\n    />\n  );\n};\n", "export class ImmutableSet<T> {\n  private _set: Set<T>;\n  private static _empty: ImmutableSet<unknown> = new ImmutableSet(new Set());\n\n  private constructor(set: Set<T>) {\n    this._set = set;\n  }\n\n  static empty<T>(): ImmutableSet<T> {\n    return this._empty as ImmutableSet<T>;\n  }\n\n  static just<T>(...values: T[]): ImmutableSet<T> {\n    return this.empty<T>().add(...values);\n  }\n\n  has(value: T): boolean {\n    return this._set.has(value);\n  }\n\n  add(...values: T[]): ImmutableSet<T> {\n    const newSet = new Set(this._set.keys());\n    for (const value of values) {\n      newSet.add(value);\n    }\n    return new ImmutableSet(newSet);\n  }\n\n  toggle(value: T): ImmutableSet<T> {\n    if (this.has(value)) {\n      return this.delete(value);\n    } else {\n      return this.add(value);\n    }\n  }\n\n  delete(value: T): ImmutableSet<T> {\n    const newSet = new Set(this._set.keys());\n    newSet.delete(value);\n    return new ImmutableSet(newSet);\n  }\n\n  clear(): ImmutableSet<T> {\n    return ImmutableSet.empty();\n  }\n\n  [Symbol.iterator]() {\n    return this._set[Symbol.iterator]();\n  }\n\n  toList(): T[] {\n    return [...this._set.keys()];\n  }\n}\n", "import * as React from \"react\";\nimport { useState } from \"react\";\nimport { ImmutableSet } from \"./immutable-set\";\n\nexport interface SelectionSet<TKey, TElement extends HTMLElement> {\n  has(key: TKey): boolean;\n  set(key: TKey, selected: boolean): void;\n  clear(): void;\n  keys(): ImmutableSet<TKey>;\n  itemHandlers(): {\n    onMouseDown: (event: React.MouseEvent<TElement, MouseEvent>) => void;\n    onKeyDown: (event: React.KeyboardEvent<TElement>) => void;\n  };\n}\n\nexport enum SelectionMode {\n  None = \"none\",\n  Single = \"single\",\n  Multiple = \"multiple\",\n  MultiNative = \"multi-native\",\n}\n\nexport function useSelection<TKey, TElement extends HTMLElement>(\n  mode: SelectionMode,\n  keyAccessor: (el: TElement) => TKey,\n  focusOffset: (start: TKey, offset: number) => TKey,\n  between?: (from: TKey, to: TKey) => ReadonlyArray<TKey>\n): SelectionSet<TKey, TElement> {\n  const [selectedKeys, setSelectedKeys] = useState<ImmutableSet<TKey>>(\n    ImmutableSet.empty()\n  );\n\n  // The anchor is the item that was most recently selected with a click or ctrl-click,\n  // and is used to determine the \"other end\" of a shift-click selection operation.\n  const [anchor, setAnchor] = useState<TKey | null>(null);\n\n  const onMouseDown = (event: React.MouseEvent<TElement, MouseEvent>): void => {\n    if (mode === SelectionMode.None) {\n      return;\n    }\n\n    const el = event.currentTarget as TElement;\n    const key = keyAccessor(el);\n\n    const result = performMouseDownAction<TKey, TElement>(\n      mode,\n      between,\n      selectedKeys,\n      event,\n      key,\n      anchor\n    );\n    if (result) {\n      setSelectedKeys(result.selection);\n      if (result.anchor) {\n        setAnchor(key);\n        el.focus();\n      }\n      event.preventDefault();\n    }\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent<TElement>): void => {\n    if (mode === SelectionMode.None) {\n      return;\n    }\n\n    const el = event.currentTarget as TElement;\n    const key = keyAccessor(el);\n    const selected = selectedKeys.has(key);\n\n    if (mode === SelectionMode.Single) {\n      if (event.key === \" \" || event.key === \"Enter\") {\n        if (selectedKeys.has(key)) {\n          setSelectedKeys(ImmutableSet.empty());\n        } else {\n          setSelectedKeys(ImmutableSet.just(key));\n        }\n        event.preventDefault();\n      } else if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n        const targetKey = focusOffset(key, event.key === \"ArrowUp\" ? -1 : 1);\n        if (targetKey) {\n          event.preventDefault();\n          if (selected) {\n            setSelectedKeys(ImmutableSet.just(targetKey));\n          }\n        }\n      }\n    } else if (mode === SelectionMode.Multiple) {\n      if (event.key === \" \" || event.key === \"Enter\") {\n        setSelectedKeys(selectedKeys.toggle(key));\n        event.preventDefault();\n      } else if (event.key === \"ArrowUp\" || event.key === \"ArrowDown\") {\n        if (focusOffset(key, event.key === \"ArrowUp\" ? -1 : 1)) {\n          event.preventDefault();\n        }\n      }\n    }\n  };\n\n  return {\n    has(key: TKey): boolean {\n      return selectedKeys.has(key);\n    },\n\n    set(key: TKey, selected: boolean) {\n      if (selected) {\n        setSelectedKeys(selectedKeys.add(key));\n      } else {\n        setSelectedKeys(selectedKeys.delete(key));\n      }\n    },\n\n    clear() {\n      setSelectedKeys(selectedKeys.clear());\n    },\n\n    keys() {\n      return selectedKeys;\n    },\n\n    itemHandlers() {\n      return { onMouseDown, onKeyDown };\n    },\n  };\n}\n\ndeclare global {\n  interface Navigator {\n    readonly userAgentData?: NavigatorUAData;\n  }\n  interface NavigatorUAData {\n    readonly brands?: { brand: string; version: string }[];\n    readonly mobile?: boolean;\n    readonly platform?: string;\n  }\n}\n\nconst isMac = /^mac/i.test(\n  window.navigator.userAgentData?.platform ?? window.navigator.platform\n);\n\nfunction performMouseDownAction<TKey, TElement>(\n  mode: SelectionMode,\n  between: (from: TKey, to: TKey) => readonly TKey[],\n  selectedKeys: ImmutableSet<TKey>,\n  event: React.MouseEvent<TElement, MouseEvent>,\n  key: TKey,\n  anchor: TKey | null\n): { selection: ImmutableSet<TKey>; anchor?: true } {\n  const { shiftKey, altKey } = event;\n  const ctrlKey = isMac ? event.metaKey : event.ctrlKey;\n  const metaKey = isMac ? event.ctrlKey : event.metaKey;\n\n  if (metaKey || altKey) {\n    return null;\n  }\n\n  if (mode === SelectionMode.Multiple) {\n    return { selection: selectedKeys.toggle(key), anchor: true };\n  } else if (mode === SelectionMode.Single) {\n    if (ctrlKey && !shiftKey) {\n      // Ctrl-click is like simple click, except it removes selection if an item is\n      // already selected\n      if (selectedKeys.has(key)) {\n        return { selection: ImmutableSet.empty(), anchor: true };\n      } else {\n        return { selection: ImmutableSet.just(key), anchor: true };\n      }\n    } else {\n      // Simple click sets selection, always\n      return { selection: ImmutableSet.just(key), anchor: true };\n    }\n  } else if (mode === SelectionMode.MultiNative) {\n    if (shiftKey && ctrlKey) {\n      // Ctrl-Shift-click: Add anchor row through current row to selection\n      const toSelect = between(anchor, key);\n      return { selection: selectedKeys.add(...toSelect) };\n    } else if (ctrlKey) {\n      // Ctrl-click: toggle the current row and make it anchor\n      return { selection: selectedKeys.toggle(key), anchor: true };\n    } else if (shiftKey) {\n      // Shift-click: replace selection with anchor row through current row\n      if (anchor !== null && between) {\n        const toSelect = between(anchor, key);\n        return { selection: ImmutableSet.just(...toSelect) };\n      }\n    } else {\n      // Regular click: Select the current row and make it anchor\n      return { selection: ImmutableSet.just(key), anchor: true };\n    }\n  }\n}\n", "import { SortDirection } from \"@tanstack/react-table\";\nimport React, { FC } from \"react\";\n\nconst sortCommonProps = {\n  className: \"sort-arrow\",\n  viewBox: [-1, -1, 2, 2].map((x) => x * 1.4).join(\" \"),\n  width: \"100%\",\n  height: \"100%\",\n  style: { paddingLeft: \"3px\" },\n};\n\nconst sortPathCommonProps = {\n  stroke: \"#333333\",\n  strokeWidth: \"0.6\",\n  fill: \"transparent\",\n};\n\nconst sortArrowUp = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" {...sortCommonProps}>\n    <path\n      d=\"M -1 0.5 L 0 -0.5 L 1 0.5\"\n      {...sortPathCommonProps}\n      strokeLinecap=\"round\"\n    />\n  </svg>\n);\n\nconst sortArrowDown = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" {...sortCommonProps}>\n    <path\n      d=\"M -1 -0.5 L 0 0.5 L 1 -0.5\"\n      {...sortPathCommonProps}\n      strokeLinecap=\"round\"\n    />\n  </svg>\n);\n\ninterface SortArrowProps {\n  direction: SortDirection | false;\n}\n\nexport const SortArrow: FC<SortArrowProps> = ({ direction }) => {\n  if (!direction) {\n    return null;\n  }\n  if (direction === \"asc\") {\n    return sortArrowUp;\n  }\n  if (direction === \"desc\") {\n    return sortArrowDown;\n  }\n  throw new Error(`Unexpected sort direction: '${direction}'`);\n};\n\n//const sortArrowUp = <span className=\"sort-arrow sort-arrow-up\"> \u25B2</span>;\n//const sortArrowDown = <span className=\"sort-arrow sort-arrow-down\"> \u25BC</span>;\n", "import React, { useState } from \"react\";\nimport { findFirstItemInView } from \"./dom-utils\";\n\nexport interface TabindexGroup<TElement extends HTMLElement> {\n  containerTabIndex: number;\n  containerHandlers: {\n    onFocus: (event: React.FocusEvent<TElement>) => void;\n    onBlur: (event: React.FocusEvent<TElement>) => void;\n  };\n}\n\nexport function useTabindexGroup<TContainerElement extends HTMLElement>(\n  container: TContainerElement,\n  focusableItems: () => NodeList,\n  extraPadding?: {\n    top?: number;\n    right?: number;\n    bottom?: number;\n    left?: number;\n  }\n): TabindexGroup<TContainerElement> {\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const onFocus = React.useCallback(\n    (event: React.FocusEvent<TContainerElement>) => {\n      // When focus is within (or on, but we only really care about within) the\n      // container, remove it from the tab order. If we don't set the tab stop to -1,\n      // then the logic below (that, on container focus, moves focus to the first item)\n      // causes Shift-Tab from a focused item to break, as focus moves to the container\n      // and then (back) to the first item.\n      setTabIndex(-1);\n\n      if (event.target !== event.currentTarget) {\n        // Not interested in capturing, only care about focus on the container itself\n        return;\n      }\n      findFirstItemInView(container, focusableItems(), extraPadding)?.focus();\n    },\n    [container, focusableItems, extraPadding]\n  );\n\n  const onBlur = React.useCallback(\n    (event: React.FocusEvent<TContainerElement>) => {\n      setTabIndex(0);\n    },\n    []\n  );\n\n  return {\n    containerTabIndex: tabIndex,\n    containerHandlers: {\n      onFocus,\n      onBlur,\n    },\n  };\n}\n", "import { VirtualItem } from \"@tanstack/react-virtual\";\nimport React, { useMemo } from \"react\";\n\n/**\n * Create a summary\n *\n * @param summaryTemplate A string with \"{start}\", \"{end}\", and \"{total}\"\n * @param scrollContainer Scrolling container of the table/grid\n * @param virtualRows VirtualItem objects that might currently be visible\n * @param thead The thead tag of the table\n * @param nrows Number of total rows of data that exist\n */\nexport function useSummary(\n  summaryTemplate: string | boolean | null,\n  scrollContainer: HTMLElement | null,\n  virtualRows: VirtualItem[],\n  thead: HTMLTableSectionElement,\n  nrows: number\n): JSX.Element | null {\n  return useMemo(() => {\n    const summaryOption = summaryTemplate ?? true;\n    if (!summaryOption) {\n      return null;\n    }\n\n    const template =\n      typeof summaryOption === \"string\"\n        ? summaryOption\n        : \"Viewing rows {start} through {end} of {total}\";\n\n    if (!scrollContainer) {\n      return null;\n    }\n    if (virtualRows.length === 0) {\n      return null;\n    }\n\n    const top = scrollContainer.scrollTop + thead.clientHeight;\n    const bot = scrollContainer.scrollTop + scrollContainer.clientHeight;\n\n    const [firstIndex, lastIndex] = findRangeIndex(\n      top,\n      bot,\n      virtualRows,\n      (vrow, start) => vrow.start + vrow.size / 2\n    );\n\n    if (firstIndex === null || lastIndex === null) {\n      // Something must've gone wrong if there are rows but none of them are within the\n      // visible scroll area... shrug\n      return null;\n    }\n\n    const firstRow = virtualRows[firstIndex];\n    const lastRow = virtualRows[lastIndex];\n\n    if (firstRow.index === 0 && lastRow.index === nrows - 1) {\n      // Viewing all rows; no need for a summary\n      return null;\n    }\n\n    const summaryMessage = formatSummary(\n      template,\n      firstRow.index + 1,\n      lastRow.index + 1,\n      nrows\n    );\n\n    return <div className=\"shiny-data-grid-summary\">{summaryMessage}</div>;\n  }, [summaryTemplate, scrollContainer, virtualRows, thead, nrows]);\n}\n\n/**\n * Find the subset of (sorted) items that are between start and end (inclusive), where\n * each item's value to compare is calculated by a mapping function. The mapping\n * function may behave differently when comparing to start vs. end.\n *\n * @param start The smallest value to include.\n * @param end The largest value to include.\n * @param items A set of items to be evaluated, in sorted order.\n * @param map A function for converting from an item to a comparison value; for example,\n *   if 'start' and 'end' are vertical pixel coordinates, then the function might\n *   return the item's vertical top (for start) or bottom (for end) coordinate.\n * @returns The start and end indexes into the 'items' array indicating the first and\n *   last item that is included.\n */\nfunction findRangeIndex<TItem>(\n  start: number,\n  end: number,\n  items: TItem[],\n  map: (x: TItem, start: boolean) => number\n): [first: number | null, last: number | null] {\n  let first: number | null = null;\n  let last: number | null = null;\n\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    if (first === null) {\n      if (map(item, true) >= start) {\n        first = i;\n        last = i;\n      }\n    } else {\n      if (map(item, false) <= end) {\n        last = i;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return [first, last];\n}\n\nfunction formatSummary(\n  template: string,\n  start: number,\n  end: number,\n  total: number\n) {\n  return template.replace(/\\{(start|end|total)\\}/g, (substr, token) => {\n    if (token === \"start\") {\n      return start + \"\";\n    } else if (token === \"end\") {\n      return end + \"\";\n    } else if (token === \"total\") {\n      return total + \"\";\n    } else {\n      return substr;\n    }\n  });\n}\n", "import css from \"./styles.scss\";\n\nimport {\n  Column,\n  ColumnDef,\n  RowData,\n  RowModel,\n  TableOptions,\n  flexRender,\n  getCoreRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport { Virtualizer, useVirtualizer } from \"@tanstack/react-virtual\";\nimport React, {\n  FC,\n  StrictMode,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { Root, createRoot } from \"react-dom/client\";\nimport { ErrorsMessageValue } from \"rstudio-shiny/srcts/types/src/shiny/shinyapp\";\nimport { findFirstItemInView, getStyle } from \"./dom-utils\";\nimport { Filter, useFilter } from \"./filter\";\nimport { SelectionMode, useSelection } from \"./selection\";\nimport { SortArrow } from \"./sort-arrows\";\nimport { useTabindexGroup } from \"./tabindex-group\";\nimport { useSummary } from \"./table-summary\";\nimport { PandasData, TypeHint } from \"./types\";\n\ndeclare module \"@tanstack/table-core\" {\n  interface ColumnMeta<TData extends RowData, TValue> {\n    typeHint: TypeHint;\n  }\n}\n// TODO: Right-align numeric columns, maybe change font\n// TODO: Explicit column widths\n// TODO: Filtering\n// TODO: Editing\n// TODO: Pagination\n// TODO: Range selection + copying\n// TODO: Find\n// TODO: Server-side mode (don't pull all data to client at once)\n// TODO: Localization of summary\n// TODO: Accessibility review\n// TODO: Drag to resize columns\n// TODO: Drag to resize table/grid\n// TODO: Row numbers\n\ninterface ShinyDataGridProps<TIndex> {\n  id: string | null;\n  data: PandasData<TIndex>;\n  bgcolor?: string;\n}\n\nconst ShinyDataGrid: FC<ShinyDataGridProps<unknown>> = (props) => {\n  const { id, data, bgcolor } = props;\n  const { columns, index, type_hints, data: rowData } = data;\n  const { width, height, filters: withFilters } = data.options;\n  const keyToIndex: Record<string, unknown> = {};\n  index.forEach((value) => {\n    keyToIndex[value + \"\"] = value;\n  });\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const theadRef = useRef<HTMLTableSectionElement>(null);\n  const tbodyRef = useRef<HTMLTableSectionElement>(null);\n\n  const coldefs = useMemo<ColumnDef<unknown[], unknown>[]>(\n    () =>\n      columns.map((colname, i) => {\n        const typeHint = type_hints?.[i];\n\n        return {\n          accessorFn: (row, index) => {\n            return row[i];\n          },\n          // TODO: delegate this decision to something in filter.tsx\n          filterFn:\n            typeHint.type === \"numeric\" ? \"inNumberRange\" : \"includesString\",\n          header: colname,\n          meta: {\n            typeHint: typeHint,\n          },\n        };\n      }),\n    [columns]\n  );\n\n  // Not sure if it's even necessary to clone\n  const dataClone = useMemo(() => [...rowData], [rowData]);\n\n  const filterOpts = useFilter<unknown[]>(withFilters);\n\n  const options: TableOptions<unknown[]> = {\n    data: dataClone,\n    columns: coldefs,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    ...filterOpts,\n    //debugAll: true,\n  };\n  const table = useReactTable(options);\n\n  const rowVirtualizer = useVirtualizer({\n    count: table.getFilteredRowModel().rows.length,\n    getScrollElement: () => containerRef.current,\n    estimateSize: () => 31,\n    paddingStart: theadRef.current?.clientHeight ?? 0,\n    // In response to https://github.com/rstudio/py-shiny/pull/538/files#r1228352446\n    // (the default scrollingDelay is 150)\n    scrollingDelay: 10,\n  });\n\n  // Reset scroll when dataset changes\n  useLayoutEffect(() => {\n    rowVirtualizer.scrollToOffset(0);\n  }, [data]);\n\n  const totalSize = rowVirtualizer.getTotalSize();\n  const virtualRows = rowVirtualizer.getVirtualItems();\n\n  // paddingTop and paddingBottom are to force the <tbody> to add up to the correct\n  // virtual height.\n  // paddingTop must subtract out the thead height, since thead is inside the scroll\n  // container but not virtualized.\n  const paddingTop =\n    (virtualRows.length > 0 ? virtualRows?.[0]?.start || 0 : 0) -\n      theadRef.current?.clientHeight ?? 0;\n  const paddingBottom =\n    virtualRows.length > 0\n      ? totalSize - (virtualRows?.[virtualRows.length - 1]?.end || 0)\n      : 0;\n\n  const summary = useSummary(\n    data.options[\"summary\"],\n    containerRef?.current,\n    virtualRows,\n    theadRef.current,\n    rowVirtualizer.options.count\n  );\n\n  const tableStyle = data.options[\"style\"] ?? \"grid\";\n  const containerClass =\n    tableStyle === \"grid\" ? \"shiny-data-grid-grid\" : \"shiny-data-grid-table\";\n  const tableClass = tableStyle === \"table\" ? \"table table-sm\" : null;\n\n  const rowSelectionMode =\n    data.options[\"row_selection_mode\"] ?? SelectionMode.MultiNative;\n  const canSelect = rowSelectionMode !== SelectionMode.None;\n  const canMultiSelect =\n    rowSelectionMode === SelectionMode.MultiNative ||\n    rowSelectionMode === SelectionMode.Multiple;\n\n  const rowSelection = useSelection<string, HTMLTableRowElement>(\n    rowSelectionMode,\n    (el) => el.dataset.key,\n    (key, offset) => {\n      const rowModel = table.getSortedRowModel();\n      let index = rowModel.rows.findIndex((row) => row.id === key);\n      if (index < 0) {\n        return null;\n      }\n      index += offset;\n      if (index < 0 || index >= rowModel.rows.length) {\n        return null;\n      }\n      const targetKey = rowModel.rows[index].id;\n      rowVirtualizer.scrollToIndex(index);\n      setTimeout(() => {\n        const targetEl = containerRef.current?.querySelector(\n          `[data-key='${targetKey}']`\n        ) as HTMLElement | null;\n        targetEl?.focus();\n      }, 0);\n      return targetKey;\n    },\n    (fromKey, toKey) =>\n      findKeysBetween(table.getSortedRowModel(), fromKey, toKey)\n  );\n\n  useEffect(() => {\n    if (id) {\n      if (rowSelectionMode === SelectionMode.None) {\n        Shiny.setInputValue(`${id}_selected_rows`, null);\n      } else {\n        Shiny.setInputValue(\n          `${id}_selected_rows`,\n          rowSelection\n            .keys()\n            .toList()\n            .map((key) => keyToIndex[key])\n        );\n      }\n    }\n  }, [[...rowSelection.keys()]]);\n\n  const tbodyTabItems = React.useCallback(\n    () => tbodyRef.current.querySelectorAll(\"[tabindex='-1']\"),\n    [tbodyRef.current]\n  );\n  const tbodyTabGroup = useTabindexGroup(containerRef.current, tbodyTabItems, {\n    top: theadRef.current?.clientHeight ?? 0,\n  });\n\n  // Reset sorting and selection whenever dataset changes. (Should we do this?)\n  useEffect(() => {\n    return () => {\n      table.resetSorting();\n      rowSelection.clear();\n    };\n  }, [data]);\n\n  const headerRowCount = table.getHeaderGroups().length;\n\n  const scrollingClass =\n    containerRef.current?.scrollHeight > containerRef.current?.clientHeight\n      ? \"scrolling\"\n      : \"\";\n\n  const makeHeaderKeyDown =\n    (column: Column<unknown[], unknown>) => (event: React.KeyboardEvent) => {\n      if (event.key === \" \" || event.key === \"Enter\") {\n        column.toggleSorting(undefined, event.shiftKey);\n      }\n    };\n\n  const measureEl = useVirtualizerMeasureWorkaround(rowVirtualizer);\n\n  return (\n    <>\n      <div\n        className={`shiny-data-grid ${containerClass} ${scrollingClass}`}\n        ref={containerRef}\n        style={{ width, maxHeight: height, overflow: \"auto\" }}\n      >\n        <table\n          className={tableClass + (withFilters ? \" filtering\" : \"\")}\n          aria-rowcount={rowData.length}\n          aria-multiselectable={canMultiSelect}\n          style={{ width: width === null || width === \"auto\" ? null : \"100%\" }}\n        >\n          <thead ref={theadRef} style={{ backgroundColor: bgcolor }}>\n            {table.getHeaderGroups().map((headerGroup, i) => (\n              <tr key={headerGroup.id} aria-rowindex={i + 1}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <th\n                      key={header.id}\n                      colSpan={header.colSpan}\n                      style={{ width: header.getSize() }}\n                      scope=\"col\"\n                      tabIndex={0}\n                      onClick={header.column.getToggleSortingHandler()}\n                      onKeyDown={makeHeaderKeyDown(header.column)}\n                    >\n                      {header.isPlaceholder ? null : (\n                        <div\n                          style={{\n                            cursor: header.column.getCanSort()\n                              ? \"pointer\"\n                              : null,\n                            userSelect: header.column.getCanSort()\n                              ? \"none\"\n                              : null,\n                          }}\n                        >\n                          {flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                          <SortArrow direction={header.column.getIsSorted()} />\n                        </div>\n                      )}\n                    </th>\n                  );\n                })}\n              </tr>\n            ))}\n            {withFilters && (\n              <tr className=\"filters\">\n                {table.getFlatHeaders().map((header) => {\n                  return (\n                    <th key={`filter-${header.id}`}>\n                      <Filter header={header} />\n                    </th>\n                  );\n                })}\n              </tr>\n            )}\n          </thead>\n          <tbody\n            ref={tbodyRef}\n            tabIndex={tbodyTabGroup.containerTabIndex}\n            {...tbodyTabGroup.containerHandlers}\n          >\n            {paddingTop > 0 && <tr style={{ height: `${paddingTop}px` }}></tr>}\n            {virtualRows.map((virtualRow) => {\n              const row = table.getRowModel().rows[virtualRow.index];\n              return (\n                row && (\n                  <tr\n                    key={virtualRow.key}\n                    data-index={virtualRow.index}\n                    aria-rowindex={virtualRow.index + headerRowCount}\n                    data-key={row.id}\n                    ref={measureEl}\n                    aria-selected={rowSelection.has(row.id)}\n                    tabIndex={-1}\n                    {...rowSelection.itemHandlers()}\n                  >\n                    {row.getVisibleCells().map((cell) => {\n                      return (\n                        <td key={cell.id}>\n                          {flexRender(\n                            cell.column.columnDef.cell,\n                            cell.getContext()\n                          )}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                )\n              );\n            })}\n            {paddingBottom > 0 && (\n              <tr style={{ height: `${paddingBottom}px` }}></tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n      {summary}\n    </>\n  );\n};\n\nfunction findKeysBetween<TData>(\n  rowModel: RowModel<TData>,\n  fromKey: string,\n  toKey: string\n): readonly string[] {\n  let fromIdx = rowModel.rows.findIndex((row) => row.id === fromKey);\n  let toIdx = rowModel.rows.findIndex((row) => row.id === toKey);\n  if (fromIdx < 0 || toIdx < 0) {\n    return [];\n  }\n  if (fromIdx > toIdx) {\n    // Swap order to simplify things\n    [fromIdx, toIdx] = [toIdx, fromIdx];\n  }\n  const keys = [];\n  for (let i = fromIdx; i <= toIdx; i++) {\n    keys.push(rowModel.rows[i].id);\n  }\n  return keys;\n}\n\n/**\n * Works around a problem where the ref={...} callback is called before the element to\n * be measured is attached to the DOM, which will result in the virtualizer using its\n * estimated size instead of the actual size. This hook will detect when elements that\n * are not yet attached to the DOM are measured, and will retry measuring them in the\n * useEffect.\n * @returns A callback that can be used as a ref for an element that needs to be measured.\n */\nfunction useVirtualizerMeasureWorkaround(\n  rowVirtualizer: Virtualizer<HTMLDivElement, Element>\n) {\n  // Tracks elements that need to be measured, but are not yet attached to the DOM\n  const measureTodoQueue = useRef<HTMLElement[]>([]);\n\n  // This is the callback that will be passed back to the caller, intended to be used as\n  // a ref for each virtual item's element.\n  const measureElementWithRetry = useCallback(\n    (el: Element) => {\n      if (!el) {\n        return;\n      }\n\n      if (el.isConnected) {\n        rowVirtualizer.measureElement(el);\n      } else {\n        measureTodoQueue.current.push(el as HTMLElement);\n      }\n    },\n    [rowVirtualizer]\n  );\n\n  // Once the DOM is updated, try to measure any elements that were not yet attached\n  useLayoutEffect(() => {\n    if (measureTodoQueue.current.length > 0) {\n      const todo = measureTodoQueue.current.splice(0);\n      // The next line can mutate measureTodoQueue.current, hence the need to splice out\n      // all the items to work on before actually calling measureElement on any of them.\n      todo.forEach(rowVirtualizer.measureElement);\n    }\n  });\n\n  return measureElementWithRetry;\n}\n\nclass ShinyDataFrameOutputBinding extends Shiny.OutputBinding {\n  find(scope: HTMLElement | JQuery<HTMLElement>): JQuery<HTMLElement> {\n    return $(scope).find(\"shiny-data-frame\");\n  }\n\n  renderValue(el: ShinyDataFrameOutput, data: unknown): void {\n    el.renderValue(data);\n  }\n\n  renderError(el: ShinyDataFrameOutput, err: ErrorsMessageValue): void {\n    el.classList.add(\"shiny-output-error\");\n    el.renderError(err);\n  }\n\n  clearError(el: ShinyDataFrameOutput): void {\n    el.classList.remove(\"shiny-output-error\");\n    el.clearError();\n  }\n}\nShiny.outputBindings.register(\n  new ShinyDataFrameOutputBinding(),\n  \"shinyDataFrame\"\n);\n\nfunction getComputedBgColor(el: HTMLElement | null): string | null | undefined {\n  if (!el) {\n    // Top of document, can't recurse further\n    return null;\n  }\n\n  const bgColor = getStyle(el, \"background-color\");\n\n  if (!bgColor) return bgColor;\n  const m = bgColor.match(\n    /^rgba\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)$/\n  );\n\n  if (bgColor === \"transparent\" || (m && parseFloat(m[4]) === 0)) {\n    // No background color on this element. See if it has a background image.\n    const bgImage = getStyle(el, \"background-image\");\n\n    if (bgImage && bgImage !== \"none\") {\n      // Failed to detect background color, since it has a background image\n      return null;\n    } else {\n      // Recurse\n      return getComputedBgColor(el.parentElement);\n    }\n  }\n  return bgColor;\n}\n\nconst cssTemplate = document.createElement(\"template\");\ncssTemplate.innerHTML = `<style>${css}</style>`;\n\nexport class ShinyDataFrameOutput extends HTMLElement {\n  reactRoot?: Root;\n  errorRoot: HTMLSpanElement;\n\n  connectedCallback() {\n    // Currently not using shadow DOM since Bootstrap's table styling is pretty nice and\n    // I don't have time to duplicate all that right now.\n    // this.attachShadow({ mode: \"open\" });\n    // const target = this.shadowRoot!;\n\n    const [target] = [this]; // brackets are to avoid linter\n\n    target.appendChild(cssTemplate.content.cloneNode(true));\n\n    // Need to put error messages in an inline element (<span>) instead of in the\n    // reactRoot div, because we want the error messages to appear on the same line as\n    // \"Error:\".\n    this.errorRoot = document.createElement(\"span\");\n    target.appendChild(this.errorRoot);\n\n    const myDiv = document.createElement(\"div\");\n    myDiv.classList.add(\"html-fill-container\", \"html-fill-item\");\n    target.appendChild(myDiv);\n\n    this.reactRoot = createRoot(myDiv);\n\n    // If there is a <script class=\"data\"> element it contains static data.\n    // Render it now.\n    const dataEl = this.querySelector(\n      \"script.data\"\n    ) as HTMLScriptElement | null;\n    if (dataEl) {\n      const data = JSON.parse(dataEl.innerText);\n      this.renderValue(data);\n    }\n  }\n\n  renderValue(data: unknown) {\n    this.clearError();\n\n    if (!data) {\n      this.reactRoot!.render(null);\n      return;\n    }\n\n    this.reactRoot!.render(\n      <StrictMode>\n        <ShinyDataGrid\n          id={this.id}\n          data={data as PandasData<unknown>}\n          bgcolor={getComputedBgColor(this)}\n        ></ShinyDataGrid>\n      </StrictMode>\n    );\n  }\n\n  renderError(err: ErrorsMessageValue) {\n    this.reactRoot!.render(null);\n    this.errorRoot.innerText = err.message;\n  }\n\n  clearError() {\n    this.reactRoot!.render(null);\n    this.errorRoot.innerText = \"\";\n  }\n}\n\ncustomElements.define(\"shiny-data-frame\", ShinyDataFrameOutput);\n"],
  "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",
  "names": ["styles_default", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "createRef", "current", "Fragment", "Component", "context", "this", "getDomSibling", "childIndex", "indexOf", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "push", "process", "__r", "debounceRendering", "renderQueueLength", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "sort", "shift", "__P", "diff", "__n", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "oldChildrenLength", "reorderChildren", "placeChild", "getLastDom", "nextSibling", "unmount", "applyRef", "tmp", "toChildArray", "out", "some", "nextDom", "sibDom", "outer", "appendChild", "insertBefore", "lastDom", "diffProps", "dom", "newProps", "oldProps", "hydrate", "setProperty", "setStyle", "style", "value", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "event", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "cb", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "checked", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "setTimeout", "a", "b", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "EMPTY", "oldBeforeDiff", "options", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "getHookState", "index", "type", "__h", "hooks", "__H", "__", "length", "push", "__V", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useId", "state", "getHookState", "currentIndex", "__", "root", "currentComponent", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__b", "vnode", "oldBeforeDiff", "__r", "oldBeforeRender", "hooks", "__c", "previousComponent", "hookItem", "__N", "EMPTY", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "__V", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "invokeOrReturn", "f", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "is", "x", "y", "PureComponent", "p", "this", "memo", "c", "comparer", "shouldUpdate", "nextProps", "ref", "updateRef", "call", "current", "Memoed", "shouldComponentUpdate", "createElement", "displayName", "name", "prototype", "isReactComponent", "Component", "isPureReactComponent", "state", "oldDiffHook", "options", "__b", "vnode", "type", "__f", "REACT_FORWARD_SYMBOL", "Symbol", "for", "forwardRef", "fn", "Forwarded", "clone", "$$typeof", "render", "mapFn", "children", "toChildArray", "map", "Children", "forEach", "count", "length", "only", "normalized", "toArray", "oldCatchError", "__e", "error", "newVNode", "oldVNode", "errorInfo", "then", "component", "__c", "__k", "oldUnmount", "unmount", "detachedClone", "detachedParent", "parentDom", "effect", "__H", "__P", "child", "removeOriginal", "originalParent", "__v", "insertBefore", "__d", "Suspense", "__u", "_suspenders", "suspended", "__", "__a", "lazy", "loader", "prom", "Lazy", "exports", "default", "e", "SuspenseList", "_next", "_map", "__R", "__h", "promise", "suspendingVNode", "suspendingComponent", "push", "resolve", "resolved", "onResolved", "onSuspensionComplete", "suspendedVNode", "setState", "pop", "forceUpdate", "wasHydrating", "componentWillUnmount", "document", "detachedComponent", "__O", "fallback", "Fragment", "list", "node", "delete", "revealOrder", "size", "ContextProvider", "getChildContext", "context", "Portal", "_this", "container", "_container", "_temp", "nodeType", "parentNode", "childNodes", "appendChild", "before", "removeChild", "splice", "indexOf", "createPortal", "el", "containerInfo", "delegated", "get", "unsuspend", "wrappedUnsuspend", "Map", "reverse", "set", "componentDidUpdate", "componentDidMount", "REACT_ELEMENT_TYPE", "CAMEL_PROPS", "ON_ANI", "CAMEL_REPLACE", "IS_DOM", "onChangeInputType", "test", "parent", "callback", "textContent", "preactRender", "hydrate", "preactHydrate", "key", "Object", "defineProperty", "configurable", "v", "writable", "value", "oldEventHook", "event", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "persist", "nativeEvent", "currentComponent", "classNameDescriptorNonEnumberable", "enumerable", "class", "oldVNodeHook", "normalizedProps", "lowerCased", "toLowerCase", "replace", "multiple", "Array", "isArray", "selected", "defaultValue", "className", "oldBeforeRender", "__r", "oldDiffed", "diffed", "dom", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "ReactCurrentDispatcher", "readContext", "__n", "createFactory", "type", "createElement", "bind", "isValidElement", "element", "$$typeof", "REACT_ELEMENT_TYPE", "cloneElement", "preactCloneElement", "apply", "arguments", "unmountComponentAtNode", "container", "__k", "preactRender", "findDOMNode", "component", "base", "nodeType", "unstable_batchedUpdates", "callback", "arg", "flushSync", "StrictMode", "Fragment", "startTransition", "cb", "useDeferredValue", "val", "useTransition", "useInsertionEffect", "useLayoutEffect", "useSyncExternalStore", "subscribe", "getSnapshot", "value", "_useState", "useState", "_instance", "__", "_getSnapshot", "forceUpdate", "is", "useEffect", "index", "useId", "useReducer", "useRef", "useImperativeHandle", "useMemo", "useCallback", "useContext", "useDebugValue", "version", "Children", "render", "hydrate", "createPortal", "createContext", "createRef", "Component", "PureComponent", "memo", "forwardRef", "Suspense", "SuspenseList", "lazy", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "functionalUpdate", "updater", "input", "makeStateUpdater", "key", "instance", "updater", "setState", "old", "functionalUpdate", "isFunction", "d", "Function", "isNumberArray", "Array", "isArray", "every", "val", "flattenBy", "arr", "getChildren", "flat", "recurse", "subArr", "forEach", "item", "push", "children", "length", "memo", "getDeps", "fn", "opts", "deps", "result", "depTime", "debug", "Date", "now", "newDeps", "some", "dep", "index", "resultTime", "onChange", "depEndTime", "Math", "round", "resultEndTime", "resultFpsPercentage", "pad", "str", "num", "String", "console", "info", "max", "min", "createColumn", "table", "columnDef", "depth", "parent", "_ref", "_resolvedColumnDef$id", "resolvedColumnDef", "_getDefaultColumnDef", "accessorKey", "id", "replace", "undefined", "header", "accessorFn", "includes", "originalRow", "split", "_result", "Error", "column", "columns", "getFlatColumns", "_column$columns", "flatMap", "_table$options$debugA", "options", "debugAll", "debugColumns", "getLeafColumns", "_getOrderColumnsFn", "orderColumns", "_column$columns2", "leafColumns", "_table$options$debugA2", "_features", "reduce", "obj", "feature", "Object", "assign", "createHeader", "_options$id", "isPlaceholder", "placeholderId", "subHeaders", "colSpan", "rowSpan", "headerGroup", "getLeafHeaders", "leafHeaders", "recurseHeader", "h", "map", "getContext", "Headers", "createTable", "getHeaderGroups", "getAllColumns", "getVisibleLeafColumns", "getState", "columnPinning", "left", "right", "allColumns", "_left$map$filter", "_right$map$filter", "leftColumns", "columnId", "find", "filter", "Boolean", "rightColumns", "centerColumns", "buildHeaderGroups", "process", "debugHeaders", "getCenterHeaderGroups", "getLeftHeaderGroups", "_left$map$filter2", "orderedLeafColumns", "_table$options$debugA3", "getRightHeaderGroups", "_right$map$filter2", "_table$options$debugA4", "getFooterGroups", "headerGroups", "reverse", "_table$options$debugA5", "getLeftFooterGroups", "_table$options$debugA6", "getCenterFooterGroups", "_table$options$debugA7", "getRightFooterGroups", "_table$options$debugA8", "getFlatHeaders", "headers", "_table$options$debugA9", "getLeftFlatHeaders", "_table$options$debugA10", "getCenterFlatHeaders", "_table$options$debugA11", "getRightFlatHeaders", "_table$options$debugA12", "getCenterLeafHeaders", "flatHeaders", "_header$subHeaders", "_table$options$debugA13", "getLeftLeafHeaders", "_header$subHeaders2", "_table$options$debugA14", "getRightLeafHeaders", "_header$subHeaders3", "_table$options$debugA15", "center", "_left$0$headers", "_left$", "_center$0$headers", "_center$", "_right$0$headers", "_right$", "_table$options$debugA16", "columnsToGroup", "headerFamily", "_headerGroups$0$heade", "_headerGroups$", "maxDepth", "findMaxDepth", "getIsVisible", "createHeaderGroup", "headersToGroup", "join", "pendingParentHeaders", "headerToGroup", "latestPendingParentHeader", "isLeafHeader", "bottomHeaders", "recurseHeadersForSpans", "childRowSpans", "childColSpan", "childRowSpan", "minChildRowSpan", "defaultColumnSizing", "size", "minSize", "maxSize", "Number", "MAX_SAFE_INTEGER", "getDefaultColumnSizingInfoState", "startOffset", "startSize", "deltaOffset", "deltaPercentage", "isResizingColumn", "columnSizingStart", "ColumnSizing", "getDefaultColumnDef", "getInitialState", "state", "columnSizing", "columnSizingInfo", "getDefaultOptions", "columnResizeMode", "onColumnSizingChange", "onColumnSizingInfoChange", "getSize", "_column$columnDef$min", "_column$columnDef$max", "columnSize", "getStart", "position", "getLeftVisibleLeafColumns", "getRightVisibleLeafColumns", "findIndex", "prevSiblingColumn", "resetSize", "setColumnSizing", "_ref2", "_", "rest", "getCanResize", "_column$columnDef$ena", "_table$options$enable", "enableResizing", "enableColumnResizing", "getIsResizing", "sum", "_header$column$getSiz", "prevSiblingHeader", "getResizeHandler", "getColumn", "canResize", "e", "persist", "isTouchStartEvent", "touches", "clientX", "newColumnSizing", "updateOffset", "eventType", "clientXPos", "setColumnSizingInfo", "_old$startOffset", "_old$startSize", "_ref3", "headerSize", "onMove", "onEnd", "mouseEvents", "moveHandler", "upHandler", "document", "removeEventListener", "touchEvents", "cancelable", "preventDefault", "stopPropagation", "_e$touches$", "passiveIfSupported", "passiveEventSupported", "passive", "addEventListener", "resetColumnSizing", "defaultState", "_table$initialState$c", "initialState", "resetHeaderSizeInfo", "_table$initialState$c2", "getTotalSize", "_table$getHeaderGroup", "_table$getHeaderGroup2", "getLeftTotalSize", "_table$getLeftHeaderG", "_table$getLeftHeaderG2", "getCenterTotalSize", "_table$getCenterHeade", "_table$getCenterHeade2", "getRightTotalSize", "_table$getRightHeader", "_table$getRightHeader2", "passiveSupported", "supported", "noop", "window", "type", "Expanding", "expanded", "onExpandedChange", "paginateExpandedRows", "registered", "queued", "_autoResetExpanded", "_table$options$autoRe", "_queue", "autoResetAll", "autoResetExpanded", "manualExpanding", "resetExpanded", "setExpanded", "toggleAllRowsExpanded", "getIsAllRowsExpanded", "_table$initialState$e", "_table$initialState", "getCanSomeRowsExpand", "getPrePaginationRowModel", "flatRows", "row", "getCanExpand", "getToggleAllRowsExpandedHandler", "getIsSomeRowsExpanded", "values", "keys", "getRowModel", "getIsExpanded", "getExpandedDepth", "rowIds", "rowsById", "splitId", "getPreExpandedRowModel", "getSortedRowModel", "getExpandedRowModel", "_getExpandedRowModel", "createRow", "toggleExpanded", "_expanded", "exists", "oldExpanded", "rowId", "_table$options$getIsR", "getIsRowExpanded", "_table$options$getRow", "_row$subRows", "getRowCanExpand", "enableExpanding", "subRows", "getToggleExpandedHandler", "canExpand", "includesString", "filterValue", "_row$getValue", "_row$getValue$toStrin", "_row$getValue$toStrin2", "search", "toLowerCase", "getValue", "toString", "autoRemove", "testFalsey", "includesStringSensitive", "_row$getValue2", "_row$getValue2$toStri", "equalsString", "_row$getValue3", "_row$getValue3$toStri", "arrIncludes", "_row$getValue4", "arrIncludesAll", "_row$getValue5", "arrIncludesSome", "_row$getValue6", "equals", "weakEquals", "inNumberRange", "rowValue", "resolveFilterValue", "unsafeMin", "unsafeMax", "parsedMin", "parseFloat", "parsedMax", "isNaN", "Infinity", "temp", "filterFns", "Filters", "filterFn", "columnFilters", "globalFilter", "onColumnFiltersChange", "onGlobalFilterChange", "filterFromLeafRows", "maxLeafRowFilterDepth", "globalFilterFn", "getColumnCanGlobalFilter", "_table$getCoreRowMode", "_table$getCoreRowMode2", "value", "getCoreRowModel", "_getAllCellsByColumnId", "getAutoFilterFn", "firstRow", "getFilterFn", "_table$options$filter", "_table$options$filter2", "getCanFilter", "_table$options$enable2", "enableColumnFilter", "enableColumnFilters", "enableFilters", "getCanGlobalFilter", "_column$columnDef$ena2", "_table$options$enable3", "_table$options$enable4", "_table$options$getCol", "enableGlobalFilter", "getIsFiltered", "getFilterIndex", "getFilterValue", "_table$getState$colum", "_table$getState$colum2", "_table$getState$colum3", "_table$getState$colum4", "setFilterValue", "setColumnFilters", "previousfilter", "newFilter", "shouldAutoRemoveFilter", "_old$filter", "newFilterObj", "_old$map", "_getFacetedRowModel", "getFacetedRowModel", "getPreFilteredRowModel", "_getFacetedUniqueValues", "getFacetedUniqueValues", "Map", "_getFacetedMinMaxValues", "getFacetedMinMaxValues", "columnFiltersMeta", "getGlobalAutoFilterFn", "getGlobalFilterFn", "_table$options$filter3", "_table$options$filter4", "getAllLeafColumns", "updateFn", "_functionalUpdate", "setGlobalFilter", "resetGlobalFilter", "resetColumnFilters", "getFilteredRowModel", "_getFilteredRowModel", "manualFiltering", "_getGlobalFacetedRowModel", "getGlobalFacetedRowModel", "_getGlobalFacetedUniqueValues", "getGlobalFacetedUniqueValues", "_getGlobalFacetedMinMaxValues", "getGlobalFacetedMinMaxValues", "_leafRows", "childRows", "next", "nextValue", "extent", "mean", "leafRows", "count", "median", "mid", "floor", "nums", "sort", "a", "b", "unique", "from", "Set", "uniqueCount", "_columnId", "aggregationFns", "Grouping", "aggregatedCell", "props", "_toString", "_props$getValue", "aggregationFn", "grouping", "onGroupingChange", "groupedColumnMode", "toggleGrouping", "setGrouping", "getCanGroup", "enableGrouping", "getIsGrouped", "_table$getState$group", "getGroupedIndex", "_table$getState$group2", "indexOf", "getToggleGroupingHandler", "canGroup", "getAutoAggregationFn", "prototype", "call", "getAggregationFn", "_table$options$aggreg", "_table$options$aggreg2", "resetGrouping", "_table$initialState$g", "getPreGroupedRowModel", "getGroupedRowModel", "_getGroupedRowModel", "manualGrouping", "groupingColumnId", "getGroupingValue", "_groupingValuesCache", "hasOwnProperty", "original", "createCell", "cell", "getIsPlaceholder", "getIsAggregated", "nonGroupingColumns", "col", "g", "Ordering", "columnOrder", "onColumnOrderChange", "setColumnOrder", "resetColumnOrder", "orderedColumns", "columnOrderCopy", "columnsCopy", "targetColumnId", "shift", "foundIndex", "splice", "defaultPageIndex", "defaultPageSize", "getDefaultPaginationState", "pageIndex", "pageSize", "Pagination", "pagination", "onPaginationChange", "_autoResetPageIndex", "autoResetPageIndex", "manualPagination", "resetPageIndex", "setPagination", "safeUpdater", "resetPagination", "_table$initialState$p", "setPageIndex", "maxPageIndex", "pageCount", "_table$initialState$p2", "_table$initialState$p3", "resetPageSize", "_table$initialState$p4", "_table$initialState2", "_table$initialState2$", "setPageSize", "topRowIndex", "setPageCount", "_table$options$pageCo", "newPageCount", "getPageOptions", "getPageCount", "pageOptions", "fill", "i", "debugTable", "getCanPreviousPage", "getCanNextPage", "previousPage", "nextPage", "getPaginationRowModel", "_getPaginationRowModel", "_table$options$pageCo2", "ceil", "rows", "getDefaultPinningState", "Pinning", "onColumnPinningChange", "pin", "columnIds", "setColumnPinning", "_old$left3", "_old$right3", "_old$left", "_old$right", "_old$left2", "_old$right2", "getCanPin", "_d$columnDef$enablePi", "enablePinning", "getIsPinned", "leafColumnIds", "isLeft", "isRight", "getPinnedIndex", "getCenterVisibleCells", "_getAllVisibleCells", "allCells", "leftAndRight", "debugRows", "getLeftVisibleCells", "getRightVisibleCells", "resetColumnPinning", "getIsSomeColumnsPinned", "_pinningState$positio", "pinningState", "_pinningState$left", "_pinningState$right", "getLeftLeafColumns", "getRightLeafColumns", "getCenterLeafColumns", "RowSelection", "rowSelection", "onRowSelectionChange", "enableRowSelection", "enableMultiRowSelection", "enableSubRowSelection", "setRowSelection", "resetRowSelection", "_table$initialState$r", "toggleAllRowsSelected", "getIsAllRowsSelected", "preGroupedFlatRows", "getCanSelect", "toggleAllPageRowsSelected", "resolvedValue", "getIsAllPageRowsSelected", "mutateRowIsSelected", "getPreSelectedRowModel", "getSelectedRowModel", "rowModel", "selectRowsFn", "getFilteredSelectedRowModel", "getGroupedSelectedRowModel", "isAllRowsSelected", "paginationFlatRows", "isAllPageRowsSelected", "getIsSomeRowsSelected", "_table$getState$rowSe", "totalSelected", "getIsSomePageRowsSelected", "getIsSelected", "getIsSomeSelected", "getToggleAllRowsSelectedHandler", "target", "checked", "getToggleAllPageRowsSelectedHandler", "toggleSelected", "isSelected", "selectedRowIds", "isRowSelected", "isSubRowSelected", "getIsAllSubRowsSelected", "getCanSelectSubRows", "getCanMultiSelect", "getToggleSelectedHandler", "canSelect", "_target", "getRow", "newSelectedFlatRows", "newSelectedRowsById", "recurseRows", "_row$subRows2", "selection", "_selection$row$id", "allChildrenSelected", "someSelected", "subRow", "reSplitAlphaNumeric", "alphanumeric", "rowA", "rowB", "compareAlphanumeric", "alphanumericCaseSensitive", "text", "compareBasic", "textCaseSensitive", "datetime", "basic", "aStr", "bStr", "aa", "bb", "an", "parseInt", "bn", "combo", "sortingFns", "Sorting", "sorting", "sortingFn", "sortUndefined", "onSortingChange", "isMultiSortEvent", "shiftKey", "getAutoSortingFn", "firstRows", "slice", "isString", "getAutoSortDir", "getSortingFn", "_table$options$sortin", "_table$options$sortin2", "toggleSorting", "desc", "multi", "nextSortingOrder", "getNextSortingOrder", "hasManualValue", "setSorting", "existingSorting", "existingIndex", "newSorting", "sortAction", "nextDesc", "getCanMultiSort", "_table$options$maxMul", "maxMultiSortColCount", "getFirstSortDir", "_column$columnDef$sor", "sortDescFirst", "firstSortDirection", "isSorted", "getIsSorted", "enableSortingRemoval", "enableMultiRemove", "getCanSort", "enableSorting", "enableMultiSort", "_table$getState$sorti", "columnSort", "getSortIndex", "_table$getState$sorti2", "_table$getState$sorti3", "clearSorting", "getToggleSortingHandler", "canSort", "resetSorting", "_table$initialState$s", "getPreSortedRowModel", "_getSortedRowModel", "manualSorting", "Visibility", "columnVisibility", "onColumnVisibilityChange", "toggleVisibility", "getCanHide", "setColumnVisibility", "enableHiding", "getToggleVisibilityHandler", "getAllCells", "cells", "getVisibleCells", "makeVisibleColumnsMethod", "getColumns", "getVisibleFlatColumns", "getAllFlatColumns", "getCenterVisibleLeafColumns", "resetColumnVisibility", "toggleAllColumnsVisible", "_value", "getIsAllColumnsVisible", "getIsSomeColumnsVisible", "getToggleAllColumnsVisibilityHandler", "features", "_options$initialState", "defaultOptions", "mergeOptions", "_feature$getInitialSt", "queuedTimeout", "coreInstance", "cb", "Promise", "resolve", "then", "catch", "error", "setTimeout", "reset", "setOptions", "newOptions", "onStateChange", "_getRowId", "getRowId", "_getCoreRowModel", "defaultColumn", "_defaultColumn", "_props$renderValue$to", "_props$renderValue", "renderValue", "_getColumnDefs", "columnDefs", "recurseColumns", "groupingColumnDef", "_getAllFlatColumnsById", "flatColumns", "acc", "getRenderValue", "_cell$getValue", "renderFallbackValue", "rowIndex", "parentId", "_valuesCache", "_uniqueValuesCache", "getUniqueValues", "getLeafRows", "getParentRow", "getParentRows", "parentRows", "currentRow", "parentRow", "getCoreRowModel", "table", "memo", "options", "data", "rowModel", "rows", "flatRows", "rowsById", "accessRows", "originalRows", "depth", "parentRow", "i", "length", "row", "createRow", "_getRowId", "undefined", "id", "push", "getSubRows", "_row$originalSubRows", "originalSubRows", "subRows", "key", "process", "debug", "_table$options$debugA", "debugAll", "debugTable", "onChange", "_autoResetPageIndex", "filterRows", "filterRowImpl", "filterFromLeafRows", "filterRowModelFromLeafs", "filterRowModelFromRoot", "rowsToFilter", "filterRow", "_table$options$maxLea", "newFilteredFlatRows", "newFilteredRowsById", "maxDepth", "maxLeafRowFilterDepth", "recurseFilterRows", "_row$subRows", "newRow", "original", "index", "parentId", "columnFilters", "_table$options$maxLea2", "_row$subRows2", "getFilteredRowModel", "getPreFilteredRowModel", "getState", "globalFilter", "columnFiltersMeta", "resolvedColumnFilters", "resolvedGlobalFilters", "forEach", "d", "_filterFn$resolveFilt", "column", "getColumn", "filterFn", "getFilterFn", "resolvedValue", "resolveFilterValue", "value", "filterableIds", "map", "globalFilterFn", "getGlobalFilterFn", "globallyFilterableColumns", "getAllLeafColumns", "filter", "getCanGlobalFilter", "_globalFilterFn$resol", "currentColumnFilter", "currentGlobalFilter", "j", "filterMeta", "__global__", "filterRowsImpl", "getFacetedRowModel", "columnId", "preRowModel", "Boolean", "getFacetedUniqueValues", "_table$getColumn", "facetedRowModel", "Map", "facetedUniqueValues", "values", "getUniqueValues", "has", "_facetedUniqueValues$", "set", "get", "getFacetedMinMaxValues", "_facetedRowModel$flat", "firstValue", "facetedMinMaxValues", "getSortedRowModel", "sorting", "getPreSortedRowModel", "sortingState", "sortedFlatRows", "availableSorting", "sort", "getCanSort", "columnInfoById", "sortEntry", "sortUndefined", "columnDef", "invertSorting", "sortingFn", "getSortingFn", "sortData", "sortedData", "rowA", "rowB", "_sortEntry$desc", "columnInfo", "isDesc", "desc", "sortInt", "aValue", "getValue", "bValue", "aUndefined", "bUndefined", "flexRender", "Comp", "props", "isReactComponent", "createElement", "component", "isClassComponent", "isExoticComponent", "proto", "Object", "getPrototypeOf", "prototype", "$$typeof", "includes", "description", "useReactTable", "options", "resolvedOptions", "state", "onStateChange", "renderFallbackValue", "tableRef", "useState", "current", "createTable", "setState", "initialState", "setOptions", "prev", "updater", "_extends", "target", "i", "source", "key", "_extends", "target", "i", "source", "key", "memo", "getDeps", "fn", "opts", "_opts$initialDeps", "deps", "initialDeps", "result", "depTime", "key", "debug", "Date", "now", "newDeps", "depsChanged", "length", "some", "dep", "index", "resultTime", "depEndTime", "Math", "round", "resultEndTime", "resultFpsPercentage", "pad", "str", "num", "String", "console", "info", "max", "min", "onChange", "notUndefined", "value", "msg", "undefined", "Error", "approxEqual", "a", "b", "abs", "defaultKeyExtractor", "index", "defaultRangeExtractor", "range", "start", "Math", "max", "startIndex", "overscan", "end", "min", "endIndex", "count", "arr", "i", "push", "observeElementRect", "instance", "cb", "element", "scrollElement", "handler", "rect", "width", "height", "round", "getBoundingClientRect", "observer", "ResizeObserver", "entries", "entry", "borderBoxSize", "box", "inlineSize", "blockSize", "observe", "unobserve", "observeElementOffset", "instance", "cb", "element", "scrollElement", "handler", "options", "horizontal", "addEventListener", "passive", "removeEventListener", "measureElement", "element", "entry", "instance", "borderBoxSize", "box", "size", "Math", "round", "options", "horizontal", "getBoundingClientRect", "elementScroll", "offset", "instance", "_instance$scrollEleme3", "_instance$scrollEleme4", "_ref2$adjustments", "_ref2", "adjustments", "behavior", "toOffset", "scrollElement", "scrollTo", "options", "horizontal", "Virtualizer", "opts", "_this", "unsubs", "isScrolling", "isScrollingTimeoutId", "scrollToIndexTimeoutId", "measurementsCache", "itemSizeCache", "Map", "pendingMeasuredCacheIndexes", "scrollDirection", "scrollAdjustments", "measureElementCache", "observer", "_ro", "get", "ResizeObserver", "entries", "forEach", "entry", "_measureElement", "target", "disconnect", "_get", "observe", "_get2", "box", "unobserve", "_get3", "range", "startIndex", "endIndex", "setOptions", "Object", "_ref3", "key", "value", "_extends", "debug", "initialOffset", "overscan", "paddingStart", "paddingEnd", "scrollPaddingStart", "scrollPaddingEnd", "getItemKey", "defaultKeyExtractor", "rangeExtractor", "defaultRangeExtractor", "onChange", "measureElement", "initialRect", "width", "height", "scrollMargin", "scrollingDelay", "indexAttribute", "initialMeasurementsCache", "lanes", "notify", "cleanup", "filter", "Boolean", "d", "_didMount", "_willUpdate", "getScrollElement", "_scrollToOffset", "scrollOffset", "undefined", "push", "observeElementRect", "rect", "prev", "scrollRect", "maybeNotify", "observeElementOffset", "clearTimeout", "setTimeout", "getSize", "memoOptions", "memo", "count", "getFurthestMeasurement", "measurements", "index", "furthestMeasurementsFound", "furthestMeasurements", "m", "measurement", "has", "lane", "previousFurthestMeasurement", "end", "set", "size", "Array", "from", "values", "sort", "a", "b", "getMeasurements", "_ref4", "min", "length", "Math", "slice", "i", "furthestMeasurement", "start", "measuredSize", "estimateSize", "process", "calculateRange", "outerSize", "initialDeps", "getIndexes", "indexFromElement", "node", "attributeName", "indexStr", "getAttribute", "parseInt", "console", "warn", "_this$itemSizeCache$g", "item", "prevNode", "isConnected", "measuredItemSize", "itemSize", "delta", "getVirtualItems", "indexes", "virtualItems", "k", "len", "getVirtualItemForOffset", "notUndefined", "findNearestBinarySearch", "getOffsetForAlignment", "align", "scrollSizeProp", "scrollSize", "document", "documentElement", "maxOffset", "max", "getOffsetForIndex", "isDynamicMode", "cancelScrollToIndex", "scrollToOffset", "_temp", "_ref5", "_ref5$align", "scrollToIndex", "_temp2", "_ref6", "_ref6$align", "initialAlign", "_this$getOffsetForInd", "elementInDOM", "_this$getOffsetForInd2", "approxEqual", "scrollBy", "_temp3", "_ref7", "getTotalSize", "_this$getMeasurements", "_ref8", "scrollToFn", "measure", "low", "high", "getCurrentValue", "middle", "currentValue", "_ref9", "getOffset", "useIsomorphicLayoutEffect", "document", "useLayoutEffect", "useEffect", "useVirtualizerBase", "options", "rerender", "useReducer", "resolvedOptions", "_extends", "onChange", "instance", "React", "useState", "Virtualizer", "_React$useState", "setOptions", "_didMount", "_willUpdate", "useVirtualizer", "observeElementRect", "observeElementOffset", "scrollToFn", "elementScroll", "createRoot", "container", "children", "G", "hn", "findFirstItemInView", "scrollContainer", "items", "extraPadding", "pad", "container", "top", "left", "bottom", "right", "i", "el", "y", "x", "getStyle", "styleProp", "FilterNumeric", "props", "editing", "setEditing", "h", "range", "from", "to", "onRangeChange", "Cn", "FilterNumericImpl", "x", "FilterNumericImpl", "props", "min", "max", "editing", "onFocus", "minInputRef", "_", "maxInputRef", "Cn", "e", "createPlaceholder", "value", "coerceToNum", "label", "useFilter", "enabled", "getFilteredRowModel", "getFacetedRowModel", "getFacetedUniqueValues", "getFacetedMinMaxValues", "row", "columnId", "value", "addMeta", "Filter", "header", "className", "props", "from", "to", "FilterNumeric", "Cn", "e", "ImmutableSet", "_ImmutableSet", "set", "values", "value", "newSet", "useSelection", "mode", "keyAccessor", "focusOffset", "between", "selectedKeys", "setSelectedKeys", "h", "ImmutableSet", "anchor", "setAnchor", "onMouseDown", "event", "el", "key", "result", "performMouseDownAction", "onKeyDown", "selected", "targetKey", "isMac", "shiftKey", "altKey", "ctrlKey", "toSelect", "sortCommonProps", "x", "sortPathCommonProps", "sortArrowUp", "Cn", "sortArrowDown", "SortArrow", "direction", "useTabindexGroup", "container", "focusableItems", "extraPadding", "tabIndex", "setTabIndex", "h", "onFocus", "Cn", "event", "findFirstItemInView", "onBlur", "useSummary", "summaryTemplate", "scrollContainer", "virtualRows", "thead", "nrows", "F", "summaryOption", "template", "top", "bot", "firstIndex", "lastIndex", "findRangeIndex", "vrow", "start", "firstRow", "lastRow", "summaryMessage", "formatSummary", "Cn", "end", "items", "map", "first", "last", "i", "item", "total", "substr", "token", "ShinyDataGrid", "props", "id", "data", "bgcolor", "columns", "index", "type_hints", "rowData", "width", "height", "withFilters", "keyToIndex", "value", "containerRef", "_", "theadRef", "tbodyRef", "coldefs", "F", "colname", "i", "typeHint", "row", "dataClone", "filterOpts", "useFilter", "options", "getCoreRowModel", "getSortedRowModel", "table", "useReactTable", "rowVirtualizer", "useVirtualizer", "y", "totalSize", "virtualRows", "paddingTop", "paddingBottom", "summary", "useSummary", "tableStyle", "containerClass", "tableClass", "rowSelectionMode", "canSelect", "canMultiSelect", "rowSelection", "useSelection", "el", "key", "offset", "rowModel", "targetKey", "fromKey", "toKey", "findKeysBetween", "p", "tbodyTabItems", "Cn", "tbodyTabGroup", "useTabindexGroup", "headerRowCount", "scrollingClass", "makeHeaderKeyDown", "column", "event", "measureEl", "useVirtualizerMeasureWorkaround", "headerGroup", "header", "flexRender", "SortArrow", "Filter", "virtualRow", "cell", "fromIdx", "toIdx", "keys", "measureTodoQueue", "measureElementWithRetry", "T", "ShinyDataFrameOutputBinding", "scope", "err", "getComputedBgColor", "bgColor", "getStyle", "m", "bgImage", "cssTemplate", "styles_default", "ShinyDataFrameOutput", "target", "myDiv", "createRoot", "dataEl", "mn"]
}
