{
  "version": 3,
  "sources": ["../../../../srcts/src/components/_utils.ts", "../../../../srcts/src/components/accordion.ts"],
  "sourcesContent": ["import type { HtmlDep } from \"rstudio-shiny/srcts/types/src/shiny/render\";\n\nimport type { InputBinding as InputBindingType } from \"rstudio-shiny/srcts/types/src/bindings/input\";\n\n// Exclude undefined from T\ntype NotUndefined<T> = T extends undefined ? never : T;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst InputBinding = (\n  window.Shiny ? Shiny.InputBinding : class {}\n) as typeof InputBindingType;\n\nfunction registerBinding(\n  inputBindingClass: new () => InputBindingType,\n  name: string\n): void {\n  if (window.Shiny) {\n    Shiny.inputBindings.register(new inputBindingClass(), \"bslib.\" + name);\n  }\n}\n\n// Return true if the key exists on the object and the value is not undefined.\n//\n// This method is mainly used in input bindings' `receiveMessage` method.\n// Since we know that the values are sent by Shiny via `{jsonlite}`,\n// then we know that there are no `undefined` values. `null` is possible, but not `undefined`.\nfunction hasDefinedProperty<\n  Prop extends keyof X,\n  X extends { [key: string]: any }\n>(\n  obj: X,\n  prop: Prop\n): obj is X & { [key in NonNullable<Prop>]: NotUndefined<X[key]> } {\n  return (\n    Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined\n  );\n}\n\n// TODO: Shiny should trigger resize events when the output\n// https://github.com/rstudio/shiny/pull/3682\nfunction doWindowResizeOnElementResize(el: HTMLElement): void {\n  if ($(el).data(\"window-resize-observer\")) {\n    return;\n  }\n  const resizeEvent = new Event(\"resize\");\n  const ro = new ResizeObserver(() => {\n    window.dispatchEvent(resizeEvent);\n  });\n  ro.observe(el);\n  $(el).data(\"window-resize-observer\", ro);\n}\n\nfunction getAllFocusableChildren(el: HTMLElement): HTMLElement[] {\n  // Cross-referenced with https://allyjs.io/data-tables/focusable.html\n  const base = [\n    \"a[href]\",\n    \"area[href]\",\n    \"button\",\n    \"details summary\",\n    \"input\",\n    \"iframe\",\n    \"select\",\n    \"textarea\",\n    '[contentEditable=\"\"]',\n    '[contentEditable=\"true\"]',\n    '[contentEditable=\"TRUE\"]',\n    \"[tabindex]\",\n  ];\n  const modifiers = [':not([tabindex=\"-1\"])', \":not([disabled])\"];\n  const selectors = base.map((b) => b + modifiers.join(\"\"));\n  const focusable = el.querySelectorAll(selectors.join(\", \"));\n  return Array.from(focusable) as HTMLElement[];\n}\n\nexport {\n  InputBinding,\n  registerBinding,\n  hasDefinedProperty,\n  doWindowResizeOnElementResize,\n  getAllFocusableChildren,\n};\nexport type { HtmlDep };\n", "import type { HtmlDep } from \"./_utils\";\nimport { InputBinding, registerBinding, hasDefinedProperty } from \"./_utils\";\n\ntype AccordionItem = {\n  item: HTMLElement;\n  value: string;\n  isOpen: () => boolean;\n  show: () => void;\n  hide: () => void;\n};\n\ntype HTMLContent = {\n  html: string;\n  deps?: HtmlDep[];\n};\n\ntype SetMessage = {\n  method: \"set\";\n  values: string[];\n};\n\ntype OpenMessage = {\n  method: \"open\";\n  values: string[] | true;\n};\n\ntype CloseMessage = {\n  method: \"close\";\n  values: string[] | true;\n};\n\ntype InsertMessage = {\n  method: \"insert\";\n  panel: HTMLContent;\n  target: string;\n  position: \"after\" | \"before\";\n};\n\ntype RemoveMessage = {\n  method: \"remove\";\n  target: string[];\n};\n\ntype UpdateMessage = {\n  method: \"update\";\n  target: string;\n  value: string;\n  body: HTMLContent;\n  title: HTMLContent;\n  icon: HTMLContent;\n};\n\ntype MessageData =\n  | CloseMessage\n  | InsertMessage\n  | OpenMessage\n  | RemoveMessage\n  | SetMessage\n  | UpdateMessage;\n\nclass AccordionInputBinding extends InputBinding {\n  find(scope: HTMLElement) {\n    return $(scope).find(\".accordion.bslib-accordion-input\");\n  }\n\n  getValue(el: HTMLElement): string[] | null {\n    const items = this._getItemInfo(el);\n    const selected = items.filter((x) => x.isOpen()).map((x) => x.value);\n    return selected.length === 0 ? null : selected;\n  }\n\n  subscribe(el: HTMLElement, callback: (x: boolean) => void) {\n    $(el).on(\n      \"shown.bs.collapse.accordionInputBinding hidden.bs.collapse.accordionInputBinding\",\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      function (event) {\n        callback(true);\n      }\n    );\n  }\n\n  unsubscribe(el: HTMLElement) {\n    $(el).off(\".accordionInputBinding\");\n  }\n\n  receiveMessage(el: HTMLElement, data: MessageData) {\n    const method = data.method;\n    if (method === \"set\") {\n      this._setItems(el, data);\n    } else if (method === \"open\") {\n      this._openItems(el, data);\n    } else if (method === \"close\") {\n      this._closeItems(el, data);\n    } else if (method === \"remove\") {\n      this._removeItem(el, data);\n    } else if (method === \"insert\") {\n      this._insertItem(el, data);\n    } else if (method === \"update\") {\n      this._updateItem(el, data);\n    } else {\n      throw new Error(`Method not yet implemented: ${method}`);\n    }\n  }\n\n  protected _setItems(el: HTMLElement, data: SetMessage) {\n    const items = this._getItemInfo(el);\n    const vals = this._getValues(el, items, data.values);\n    items.forEach((x) => {\n      vals.indexOf(x.value) > -1 ? x.show() : x.hide();\n    });\n  }\n\n  protected _openItems(el: HTMLElement, data: OpenMessage) {\n    const items = this._getItemInfo(el);\n    const vals = this._getValues(el, items, data.values);\n    items.forEach((x) => {\n      if (vals.indexOf(x.value) > -1) x.show();\n    });\n  }\n\n  protected _closeItems(el: HTMLElement, data: CloseMessage) {\n    const items = this._getItemInfo(el);\n    const vals = this._getValues(el, items, data.values);\n    items.forEach((x) => {\n      if (vals.indexOf(x.value) > -1) x.hide();\n    });\n  }\n\n  protected _insertItem(el: HTMLElement, data: InsertMessage) {\n    let targetItem = this._findItem(el, data.target);\n\n    // If no target was specified, or the target was not found, then default\n    // to the first or last item, depending on the position\n    if (!targetItem) {\n      targetItem = (\n        data.position === \"before\" ? el.firstElementChild : el.lastElementChild\n      ) as HTMLElement;\n    }\n\n    const panel = data.panel;\n\n    // If there is still no targetItem, then there are no items in the accordion\n    if (targetItem) {\n      Shiny.renderContent(\n        targetItem,\n        panel,\n        data.position === \"before\" ? \"beforeBegin\" : \"afterEnd\"\n      );\n    } else {\n      Shiny.renderContent(el, panel);\n    }\n\n    // Need to add a reference to the parent id that makes autoclose to work\n    if (this._isAutoClosing(el)) {\n      const val = $(panel.html).attr(\"data-value\");\n      $(el)\n        .find(`[data-value=\"${val}\"] .accordion-collapse`)\n        .attr(\"data-bs-parent\", \"#\" + el.id);\n    }\n  }\n\n  protected _removeItem(el: HTMLElement, data: RemoveMessage) {\n    const targetItems = this._getItemInfo(el).filter(\n      (x) => data.target.indexOf(x.value) > -1\n    );\n\n    const unbindAll = Shiny?.unbindAll;\n\n    targetItems.forEach((x) => {\n      if (unbindAll) unbindAll(x.item);\n      x.item.remove();\n    });\n  }\n\n  protected _updateItem(el: HTMLElement, data: UpdateMessage) {\n    const target = this._findItem(el, data.target);\n\n    if (!target) {\n      throw new Error(\n        `Unable to find an accordion_panel() with a value of ${data.target}`\n      );\n    }\n\n    if (hasDefinedProperty(data, \"value\")) {\n      target.dataset.value = data.value;\n    }\n\n    if (hasDefinedProperty(data, \"body\")) {\n      const body = target.querySelector(\".accordion-body\") as HTMLElement; // always exists\n      Shiny.renderContent(body, data.body);\n    }\n\n    const header = target.querySelector(\".accordion-header\") as HTMLElement; // always exists\n\n    if (hasDefinedProperty(data, \"title\")) {\n      const title = header.querySelector(\".accordion-title\") as HTMLElement; // always exists\n      Shiny.renderContent(title, data.title);\n    }\n\n    if (hasDefinedProperty(data, \"icon\")) {\n      const icon = header.querySelector(\n        \".accordion-button > .accordion-icon\"\n      ) as HTMLElement; // always exists\n      Shiny.renderContent(icon, data.icon);\n    }\n  }\n\n  protected _getItemInfo(el: HTMLElement): AccordionItem[] {\n    const items = Array.from(\n      el.querySelectorAll(\":scope > .accordion-item\")\n    ) as HTMLElement[];\n    return items.map((x) => this._getSingleItemInfo(x));\n  }\n\n  protected _getSingleItemInfo(x: HTMLElement): AccordionItem {\n    const collapse = x.querySelector(\".accordion-collapse\") as HTMLElement;\n    const isOpen = () => $(collapse).hasClass(\"show\");\n    return {\n      item: x,\n      value: x.dataset.value as string,\n      isOpen: isOpen,\n      show: () => {\n        if (!isOpen()) $(collapse).collapse(\"show\");\n      },\n      hide: () => {\n        if (isOpen()) $(collapse).collapse(\"hide\");\n      },\n    };\n  }\n\n  protected _getValues(\n    el: HTMLElement,\n    items: AccordionItem[],\n    values: string[] | true\n  ): string[] {\n    let vals = values !== true ? values : items.map((x) => x.value);\n    const autoclose = this._isAutoClosing(el);\n    if (autoclose) {\n      vals = vals.slice(vals.length - 1, vals.length);\n    }\n    return vals;\n  }\n\n  protected _findItem(el: HTMLElement, value: string): HTMLElement | null {\n    return el.querySelector(`[data-value=\"${value}\"]`);\n  }\n\n  protected _isAutoClosing(el: HTMLElement): boolean {\n    return el.classList.contains(\"autoclose\");\n  }\n}\n\nregisterBinding(AccordionInputBinding, \"accordion\");\n"],
  "mappings": "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",
  "names": ["InputBinding", "registerBinding", "inputBindingClass", "name", "hasDefinedProperty", "obj", "prop", "AccordionInputBinding", "InputBinding", "scope", "el", "selected", "x", "callback", "event", "data", "method", "items", "vals", "targetItem", "panel", "val", "targetItems", "unbindAll", "target", "hasDefinedProperty", "body", "header", "title", "icon", "collapse", "isOpen", "values", "value", "registerBinding"]
}
