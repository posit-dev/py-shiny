# ui.remove_ui { #shiny.ui.remove_ui }

`ui.remove_ui(selector, multiple=False, immediate=False, session=None)`

Remove UI objects.

## Parameters

<code><span class="parameter-name">selector</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[str](`str`)</span></code>

:   A string that is accepted by jQuery's selector (i.e. the string ``x`` to be
    placed in a ``$(x)`` jQuery call), which determines the element(s) to remove. If
    you want to remove a Shiny input or output, note that many of these are wrapped
    in ``<div>``s, so you may need to use a somewhat complex selector â€” see the
    Examples below. (Alternatively, you could also wrap the inputs/outputs that you
    want to be able to remove easily in a ``<div>`` with an id.)

<code><span class="parameter-name">multiple</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   In case your selector matches more than one element, ``multiple`` determines
    whether Shiny should insert the UI object relative to all matched elements
    or just relative to the first matched element (default).

<code><span class="parameter-name">immediate</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   Whether the UI object should be immediately inserted or removed, or whether
    Shiny should wait until all outputs have been updated and all effects have been
    run (default).

<code><span class="parameter-name">session</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[Session](`shiny.session.Session`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   A [](:class:`~shiny.Session`) instance. If not provided, it is inferred via
    [](:func:`~shiny.session.get_current_session`).

## See Also

[](:func:`~shiny.ui.insert_ui`)
[](:func:`~shiny.render.ui`)

## Examples


```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400
## file: app.py
from shiny import App, Inputs, Outputs, Session, reactive, ui

app_ui = ui.page_fluid(
    ui.input_action_button("rmv", "Remove UI"),
    ui.input_text("txt", "Click button above to remove me"),
)


def server(input: Inputs, output: Outputs, session: Session):
    @reactive.Effect
    @reactive.event(input.rmv)
    def _():
        ui.remove_ui(selector="div:has(> #txt)")


app = App(app_ui, server)

```

