# ui.output_ui { #shiny.ui.output_ui }

`ui.output_ui(id, inline=False, container=None, fill=False, fillable=False, **kwargs)`

Create a output container for a UI (i.e., HTML) element.

## Parameters

<code><span class="parameter-name">id</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[str](`str`)</span></code>

:   An output id.

<code><span class="parameter-name">inline</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   If ``True``, the result is displayed inline.

<code><span class="parameter-name">container</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[TagFunction](`htmltools.TagFunction`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   A Callable that returns the output container.

<code><span class="parameter-name">fill</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   Whether or not to allow the UI output to grow/shrink to fit a fillable container
    with an opinionated height (e.g., [](:func:`~shiny.ui.page_fillable`)).

<code><span class="parameter-name">fillable</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   Whether or not the UI output area should be considered a fillable (i.e.,
    flexbox) container.

<code><span class="parameter-name">**kwargs</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagAttrValue](`htmltools.TagAttrValue`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">{}</span></code>

:   Attributes to be applied to the output container.

## Returns

| Type                   | Description   |
|------------------------|---------------|
| [Tag](`htmltools.Tag`) | A UI element  |

## See Also

* [](:func:`~shiny.render.ui`)
* [](:func:`~shiny.ui.output_text`)

## Examples

```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400

## file: app.py
from shiny import App, Inputs, Outputs, Session, reactive, render, ui

app_ui = ui.page_fluid(
    ui.input_action_button("add", "Add more controls"),
    ui.output_ui("moreControls"),
)


def server(input: Inputs, output: Outputs, session: Session):
    @render.ui
    @reactive.event(input.add)
    def moreControls():
        return ui.TagList(
            ui.input_slider("n", "N", min=1, max=1000, value=500),
            ui.input_text("label", "Label"),
        )


app = App(app_ui, server)
```