# ui.fill.remove_all_fill { #shiny.ui.fill.remove_all_fill }

`ui.fill.remove_all_fill(tag)`

Remove any filling layouts from a tag.

Filling layouts are built on the foundation of _fillable containers_ and _fill
items_ (_fill carriers_ are both _fillable containers_ and _fill items_). This is
why most UI components (e.g., [](:func:`~shiny.ui.card`),
[](:func:`~shiny.ui.layout_sidebar`)) possess both `fillable` and `fill` arguments (to
control their fill behavior). However, sometimes it&#x27;s useful to add, remove, and/or
test fillable/fill properties on arbitrary [](:class:`~htmltools.Tag`), which these
functions are designed to do.

## Parameters

<code><span class="parameter-name">tag</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagT](`shiny.ui.fill._fill.TagT`)</span></code>

:   a Tag object.

## Returns

| Type                               | Description                                                                         |
|------------------------------------|-------------------------------------------------------------------------------------|
| [TagT](`shiny.ui.fill._fill.TagT`) | The original [](:class:`~htmltools.Tag`) object with filling layout attributes removed. |




## See Also

* [](:func:`~shiny.ui.fill.as_fill_item`)
* [](:func:`~shiny.ui.fill.as_fillable_container`)