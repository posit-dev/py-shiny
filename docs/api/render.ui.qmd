# render.ui { #shiny.render.ui }

`render.ui()`

Reactively render HTML content.

## Returns

| Type   | Description                                                                            |
|--------|----------------------------------------------------------------------------------------|
|        | A decorator for a function that returns an object of type [](:class:`~shiny.ui.TagChild`). |

## Tip

The name of the decorated function (or ``@output(id=...)``) should match the ``id``
of a [](:func:`~shiny.ui.output_ui`) container (see [](:func:`~shiny.ui.output_ui`) for
example usage).



## See Also

* [](:func:`~shiny.ui.output_ui`)

## Examples

```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400

## file: app.py
from shiny import App, Inputs, Outputs, Session, reactive, render, ui

app_ui = ui.page_fluid(
    ui.input_action_button("add", "Add more controls"),
    ui.output_ui("moreControls"),
)


def server(input: Inputs, output: Outputs, session: Session):
    @render.ui
    @reactive.event(input.add)
    def moreControls():
        return ui.TagList(
            ui.input_slider("n", "N", min=1, max=1000, value=500),
            ui.input_text("label", "Label"),
        )


app = App(app_ui, server)
```