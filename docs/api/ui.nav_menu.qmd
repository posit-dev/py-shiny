# ui.nav_menu { #shiny.ui.nav_menu }

`ui.nav_menu(title, *args, value=None, icon=None, align='left')`

Create a menu of nav items.

## Parameters

<code><span class="parameter-name">title</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span></code>

:   A title to display. Can be a character string or UI elements (i.e., tags).

<code><span class="parameter-name">*args</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[NavPanel](`shiny.ui._navs.NavPanel`) \| [str](`str`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">()</span></code>

:   A collection of nav items (e.g., [](:func:`~shiny.ui.nav_panel`)) and/or strings.
    Strings will be rendered as a section header unless the string is a set
    of two or more hyphens (e.g., ``---``), in which case it will be rendered
    as a divider.

<code><span class="parameter-name">value</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   The value of the item. Use this value to determine whether the item is active
    (when an ``id`` is provided to the nav container) or to programmatically
    select the item (e.g., [](:func:`~shiny.ui.update_navs`)). You can also
    provide the value to the ``selected`` argument of the navigation container
    (e.g., [](:func:`~shiny.ui.navset_tab`)).

<code><span class="parameter-name">icon</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   An icon to appear inline with the button/link.

<code><span class="parameter-name">align</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Literal](`typing.Literal`)\['left', 'right'\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">'left'</span></code>

:   Horizontal alignment of the dropdown menu relative to dropdown toggle.

## Returns

| Type                                | Description                                         |
|-------------------------------------|-----------------------------------------------------|
| [NavMenu](`shiny.ui._navs.NavMenu`) | A UI element representing both the navigation menu. |

## See Also

* [](:func:`~shiny.ui.nav_panel`)
* [](:func:`~shiny.ui.nav_control`)
* [](:func:`~shiny.ui.nav_spacer`)
* [](:func:`~shiny.ui.navset_bar`)
* [](:func:`~shiny.ui.navset_tab`)
* [](:func:`~shiny.ui.navset_pill`)
* [](:func:`~shiny.ui.navset_underline`)
* [](:func:`~shiny.ui.navset_card_tab`)
* [](:func:`~shiny.ui.navset_card_pill`)
* [](:func:`~shiny.ui.navset_card_underline`)
* [](:func:`~shiny.ui.navset_pill_list`)
* [](:func:`~shiny.ui.navset_hidden`)



## Example

See [](:func:`~shiny.ui.nav_panel`)