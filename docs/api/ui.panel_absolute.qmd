# ui.panel_absolute { #shiny.ui.panel_absolute }

`ui.panel_absolute(*args, top=None, left=None, right=None, bottom=None, width=None, height=None, draggable=False, fixed=False, cursor='auto', **kwargs)`

Create a panel of absolutely positioned content.

Creates a `<div>` tag whose CSS position is set to absolute (or fixed if ``fixed =
True``). In HTML, absolute coordinates are specified relative to an element&#x27;s
nearest parent element whose position is not set to static (the default).
If no such parent is found, the coordinates are relative to the page borders.
If you&#x27;re not sure what that means, just keep in mind that you may get
strange results if you use this function from inside of certain types of panels.

## Parameters

<code><span class="parameter-name">*args</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`) \| [TagAttrs](`htmltools.TagAttrs`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">()</span></code>

:   UI elements to include inside the panel.

<code><span class="parameter-name">top</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Distance between the top of the panel and the top of the page or parent
    container.

<code><span class="parameter-name">left</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Distance between the left side of the panel and the left of the page or parent
    container.

<code><span class="parameter-name">right</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Distance between the right side of the panel and the right of the page or
    parent container.

<code><span class="parameter-name">bottom</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Distance between the bottom of the panel and the bottom of the page or parent
    container.

<code><span class="parameter-name">width</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Width of the panel.

<code><span class="parameter-name">height</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Height of the panel.

<code><span class="parameter-name">draggable</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   If ``True``, allows the user to move the panel by clicking and dragging.

<code><span class="parameter-name">fixed</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   Positions the panel relative to the browser window and prevents it from being
    scrolled with the rest of the page.

<code><span class="parameter-name">cursor</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Literal](`typing.Literal`)\['auto', 'move', 'default', 'inherit'\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">'auto'</span></code>

:   The type of cursor that should appear when the user mouses over the panel. Use
    ``"move"`` for a north-east-south-west icon, ``"default"`` for the usual cursor
    arrow, or ``"inherit"`` for the usual cursor behavior (including changing to an
    I-beam when the cursor is over text). The default is ``"auto"``, which is
    equivalent to ``"move" if draggable else "inherit"``.

<code><span class="parameter-name">**kwargs</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagAttrValue](`htmltools.TagAttrValue`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">{}</span></code>

:   Attributes added to the content's container tag.

## Returns

| Type                           | Description   |
|--------------------------------|---------------|
| [TagList](`htmltools.TagList`) | A UI element  |

## Tip

The position (``top``, ``left``, ``right``, ``bottom``) and size (``width``,
``height``) parameters are all optional, but you should specify exactly two of top,
bottom, and height and exactly two of left, right, and width for predictable
results.

Like most other distance parameters in Shiny, the position and size parameters take
a number (interpreted as pixels) or a valid CSS size string, such as `"100px"`
(100 pixels) or `"25%"`.

For arcane HTML reasons, to have the panel fill the page or parent,
specify 0 for ``top``, ``left``, ``right``, and ``bottom`` rather than the more
obvious `width = "100%"` and `height = "100%"`.

## Examples


```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400
## file: app.py
from shiny import App, Inputs, Outputs, Session, ui

app_ui = ui.page_fluid(
    ui.panel_title("A basic absolute panel example", "Demo"),
    ui.panel_absolute(
        ui.panel_well(
            "Drag me around!", ui.input_slider("n", "N", min=0, max=100, value=20)
        ),
        draggable=True,
        width="300px",
        right="50px",
        top="50%",
    ),
)


def server(input: Inputs, output: Outputs, session: Session):
    pass


app = App(app_ui, server)

```

