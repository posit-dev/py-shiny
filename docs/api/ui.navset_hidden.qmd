# ui.navset_hidden { #shiny.ui.navset_hidden }

`ui.navset_hidden(*args, id=None, selected=None, header=None, footer=None)`

Render nav contents without the nav items.

## Parameters

<code><span class="parameter-name">*args</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[NavSetArg](`shiny.types.NavSetArg`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">()</span></code>

:   A collection of nav items (e.g., [](:func:`shiny.ui.nav_panel`)).

<code><span class="parameter-name">id</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   If provided, will create an input value that holds the currently selected nav
    item.

<code><span class="parameter-name">selected</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   Choose a particular nav item to select by default value (should match it's
    ``value``).

<code><span class="parameter-name">header</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   UI to display above the selected content.

<code><span class="parameter-name">footer</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   UI to display below the selected content.

## See Also

* [](:func:`~shiny.ui.nav_panel`)
* [](:func:`~shiny.ui.nav_menu`)
* [](:func:`~shiny.ui.nav_control`)
* [](:func:`~shiny.ui.nav_spacer`)
* [](:func:`~shiny.ui.navset_bar`)
* [](:func:`~shiny.ui.navset_tab`)
* [](:func:`~shiny.ui.navset_pill`)
* [](:func:`~shiny.ui.navset_underline`)
* [](:func:`~shiny.ui.navset_card_tab`)
* [](:func:`~shiny.ui.navset_card_pill`)
* [](:func:`~shiny.ui.navset_card_underline`)
* [](:func:`~shiny.ui.navset_pill_list`)

## Examples


```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400
## file: app.py
from shiny import App, Inputs, Outputs, Session, reactive, ui

app_ui = ui.page_fluid(
    ui.layout_sidebar(
        ui.panel_sidebar(
            ui.input_radio_buttons(
                "controller", "Controller", ["1", "2", "3"], selected="1"
            )
        ),
        ui.panel_main(
            ui.navset_hidden(
                ui.nav_panel(None, "Panel 1 content", value="panel1"),
                ui.nav_panel(None, "Panel 2 content", value="panel2"),
                ui.nav_panel(None, "Panel 3 content", value="panel3"),
                id="hidden_tabs",
            ),
        ),
    )
)


def server(input: Inputs, output: Outputs, session: Session):
    @reactive.Effect
    @reactive.event(input.controller)
    def _():
        ui.update_navs("hidden_tabs", selected="panel" + str(input.controller()))


app = App(app_ui, server)

```

