# ui.input_radio_buttons { #shiny.ui.input_radio_buttons }

`ui.input_radio_buttons(id, label, choices, *, selected=None, inline=False, width=None)`

Create a set of radio buttons used to select an item from a list.

## Parameters

<code><span class="parameter-name">id</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[str](`str`)</span></code>

:   An input id.

<code><span class="parameter-name">label</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span></code>

:   An input label.

<code><span class="parameter-name">choices</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[ChoicesArg](`shiny.ui._input_check_radio.ChoicesArg`)</span></code>

:   Either a list of choices or a dictionary mapping choice values to labels. Note
    that if a dictionary is provided, the keys are used as the (input) values so
    that the dictionary values can hold HTML labels.

<code><span class="parameter-name">selected</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   The values that should be initially selected, if any.

<code><span class="parameter-name">inline</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[bool](`bool`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">False</span></code>

:   If ``True``, the result is displayed inline.

<code><span class="parameter-name">width</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   The CSS width, e.g. '400px', or '100%'.

## Returns

| Type                   | Description   |
|------------------------|---------------|
| [Tag](`htmltools.Tag`) | A UI element  |

## Notes

::: {.callout-note title="Server value"}
A string with the selected value.
:::



## See Also

[](:func:`~shiny.ui.update_radio_buttons`)
[](:func:`~shiny.ui.input_checkbox_group`)
[](:func:`~shiny.ui.input_checkbox`)

## Examples


```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400
## file: app.py
from shiny import App, Inputs, Outputs, Session, render, ui

app_ui = ui.page_fluid(
    ui.input_radio_buttons(
        "rb",
        "Choose one:",
        {
            "html": ui.HTML("<span style='color:red;'>Red Text</span>"),
            "text": "Normal text",
        },
    ),
    ui.output_ui("val"),
)


def server(input: Inputs, output: Outputs, session: Session):
    @render.ui
    def val():
        return "You chose " + input.rb()


app = App(app_ui, server)

```

