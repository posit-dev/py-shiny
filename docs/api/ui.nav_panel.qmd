# ui.nav_panel { #shiny.ui.nav_panel }

`ui.nav_panel(title, *args, value=None, icon=None)`

Create a nav item pointing to some internal content.

## Parameters

<code><span class="parameter-name">title</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span></code>

:   A title to display. Can be a character string or UI elements (i.e., tags).

<code><span class="parameter-name">*args</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">()</span></code>

:   UI elements to display when the item is active.

<code><span class="parameter-name">value</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   The value of the item. Use this value to determine whether the item is active
    (when an ``id`` is provided to the nav container) or to programmatically
    select the item (e.g., [](:func:`~shiny.ui.update_navs`)). You can also
    provide the value to the ``selected`` argument of the navigation container
    (e.g., [](:func:`~shiny.ui.navset_tab`)).

<code><span class="parameter-name">icon</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   An icon to appear inline with the button/link.

## See Also

* [](:func:`~shiny.ui.nav_menu`)
* [](:func:`~shiny.ui.nav_control`)
* [](:func:`~shiny.ui.nav_spacer`)
* [](:func:`~shiny.ui.navset_bar`)
* [](:func:`~shiny.ui.navset_tab`)
* [](:func:`~shiny.ui.navset_pill`)
* [](:func:`~shiny.ui.navset_underline`)
* [](:func:`~shiny.ui.navset_card_tab`)
* [](:func:`~shiny.ui.navset_card_pill`)
* [](:func:`~shiny.ui.navset_card_underline`)
* [](:func:`~shiny.ui.navset_pill_list`)
* [](:func:`~shiny.ui.navset_hidden`)

## Examples

```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400

## file: app.py
from shiny import App, Inputs, ui

app_ui = ui.page_fixed(
    ui.panel_title("Basic Nav Example"),
    ui.navset_tab(
        ui.nav_panel("One", "First tab content."),
        ui.nav_panel("Two", "Second tab content."),
    ),
)


def server(input: Inputs):
    pass


app = App(app_ui, server)
```