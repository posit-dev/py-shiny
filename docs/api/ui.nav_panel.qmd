# ui.nav_panel { #shiny.ui.nav_panel }

`ui.nav_panel(title, *args, value=None, icon=None)`

Create a nav item pointing to some internal content.

## Parameters

<code><span class="parameter-name">title</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span></code>

:   A title to display. Can be a character string or UI elements (i.e., tags).

<code><span class="parameter-name">*args</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">()</span></code>

:   UI elements to display when the item is active.

<code><span class="parameter-name">value</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[Optional](`typing.Optional`)\[[str](`str`)\]</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   The value of the item. Use this value to determine whether the item is active
    (when an ``id`` is provided to the nav container) or to programmatically
    select the item (e.g., [](:func:`~shiny.ui.update_navs`)). You can also
    provide the value to the ``selected`` argument of the navigation container
    (e.g., [](:func:`~shiny.ui.navset_tab`)).

<code><span class="parameter-name">icon</span><span class="parameter-annotation-sep">:</span> <span class="parameter-annotation">[TagChild](`htmltools.TagChild`)</span> <span class="parameter-default-sep">=</span> <span class="parameter-default">None</span></code>

:   An icon to appear inline with the button/link.

## See Also

* [](:func:`~shiny.ui.nav_menu`)
* [](:func:`~shiny.ui.nav_control`)
* [](:func:`~shiny.ui.nav_spacer`)
* [](:func:`~shiny.ui.navset_bar`)
* [](:func:`~shiny.ui.navset_tab`)
* [](:func:`~shiny.ui.navset_pill`)
* [](:func:`~shiny.ui.navset_underline`)
* [](:func:`~shiny.ui.navset_card_tab`)
* [](:func:`~shiny.ui.navset_card_pill`)
* [](:func:`~shiny.ui.navset_card_underline`)
* [](:func:`~shiny.ui.navset_pill_list`)
* [](:func:`~shiny.ui.navset_hidden`)

## Examples


```{shinylive-python}
#| standalone: true
#| components: [editor, viewer]
#| layout: vertical
#| viewerHeight: 400
## file: app.py
from typing import List

from shiny import App, Inputs, Outputs, Session, reactive, ui
from shiny.types import NavSetArg


def nav_controls(prefix: str) -> List[NavSetArg]:
    return [
        ui.nav_panel("a", prefix + ": tab a content"),
        ui.nav_panel("b", prefix + ": tab b content"),
        ui.nav_panel("c", prefix + ": tab c content"),
        ui.nav_spacer(),
        ui.nav_menu(
            "Links",
            ui.nav_control(
                ui.a(
                    "Shiny",
                    href="https://shiny.posit.co/py/",
                    target="_blank",
                )
            ),
            "----",
            "Plain text",
            "----",
            ui.nav_control(
                ui.a(
                    "Posit",
                    href="https://posit.co",
                    target="_blank",
                )
            ),
            align="right",
        ),
    ]


app_ui = ui.page_navbar(
    *nav_controls("page_navbar"),
    title="page_navbar()",
    id="navbar_id",
    footer=ui.div(
        {"style": "width:80%;margin: 0 auto"},
        ui.tags.style(
            """
            h4 {
                margin-top: 3em;
            }
            """
        ),
        ui.h4("navset_tab()"),
        ui.navset_tab(*nav_controls("navset_tab()")),
        ui.h4("navset_pill()"),
        ui.navset_pill(*nav_controls("navset_pill()")),
        ui.h4("navset_underline()"),
        ui.navset_underline(*nav_controls("navset_underline()")),
        ui.h4("navset_card_tab()"),
        ui.navset_card_tab(*nav_controls("navset_card_tab()")),
        ui.h4("navset_card_pill()"),
        ui.navset_card_pill(*nav_controls("navset_card_pill()")),
        ui.h4("navset_card_underline()"),
        ui.navset_card_underline(*nav_controls("navset_card_underline()")),
        ui.h4("navset_pill_list()"),
        ui.navset_pill_list(*nav_controls("navset_pill_list()")),
    )
)


def server(input: Inputs, output: Outputs, session: Session):
    @reactive.Effect
    def _():
        print("Current navbar page: ", input.navbar_id())


app = App(app_ui, server)

## file: __pycache__/app-basic.cpython-311.pyc
## type: binary
pw0NCgAAAAB74qZlKQEAAOMAAAAAAAAAAAAAAAAKAAAAAAAAAPPWAAAAlwBkAGQBbABtAVoBbQJaAm0DWgMBAAIAZQNqBAAAAAAAAAAAAgBlA2oFAAAAAAAAAABkAqYBAACrAQAAAAAAAAAAAgBlA2oGAAAAAAAAAAACAGUDagcAAAAAAAAAAGQDZASmAgAAqwIAAAAAAAAAAAIAZQNqBwAAAAAAAAAAZAVkBqYCAACrAgAAAAAAAAAApgIAAKsCAAAAAAAAAACmAgAAqwIAAAAAAAAAAFoIZAdlAmYCZAiEBFoJAgBlAWUIZQmmAgAAqwIAAAAAAAAAAFoKZAlTACkK6QAAAAApA9oDQXBw2gZJbnB1dHPaAnVpehFCYXNpYyBOYXYgRXhhbXBsZdoDT25lehJGaXJzdCB0YWIgY29udGVudC7aA1R3b3oTU2Vjb25kIHRhYiBjb250ZW50LtoFaW5wdXRjAQAAAAAAAAAAAAAAAQAAAAMAAADzBgAAAJcAZABTACkBTqkAKQFyCAAAAHMBAAAAIPpuL1VzZXJzL2dhcnJpY2svd29yay9wb3NpdC1kZXYvcHktc2hpbnkud29ya3RyZWVzL2V4cHJlc3MvcGFuZWwtdGl0bGUvc2hpbnkvYXBpLWV4YW1wbGVzL25hdl9wYW5lbC9hcHAtYmFzaWMucHnaBnNlcnZlcnIMAAAADAAAAHMHAAAAgADYBAiARPMAAAAATikL2gVzaGlueXIDAAAAcgQAAAByBQAAANoKcGFnZV9maXhlZNoLcGFuZWxfdGl0bGXaCm5hdnNldF90YWLaCW5hdl9wYW5lbNoGYXBwX3VpcgwAAADaA2FwcHIKAAAAcg0AAAByCwAAAPoIPG1vZHVsZT5yFQAAAAEAAABzrQAAAPADAQEB2AAh0AAh0AAh0AAh0AAh0AAh0AAh0AAh0AAh0AAh4AkWiBKMHdgEEoBChE7QEybRBCfUBCfYBBGAQoRN2AgUiAKMDJBV0Bww0Qgx1Agx2AgUiAKMDJBV0Bwx0Qgy1Agy8QUDBQb0AAMFBvEFBgoC9AAGCgKABvASAQEJkCbwAAEBCfAAAQEJ8AABAQnwAAEBCfAIAAcKgGOIJpAm0QYZ1AYZgAOAA4ADcg0AAAA=
## file: app-basic.py
from shiny import App, Inputs, ui

app_ui = ui.page_fixed(
    ui.panel_title("Basic Nav Example"),
    ui.navset_tab(
        ui.nav_panel("One", "First tab content."),
        ui.nav_panel("Two", "Second tab content."),
    ),
)


def server(input: Inputs):
    pass


app = App(app_ui, server)

```

